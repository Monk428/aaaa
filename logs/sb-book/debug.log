[19:10:10] logging - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[19:10:10] Version - HV000001: Hibernate Validator 6.0.9.Final
[19:10:10] TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[19:10:10] TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[19:10:10] TraversableResolvers - Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
[19:10:10] ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[19:10:10] ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[19:10:10] ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[19:10:10] ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[19:10:11] ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
[19:10:11] SbBookApplication - Starting SbBookApplication on wjfdeiMac.local with PID 2360 (/Users/wengjf/Server/SpringMVC/sb-book/target/classes started by wengjf in /Users/wengjf/Server/SpringMVC/sb-book)
[19:10:11] SbBookApplication - Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
[19:10:11] SbBookApplication - No active profile set, falling back to default profiles: default
[19:10:11] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[19:10:11] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[19:10:11] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[19:10:11] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[19:10:11] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[19:10:13] QuartzInitializerListener - Quartz Initializer Servlet loaded, initializing Scheduler...
[19:10:13] StdSchedulerFactory - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'qzDS'
[19:10:13] QuartzInitializerListener - Quartz Scheduler failed to initialize: org.quartz.SchedulerException: Could not initialize DataSource: qzDS [See nested exception: org.quartz.SchedulerException: ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' could not be instantiated. [See nested exception: java.lang.reflect.InvocationTargetException]]
[19:10:13] HikariConfig - Driver class com.mysql.jdbc.Driver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4fc26cc5
[19:10:13] HikariConfig - HikariPool-1 - configuration:
[19:10:13] HikariConfig - allowPoolSuspension.............false
[19:10:13] HikariConfig - autoCommit......................true
[19:10:13] HikariConfig - catalog.........................none
[19:10:13] HikariConfig - connectionInitSql...............none
[19:10:13] HikariConfig - connectionTestQuery.............none
[19:10:13] HikariConfig - connectionTimeout...............30000
[19:10:13] HikariConfig - dataSource......................none
[19:10:13] HikariConfig - dataSourceClassName.............none
[19:10:13] HikariConfig - dataSourceJNDI..................none
[19:10:13] HikariConfig - dataSourceProperties............{password=<masked>}
[19:10:13] HikariConfig - driverClassName................."com.mysql.jdbc.Driver"
[19:10:13] HikariConfig - healthCheckProperties...........{}
[19:10:13] HikariConfig - healthCheckRegistry.............none
[19:10:13] HikariConfig - idleTimeout.....................600000
[19:10:13] HikariConfig - initializationFailFast..........true
[19:10:13] HikariConfig - initializationFailTimeout.......1
[19:10:13] HikariConfig - isolateInternalQueries..........false
[19:10:13] HikariConfig - jdbc4ConnectionTest.............false
[19:10:13] HikariConfig - jdbcUrl.........................jdbc:mysql://localhost:3306/sbBook
[19:10:13] HikariConfig - leakDetectionThreshold..........0
[19:10:13] HikariConfig - maxLifetime.....................1800000
[19:10:13] HikariConfig - maximumPoolSize.................10
[19:10:13] HikariConfig - metricRegistry..................none
[19:10:13] HikariConfig - metricsTrackerFactory...........none
[19:10:13] HikariConfig - minimumIdle.....................10
[19:10:13] HikariConfig - password........................<masked>
[19:10:13] HikariConfig - poolName........................"HikariPool-1"
[19:10:13] HikariConfig - readOnly........................false
[19:10:13] HikariConfig - registerMbeans..................false
[19:10:13] HikariConfig - scheduledExecutor...............none
[19:10:13] HikariConfig - scheduledExecutorService........internal
[19:10:13] HikariConfig - schema..........................none
[19:10:13] HikariConfig - threadFactory...................internal
[19:10:13] HikariConfig - transactionIsolation............default
[19:10:13] HikariConfig - username........................"root"
[19:10:13] HikariConfig - validationTimeout...............5000
[19:10:13] HikariDataSource - HikariPool-1 - Starting...
[19:10:13] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@16266e50
[19:10:13] HikariDataSource - HikariPool-1 - Start completed.
[19:10:13] LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4fc26cc5
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/wengjf/Server/SpringMVC/sb-book/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.monk.sbbook.entity.LoginTicket
		com.monk.sbbook.entity.User]
	Mapping files names []
	Properties []
[19:10:13] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[19:10:13] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[19:10:14] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[19:10:14] IntegratorServiceImpl - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[19:10:14] HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
[19:10:14] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@799e0674
[19:10:14] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@4cec259
[19:10:14] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@1fcaabeb
[19:10:14] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@5f8af2a
[19:10:14] Version - HHH000412: Hibernate Core {5.2.16.Final}
[19:10:14] Environment - HHH000206: hibernate.properties not found
[19:10:14] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@22722564
[19:10:14] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@3492b1a9
[19:10:14] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@4cc760b2
[19:10:14] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[19:10:14] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@45022315
[19:10:14] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@26207395
[19:10:14] HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[19:10:14] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[19:10:14] Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[19:10:14] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7b93ae5a
[19:10:14] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7b93ae5a
[19:10:14] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7b93ae5a
[19:10:14] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@63e195c2
[19:10:14] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2bda07b0
[19:10:14] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fcd38bb
[19:10:14] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@39255c5f
[19:10:14] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@39255c5f
[19:10:14] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@39255c5f
[19:10:14] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5879b315
[19:10:14] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5879b315
[19:10:14] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5879b315
[19:10:14] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3fa9c172
[19:10:14] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3fa9c172
[19:10:14] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3fa9c172
[19:10:14] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@54e4ce51
[19:10:14] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@54e4ce51
[19:10:14] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@54e4ce51
[19:10:14] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@63b72660
[19:10:14] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@63b72660
[19:10:14] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@63b72660
[19:10:14] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ca434ea
[19:10:14] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ca434ea
[19:10:14] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ca434ea
[19:10:14] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@68bac4bb
[19:10:14] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@68bac4bb
[19:10:14] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68bac4bb
[19:10:14] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@a17b80f
[19:10:14] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@a17b80f
[19:10:14] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6bdf554
[19:10:14] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6bdf554
[19:10:14] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@3db0bff
[19:10:14] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@3db0bff
[19:10:14] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@59e5608e
[19:10:14] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@35bc84ef
[19:10:14] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@194bc6f4
[19:10:14] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@194bc6f4
[19:10:14] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@10e0ef3d
[19:10:14] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@10e0ef3d
[19:10:14] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2a871151
[19:10:14] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2a871151
[19:10:14] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1c09fae3
[19:10:14] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1c09fae3
[19:10:14] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1ac22b55
[19:10:14] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1ac22b55
[19:10:14] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@505bd15a
[19:10:14] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@505bd15a
[19:10:14] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37691195
[19:10:14] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37691195
[19:10:14] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4cfbce74
[19:10:14] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4cfbce74
[19:10:14] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@82553ef
[19:10:14] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@82553ef
[19:10:14] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@536b171f
[19:10:14] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@536b171f
[19:10:14] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@56b8395e
[19:10:14] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@56b8395e
[19:10:14] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5107e5df
[19:10:14] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5107e5df
[19:10:14] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5107e5df
[19:10:14] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@197a5803
[19:10:14] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@3b25fe42
[19:10:14] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3b25fe42
[19:10:14] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3b25fe42
[19:10:14] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7464123e
[19:10:14] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@51c068a9
[19:10:14] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51c068a9
[19:10:14] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5a5b0a2d
[19:10:14] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5a5b0a2d
[19:10:14] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@223aa628
[19:10:14] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@223aa628
[19:10:14] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1a18cb02
[19:10:14] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1a18cb02
[19:10:14] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7f66e95e
[19:10:14] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7f66e95e
[19:10:14] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3afbf259
[19:10:14] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@c459c4a
[19:10:14] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@c459c4a
[19:10:14] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@c459c4a
[19:10:14] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@48f3be17
[19:10:14] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@48f3be17
[19:10:14] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@48f3be17
[19:10:14] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@7436f2b6
[19:10:14] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1be5f5b5
[19:10:14] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@76e9cabf
[19:10:14] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@76e9cabf
[19:10:14] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@76e9cabf
[19:10:14] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@56ef388b
[19:10:14] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@56ef388b
[19:10:14] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@56ef388b
[19:10:14] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1ec2fb35
[19:10:14] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@58d3ce48
[19:10:14] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@61610a7b
[19:10:14] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@61610a7b
[19:10:14] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@539be145
[19:10:14] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@31e8f503
[19:10:14] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@31e8f503
[19:10:14] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@1384fc65
[19:10:14] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1384fc65
[19:10:14] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1b6bb0cd
[19:10:14] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7f1c2682
[19:10:14] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@279df6e
[19:10:14] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@59f9d09e
[19:10:14] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@59f9d09e
[19:10:14] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6ce6f693
[19:10:14] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7b0cb6b1
[19:10:14] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2e438048
[19:10:14] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5f333baf
[19:10:14] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4ba1cb4
[19:10:14] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1a1d9bac
[19:10:14] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@286e1967
[19:10:14] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6ec6b186
[19:10:14] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.22
      major : 5
      minor : 7
[19:10:14] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e )
      major : 5
      minor : 1
[19:10:14] JdbcEnvironmentInitiator - JDBC version : 4.0
[19:10:14] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[19:10:14] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[19:10:14] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[19:10:14] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[19:10:14] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[19:10:14] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[19:10:14] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[19:10:14] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[19:10:14] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[19:10:14] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[19:10:14] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[19:10:14] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[19:10:14] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[19:10:14] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[19:10:14] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[19:10:14] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[19:10:14] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[19:10:14] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[19:10:14] AnnotationBinder - Binding entity from annotated class: com.monk.sbbook.entity.LoginTicket
[19:10:14] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[19:10:14] EntityBinder - Import with entity name LoginTicket
[19:10:14] EntityBinder - Bind entity com.monk.sbbook.entity.LoginTicket on table login_ticket
[19:10:14] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_userid, insertable=true, updatable=true, unique=false}
[19:10:14] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[19:10:14] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:userId]
[19:10:14] SimpleValueBinder - building SimpleValue for userId
[19:10:14] PropertyBinder - Building property userId
[19:10:14] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_expired, insertable=true, updatable=true, unique=false}
[19:10:14] PropertyBinder - MetadataSourceProcessor property expired with lazy=false
[19:10:14] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:expired]
[19:10:14] SimpleValueBinder - building SimpleValue for expired
[19:10:14] PropertyBinder - Building property expired
[19:10:14] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_status, insertable=true, updatable=true, unique=false}
[19:10:14] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[19:10:14] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:status]
[19:10:14] SimpleValueBinder - building SimpleValue for status
[19:10:14] PropertyBinder - Building property status
[19:10:14] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_ticket, insertable=true, updatable=true, unique=false}
[19:10:14] PropertyBinder - MetadataSourceProcessor property ticket with lazy=false
[19:10:14] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:ticket]
[19:10:14] SimpleValueBinder - building SimpleValue for ticket
[19:10:14] PropertyBinder - Building property ticket
[19:10:14] AnnotationBinder - Binding entity from annotated class: com.monk.sbbook.entity.User
[19:10:14] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[19:10:14] EntityBinder - Import with entity name User
[19:10:14] EntityBinder - Bind entity com.monk.sbbook.entity.User on table user
[19:10:14] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_id, insertable=true, updatable=true, unique=false}
[19:10:14] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[19:10:14] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:id]
[19:10:14] SimpleValueBinder - building SimpleValue for id
[19:10:14] PropertyBinder - Building property id
[19:10:14] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_email, insertable=true, updatable=true, unique=false}
[19:10:14] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[19:10:14] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:email]
[19:10:14] SimpleValueBinder - building SimpleValue for email
[19:10:14] PropertyBinder - Building property email
[19:10:14] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_head_url, insertable=true, updatable=true, unique=false}
[19:10:14] PropertyBinder - MetadataSourceProcessor property headUrl with lazy=false
[19:10:14] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:headUrl]
[19:10:14] SimpleValueBinder - building SimpleValue for headUrl
[19:10:14] PropertyBinder - Building property headUrl
[19:10:14] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_mobile, insertable=true, updatable=true, unique=false}
[19:10:14] PropertyBinder - MetadataSourceProcessor property mobile with lazy=false
[19:10:14] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:mobile]
[19:10:14] SimpleValueBinder - building SimpleValue for mobile
[19:10:14] PropertyBinder - Building property mobile
[19:10:14] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_password, insertable=true, updatable=true, unique=false}
[19:10:14] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[19:10:14] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:password]
[19:10:14] SimpleValueBinder - building SimpleValue for password
[19:10:14] PropertyBinder - Building property password
[19:10:14] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_role, insertable=true, updatable=true, unique=false}
[19:10:14] PropertyBinder - MetadataSourceProcessor property role with lazy=false
[19:10:14] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:role]
[19:10:14] SimpleValueBinder - building SimpleValue for role
[19:10:14] PropertyBinder - Building property role
[19:10:14] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_salt, insertable=true, updatable=true, unique=false}
[19:10:14] PropertyBinder - MetadataSourceProcessor property salt with lazy=false
[19:10:14] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:salt]
[19:10:14] SimpleValueBinder - building SimpleValue for salt
[19:10:14] PropertyBinder - Building property salt
[19:10:14] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_username, insertable=true, updatable=true, unique=true}
[19:10:14] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[19:10:14] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:username]
[19:10:14] SimpleValueBinder - building SimpleValue for username
[19:10:14] PropertyBinder - Building property username
[19:10:14] SimpleValueBinder - Starting fillSimpleValue for userId
[19:10:14] SimpleValueBinder - Starting fillSimpleValue for expired
[19:10:14] SimpleValueBinder - Starting fillSimpleValue for status
[19:10:14] SimpleValueBinder - Starting fillSimpleValue for ticket
[19:10:14] SimpleValueBinder - Starting fillSimpleValue for id
[19:10:14] SimpleValueBinder - Starting fillSimpleValue for email
[19:10:14] SimpleValueBinder - Starting fillSimpleValue for headUrl
[19:10:14] SimpleValueBinder - Starting fillSimpleValue for mobile
[19:10:14] SimpleValueBinder - Starting fillSimpleValue for password
[19:10:14] SimpleValueBinder - Starting fillSimpleValue for role
[19:10:14] SimpleValueBinder - Starting fillSimpleValue for salt
[19:10:14] SimpleValueBinder - Starting fillSimpleValue for username
[19:10:14] PrimaryKey - Forcing column [t_userid] to be non-null as it is part of the primary key for table [login_ticket]
[19:10:14] PrimaryKey - Forcing column [t_id] to be non-null as it is part of the primary key for table [user]
[19:10:14] SessionFactoryImpl - Building session factory
[19:10:14] Settings - SessionFactory name : null
[19:10:14] Settings - Automatic flush during beforeCompletion(): enabled
[19:10:14] Settings - Automatic session close at end of transaction: disabled
[19:10:14] Settings - Statistics: disabled
[19:10:14] Settings - Deleted entity synthetic identifier rollback: disabled
[19:10:14] Settings - Default entity-mode: pojo
[19:10:14] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[19:10:14] Settings - Allow initialization of lazy state outside session : disabled
[19:10:14] Settings - Using BatchFetchStyle : LEGACY
[19:10:14] Settings - Default batch fetch size: -1
[19:10:14] Settings - Maximum outer join fetch depth: 2
[19:10:14] Settings - Default null ordering: NONE
[19:10:14] Settings - Order SQL updates by primary key: disabled
[19:10:14] Settings - Order SQL inserts for batching: disabled
[19:10:14] Settings - multi-tenancy strategy : NONE
[19:10:14] Settings - JTA Track by Thread: enabled
[19:10:14] Settings - Query language substitutions: {}
[19:10:14] Settings - JPA query language strict compliance: disabled
[19:10:14] Settings - Named query checking : enabled
[19:10:14] Settings - Second-level cache: enabled
[19:10:14] Settings - Second-level query cache: disabled
[19:10:14] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4dd01a76
[19:10:14] Settings - Second-level cache region prefix: null
[19:10:14] Settings - Optimize second-level cache for minimal puts: disabled
[19:10:14] Settings - Structured second-level cache entries: disabled
[19:10:14] Settings - Second-level cache direct-reference entries: disabled
[19:10:14] Settings - Automatic eviction of collection cache: disabled
[19:10:14] Settings - JDBC batch size: 15
[19:10:14] Settings - JDBC batch updates for versioned data: enabled
[19:10:14] Settings - Scrollable result sets: enabled
[19:10:14] Settings - Wrap result sets: disabled
[19:10:14] Settings - JDBC3 getGeneratedKeys(): enabled
[19:10:14] Settings - JDBC result set fetch size: null
[19:10:14] Settings - Connection release mode: ON_CLOSE
[19:10:14] Settings - Generate SQL with comments: disabled
[19:10:14] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[19:10:14] SessionFactoryImpl - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, com.sun.management.jmxremote.authenticate=false, java.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/tools.jar:/Users/wengjf/Server/SpringMVC/sb-book/target/classes:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.0.1.RELEASE/spring-boot-starter-web-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.0.1.RELEASE/spring-boot-starter-json-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.5/jackson-databind-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.5/jackson-core-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.9.5/jackson-datatype-jdk8-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.9.5/jackson-datatype-jsr310-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.9.5/jackson-module-parameter-names-2.9.5.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.0.1.RELEASE/spring-boot-starter-tomcat-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/8.5.29/tomcat-embed-websocket-8.5.29.jar:/Users/wengjf/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.9.Final/hibernate-validator-6.0.9.Final.jar:/Users/wengjf/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/Users/wengjf/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/wengjf/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/wengjf/.m2/repository/org/springframework/spring-web/5.0.5.RELEASE/spring-web-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-beans/5.0.5.RELEASE/spring-beans-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-webmvc/5.0.5.RELEASE/spring-webmvc-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-aop/5.0.5.RELEASE/spring-aop-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-expression/5.0.5.RELEASE/spring-expression-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/Users/wengjf/.m2/repository/org/springframework/spring-core/5.0.5.RELEASE/spring-core-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-jcl/5.0.5.RELEASE/spring-jcl-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter/2.0.1.RELEASE/spring-boot-starter-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot/2.0.1.RELEASE/spring-boot-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.0.1.RELEASE/spring-boot-autoconfigure-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:/Users/wengjf/.m2/repository/org/yaml/snakeyaml/1.19/snakeyaml-1.19.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-log4j/1.3.8.RELEASE/spring-boot-starter-log4j-1.3.8.RELEASE.jar:/Users/wengjf/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar:/Users/wengjf/.m2/repository/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar:/Users/wengjf/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/Users/wengjf/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-devtools/2.0.1.RELEASE/spring-boot-devtools-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.29/tomcat-embed-jasper-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.29/tomcat-embed-core-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.29/tomcat-annotations-api-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.29/tomcat-embed-el-8.5.29.jar:/Users/wengjf/.m2/repository/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:/Users/wengjf/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/Users/wengjf/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/Users/wengjf/.m2/repository/mysql/mysql-connector-java/5.1.46/mysql-connector-java-5.1.46.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.0.1.RELEASE/spring-boot-starter-data-jpa-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.0.1.RELEASE/spring-boot-starter-aop-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/aspectj/aspectjweaver/1.8.13/aspectjweaver-1.8.13.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.0.1.RELEASE/spring-boot-starter-jdbc-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/com/zaxxer/HikariCP/2.7.8/HikariCP-2.7.8.jar:/Users/wengjf/.m2/repository/org/springframework/spring-jdbc/5.0.5.RELEASE/spring-jdbc-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/hibernate/hibernate-core/5.2.16.Final/hibernate-core-5.2.16.Final.jar:/Users/wengjf/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/wengjf/.m2/repository/org/javassist/javassist/3.22.0-GA/javassist-3.22.0-GA.jar:/Users/wengjf/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/wengjf/.m2/repository/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/Users/wengjf/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/wengjf/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/wengjf/.m2/repository/javax/transaction/javax.transaction-api/1.2/javax.transaction-api-1.2.jar:/Users/wengjf/.m2/repository/org/springframework/data/spring-data-jpa/2.0.6.RELEASE/spring-data-jpa-2.0.6.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/data/spring-data-commons/2.0.6.RELEASE/spring-data-commons-2.0.6.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-orm/5.0.5.RELEASE/spring-orm-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-aspects/5.0.5.RELEASE/spring-aspects-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-mail/2.0.1.RELEASE/spring-boot-starter-mail-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-context/5.0.5.RELEASE/spring-context-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-context-support/5.0.5.RELEASE/spring-context-support-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/com/sun/mail/javax.mail/1.6.1/javax.mail-1.6.1.jar:/Users/wengjf/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-quartz/2.0.1.RELEASE/spring-boot-starter-quartz-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-tx/5.0.5.RELEASE/spring-tx-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/quartz-scheduler/quartz/2.3.0/quartz-2.3.0.jar:/Users/wengjf/.m2/repository/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Macau, os.name=Mac OS X, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib, com.sun.management.jmxremote.ssl=false, spring.application.admin.enabled=true, sun.java.command=com.monk.sbbook.SbBookApplication, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@15c1b9f2, com.sun.management.jmxremote=, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=/Users/wengjf, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre, spring.output.ansi.enabled=always, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=1.8.0_171-b11, user.name=wengjf, path.separator=:, os.version=10.13.2, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/, com.zaxxer.hikari.pool_number=1, catalina.home=/private/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/tomcat.8327902401505754909.8080, com.sun.management.jmxremote.port=64400, java.version=1.8.0_171, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/Users/wengjf/Server/SpringMVC/sb-book, os.arch=x86_64, PID=2360, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, catalina.base=/private/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/tomcat.8327902401505754909.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2514ae57, java.library.path=/Users/wengjf/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.171-b11, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, hibernate.connection.datasource=HikariDataSource (HikariPool-1), sun.io.unicode.encoding=UnicodeBig, java.ext.dirs=/Users/wengjf/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, java.class.version=52.0, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16}
[19:10:14] TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[19:10:14] TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[19:10:14] TraversableResolvers - Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
[19:10:14] ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[19:10:14] ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[19:10:14] ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[19:10:14] ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[19:10:14] ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
[19:10:14] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[19:10:14] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[19:10:14] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[19:10:14] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[19:10:14] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[19:10:14] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:10:14] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:10:14] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:10:14] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:10:14] JaccIntegrator - Skipping JACC integration as it was not enabled
[19:10:14] CascadeStyles - External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[19:10:14] SessionFactoryImpl - Instantiated session factory
[19:10:14] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:10:14] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:10:14] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:10:14] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:10:14] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:10:14] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:10:14] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:10:14] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:10:14] AbstractEntityPersister - Static SQL for entity: com.monk.sbbook.entity.LoginTicket
[19:10:14] AbstractEntityPersister -  Version select: select t_userid from login_ticket where t_userid =?
[19:10:14] AbstractEntityPersister -  Snapshot select: select loginticke_.t_userid, loginticke_.t_expired as t_expire2_0_, loginticke_.t_status as t_status3_0_, loginticke_.t_ticket as t_ticket4_0_ from login_ticket loginticke_ where loginticke_.t_userid=?
[19:10:14] AbstractEntityPersister -  Insert 0: insert into login_ticket (t_expired, t_status, t_ticket, t_userid) values (?, ?, ?, ?)
[19:10:14] AbstractEntityPersister -  Update 0: update login_ticket set t_expired=?, t_status=?, t_ticket=? where t_userid=?
[19:10:14] AbstractEntityPersister -  Delete 0: delete from login_ticket where t_userid=?
[19:10:14] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@593b9e5d]
[19:10:14] MetamodelGraphWalker - Visiting attribute path : expired
[19:10:14] MetamodelGraphWalker - Visiting attribute path : status
[19:10:14] MetamodelGraphWalker - Visiting attribute path : ticket
[19:10:14] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:10:14] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:10:14] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:10:14] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [NONE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:10:14] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73bf4042]
[19:10:14] MetamodelGraphWalker - Visiting attribute path : expired
[19:10:14] MetamodelGraphWalker - Visiting attribute path : status
[19:10:14] MetamodelGraphWalker - Visiting attribute path : ticket
[19:10:14] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:10:14] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:10:14] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:10:14] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [READ]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:10:14] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@846905e]
[19:10:14] MetamodelGraphWalker - Visiting attribute path : expired
[19:10:14] MetamodelGraphWalker - Visiting attribute path : status
[19:10:14] MetamodelGraphWalker - Visiting attribute path : ticket
[19:10:14] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:10:14] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:10:14] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:10:14] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:10:14] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41f2d981]
[19:10:14] MetamodelGraphWalker - Visiting attribute path : expired
[19:10:14] MetamodelGraphWalker - Visiting attribute path : status
[19:10:14] MetamodelGraphWalker - Visiting attribute path : ticket
[19:10:14] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:10:14] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:10:14] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:10:14] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE_NOWAIT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:10:14] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b10f23a]
[19:10:14] MetamodelGraphWalker - Visiting attribute path : expired
[19:10:14] MetamodelGraphWalker - Visiting attribute path : status
[19:10:14] MetamodelGraphWalker - Visiting attribute path : ticket
[19:10:14] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:10:14] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:10:14] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:10:14] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE_SKIPLOCKED]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:10:14] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15aadd3e]
[19:10:14] MetamodelGraphWalker - Visiting attribute path : expired
[19:10:14] MetamodelGraphWalker - Visiting attribute path : status
[19:10:14] MetamodelGraphWalker - Visiting attribute path : ticket
[19:10:14] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:10:14] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:10:14] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:10:14] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [FORCE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:10:14] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c0d37f2]
[19:10:14] MetamodelGraphWalker - Visiting attribute path : expired
[19:10:14] MetamodelGraphWalker - Visiting attribute path : status
[19:10:14] MetamodelGraphWalker - Visiting attribute path : ticket
[19:10:14] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:10:14] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:10:14] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:10:14] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_READ]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? lock in share mode
[19:10:14] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7444ca34]
[19:10:14] MetamodelGraphWalker - Visiting attribute path : expired
[19:10:14] MetamodelGraphWalker - Visiting attribute path : status
[19:10:14] MetamodelGraphWalker - Visiting attribute path : ticket
[19:10:14] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:10:14] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:10:14] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:10:14] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_WRITE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:10:14] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25e07c61]
[19:10:14] MetamodelGraphWalker - Visiting attribute path : expired
[19:10:14] MetamodelGraphWalker - Visiting attribute path : status
[19:10:14] MetamodelGraphWalker - Visiting attribute path : ticket
[19:10:14] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:10:14] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:10:14] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:10:14] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_FORCE_INCREMENT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:10:14] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65670972]
[19:10:14] MetamodelGraphWalker - Visiting attribute path : expired
[19:10:14] MetamodelGraphWalker - Visiting attribute path : status
[19:10:14] MetamodelGraphWalker - Visiting attribute path : ticket
[19:10:14] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:10:14] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:10:14] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:10:14] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [OPTIMISTIC]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:10:14] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58674e20]
[19:10:14] MetamodelGraphWalker - Visiting attribute path : expired
[19:10:14] MetamodelGraphWalker - Visiting attribute path : status
[19:10:14] MetamodelGraphWalker - Visiting attribute path : ticket
[19:10:14] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:10:14] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:10:14] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:10:14] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [OPTIMISTIC_FORCE_INCREMENT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:10:14] Loader - Static select for action ACTION_MERGE on entity com.monk.sbbook.entity.LoginTicket: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:10:14] Loader - Static select for action ACTION_REFRESH on entity com.monk.sbbook.entity.LoginTicket: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:10:14] AbstractEntityPersister - Static SQL for entity: com.monk.sbbook.entity.User
[19:10:14] AbstractEntityPersister -  Version select: select t_id from user where t_id =?
[19:10:14] AbstractEntityPersister -  Snapshot select: select user_.t_id, user_.t_email as t_email2_1_, user_.t_head_url as t_head_u3_1_, user_.t_mobile as t_mobile4_1_, user_.t_password as t_passwo5_1_, user_.t_role as t_role6_1_, user_.t_salt as t_salt7_1_, user_.t_username as t_userna8_1_ from user user_ where user_.t_id=?
[19:10:14] AbstractEntityPersister -  Insert 0: insert into user (t_email, t_head_url, t_mobile, t_password, t_role, t_salt, t_username, t_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[19:10:14] AbstractEntityPersister -  Update 0: update user set t_email=?, t_head_url=?, t_mobile=?, t_password=?, t_role=?, t_salt=?, t_username=? where t_id=?
[19:10:14] AbstractEntityPersister -  Delete 0: delete from user where t_id=?
[19:10:14] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@593fcca9]
[19:10:14] MetamodelGraphWalker - Visiting attribute path : email
[19:10:14] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:10:14] MetamodelGraphWalker - Visiting attribute path : mobile
[19:10:14] MetamodelGraphWalker - Visiting attribute path : password
[19:10:14] MetamodelGraphWalker - Visiting attribute path : role
[19:10:14] MetamodelGraphWalker - Visiting attribute path : salt
[19:10:14] MetamodelGraphWalker - Visiting attribute path : username
[19:10:14] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:10:14] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:10:14] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:10:14] EntityLoader - Static select for entity com.monk.sbbook.entity.User [NONE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:10:14] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ef88ec5]
[19:10:14] MetamodelGraphWalker - Visiting attribute path : email
[19:10:14] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:10:14] MetamodelGraphWalker - Visiting attribute path : mobile
[19:10:14] MetamodelGraphWalker - Visiting attribute path : password
[19:10:14] MetamodelGraphWalker - Visiting attribute path : role
[19:10:14] MetamodelGraphWalker - Visiting attribute path : salt
[19:10:14] MetamodelGraphWalker - Visiting attribute path : username
[19:10:14] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:10:14] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:10:14] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:10:14] EntityLoader - Static select for entity com.monk.sbbook.entity.User [READ]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:10:14] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25825eb7]
[19:10:14] MetamodelGraphWalker - Visiting attribute path : email
[19:10:14] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:10:14] MetamodelGraphWalker - Visiting attribute path : mobile
[19:10:14] MetamodelGraphWalker - Visiting attribute path : password
[19:10:14] MetamodelGraphWalker - Visiting attribute path : role
[19:10:14] MetamodelGraphWalker - Visiting attribute path : salt
[19:10:14] MetamodelGraphWalker - Visiting attribute path : username
[19:10:14] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:10:14] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:10:14] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:10:14] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:10:14] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47300e41]
[19:10:14] MetamodelGraphWalker - Visiting attribute path : email
[19:10:14] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:10:14] MetamodelGraphWalker - Visiting attribute path : mobile
[19:10:14] MetamodelGraphWalker - Visiting attribute path : password
[19:10:14] MetamodelGraphWalker - Visiting attribute path : role
[19:10:14] MetamodelGraphWalker - Visiting attribute path : salt
[19:10:14] MetamodelGraphWalker - Visiting attribute path : username
[19:10:14] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:10:14] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:10:14] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:10:14] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE_NOWAIT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:10:14] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ef751ad]
[19:10:14] MetamodelGraphWalker - Visiting attribute path : email
[19:10:14] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:10:14] MetamodelGraphWalker - Visiting attribute path : mobile
[19:10:14] MetamodelGraphWalker - Visiting attribute path : password
[19:10:14] MetamodelGraphWalker - Visiting attribute path : role
[19:10:14] MetamodelGraphWalker - Visiting attribute path : salt
[19:10:14] MetamodelGraphWalker - Visiting attribute path : username
[19:10:14] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:10:14] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:10:14] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:10:14] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE_SKIPLOCKED]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:10:14] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@278f1b2]
[19:10:14] MetamodelGraphWalker - Visiting attribute path : email
[19:10:14] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:10:14] MetamodelGraphWalker - Visiting attribute path : mobile
[19:10:14] MetamodelGraphWalker - Visiting attribute path : password
[19:10:14] MetamodelGraphWalker - Visiting attribute path : role
[19:10:14] MetamodelGraphWalker - Visiting attribute path : salt
[19:10:14] MetamodelGraphWalker - Visiting attribute path : username
[19:10:14] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:10:14] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:10:14] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:10:14] EntityLoader - Static select for entity com.monk.sbbook.entity.User [FORCE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:10:14] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6984aa94]
[19:10:14] MetamodelGraphWalker - Visiting attribute path : email
[19:10:14] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:10:14] MetamodelGraphWalker - Visiting attribute path : mobile
[19:10:14] MetamodelGraphWalker - Visiting attribute path : password
[19:10:14] MetamodelGraphWalker - Visiting attribute path : role
[19:10:14] MetamodelGraphWalker - Visiting attribute path : salt
[19:10:14] MetamodelGraphWalker - Visiting attribute path : username
[19:10:14] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:10:14] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:10:14] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:10:14] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_READ]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? lock in share mode
[19:10:14] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e0e4726]
[19:10:14] MetamodelGraphWalker - Visiting attribute path : email
[19:10:14] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:10:14] MetamodelGraphWalker - Visiting attribute path : mobile
[19:10:14] MetamodelGraphWalker - Visiting attribute path : password
[19:10:14] MetamodelGraphWalker - Visiting attribute path : role
[19:10:14] MetamodelGraphWalker - Visiting attribute path : salt
[19:10:14] MetamodelGraphWalker - Visiting attribute path : username
[19:10:14] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:10:14] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:10:14] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:10:14] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_WRITE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:10:14] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5134525f]
[19:10:14] MetamodelGraphWalker - Visiting attribute path : email
[19:10:14] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:10:14] MetamodelGraphWalker - Visiting attribute path : mobile
[19:10:14] MetamodelGraphWalker - Visiting attribute path : password
[19:10:14] MetamodelGraphWalker - Visiting attribute path : role
[19:10:14] MetamodelGraphWalker - Visiting attribute path : salt
[19:10:14] MetamodelGraphWalker - Visiting attribute path : username
[19:10:14] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:10:14] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:10:14] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:10:14] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:10:14] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10b8b5fe]
[19:10:14] MetamodelGraphWalker - Visiting attribute path : email
[19:10:14] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:10:14] MetamodelGraphWalker - Visiting attribute path : mobile
[19:10:14] MetamodelGraphWalker - Visiting attribute path : password
[19:10:14] MetamodelGraphWalker - Visiting attribute path : role
[19:10:14] MetamodelGraphWalker - Visiting attribute path : salt
[19:10:14] MetamodelGraphWalker - Visiting attribute path : username
[19:10:14] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:10:14] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:10:14] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:10:14] EntityLoader - Static select for entity com.monk.sbbook.entity.User [OPTIMISTIC]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:10:14] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a476ae1]
[19:10:14] MetamodelGraphWalker - Visiting attribute path : email
[19:10:14] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:10:14] MetamodelGraphWalker - Visiting attribute path : mobile
[19:10:14] MetamodelGraphWalker - Visiting attribute path : password
[19:10:14] MetamodelGraphWalker - Visiting attribute path : role
[19:10:14] MetamodelGraphWalker - Visiting attribute path : salt
[19:10:14] MetamodelGraphWalker - Visiting attribute path : username
[19:10:14] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:10:14] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:10:14] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:10:14] EntityLoader - Static select for entity com.monk.sbbook.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:10:14] Loader - Static select for action ACTION_MERGE on entity com.monk.sbbook.entity.User: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:10:14] Loader - Static select for action ACTION_REFRESH on entity com.monk.sbbook.entity.User: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:10:14] Table - No alter strings for table : hibernate_sequence
[19:10:14] Table - No alter strings for table : login_ticket
[19:10:14] Table - No alter strings for table : user
[19:10:14] NamedQueryRepository - Checking 0 named HQL queries
[19:10:14] NamedQueryRepository - Checking 0 named SQL queries
[19:10:14] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6c4209c2
[19:10:14] SessionFactoryRegistry - Registering SessionFactory: 5fd58e41-ddfa-4f76-b383-c522c7f3c99a (<unnamed>)
[19:10:14] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[19:10:14] StatisticsInitiator - Statistics initialized [enabled=false]
[19:10:15] QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@38013501
[19:10:15] QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
[19:10:15] QueryTranslatorImpl - parse() - HQL: update com.monk.sbbook.entity.LoginTicket u set u.status=?1 where u.ticket=?2
[19:10:15] ErrorCounter - throwQueryException() : no errors
[19:10:15] QueryTranslatorImpl - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  \-[IDENT] Node: 'monk'
    |     |  |  |  \-[IDENT] Node: 'sbbook'
    |     |  |  \-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'LoginTicket'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'status'
    |     \-[PARAM] Node: '?'
    |        \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'ticket'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '2'

[19:10:15] HqlSqlBaseWalker - update << begin [level=1, statement=update]
[19:10:15] FromElement - FromClause{level=1} : com.monk.sbbook.entity.LoginTicket (u) -> loginticke0_
[19:10:15] FromReferenceNode - Resolved : u -> t_userid
[19:10:15] DotNode - getDataType() : status -> org.hibernate.type.IntegerType@54e4ce51
[19:10:15] FromReferenceNode - Resolved : u.status -> t_status
[19:10:15] FromReferenceNode - Resolved : u -> t_userid
[19:10:15] DotNode - getDataType() : ticket -> org.hibernate.type.StringType@3db0bff
[19:10:15] FromReferenceNode - Resolved : u.ticket -> t_ticket
[19:10:15] HqlSqlBaseWalker - update : finishing up [level=1, statement=update]
[19:10:15] HqlSqlBaseWalker - update >> end [level=1, statement=update]
[19:10:15] QueryTranslatorImpl - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (login_ticket)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[loginticke0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'login_ticket' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=login_ticket,tableAlias=loginticke0_,origin=null,columns={,className=com.monk.sbbook.entity.LoginTicket}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 't_status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=u.status,tableAlias=loginticke0_,className=com.monk.sbbook.entity.LoginTicket,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 't_userid' {alias=u, className=com.monk.sbbook.entity.LoginTicket, tableAlias=loginticke0_}
    |     |  \-[IDENT] IdentNode: 'status' {originalText=status}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@54e4ce51}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 't_ticket' {propertyName=ticket,dereferenceType=PRIMITIVE,getPropertyPath=ticket,path=u.ticket,tableAlias=loginticke0_,className=com.monk.sbbook.entity.LoginTicket,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 't_userid' {alias=u, className=com.monk.sbbook.entity.LoginTicket, tableAlias=loginticke0_}
          |  \-[IDENT] IdentNode: 'ticket' {originalText=ticket}
          \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@3db0bff}

[19:10:15] ErrorCounter - throwQueryException() : no errors
[19:10:15] ErrorCounter - throwQueryException() : no errors
[19:10:15] QueryTranslatorImpl - parse() - HQL: update com.monk.sbbook.entity.User u set u.username= ?1 where u.id= ?2
[19:10:15] ErrorCounter - throwQueryException() : no errors
[19:10:15] QueryTranslatorImpl - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  \-[IDENT] Node: 'monk'
    |     |  |  |  \-[IDENT] Node: 'sbbook'
    |     |  |  \-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'username'
    |     \-[PARAM] Node: '?'
    |        \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '2'

[19:10:15] HqlSqlBaseWalker - update << begin [level=1, statement=update]
[19:10:15] FromElement - FromClause{level=1} : com.monk.sbbook.entity.User (u) -> user0_
[19:10:15] FromReferenceNode - Resolved : u -> t_id
[19:10:15] DotNode - getDataType() : username -> org.hibernate.type.StringType@3db0bff
[19:10:15] FromReferenceNode - Resolved : u.username -> t_username
[19:10:15] FromReferenceNode - Resolved : u -> t_id
[19:10:15] DotNode - getDataType() : id -> org.hibernate.type.LongType@63b72660
[19:10:15] FromReferenceNode - Resolved : u.id -> t_id
[19:10:15] HqlSqlBaseWalker - update : finishing up [level=1, statement=update]
[19:10:15] HqlSqlBaseWalker - update >> end [level=1, statement=update]
[19:10:15] QueryTranslatorImpl - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.monk.sbbook.entity.User}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 't_username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=com.monk.sbbook.entity.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 't_id' {alias=u, className=com.monk.sbbook.entity.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'username' {originalText=username}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@3db0bff}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 't_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=com.monk.sbbook.entity.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 't_id' {alias=u, className=com.monk.sbbook.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.LongType@63b72660}

[19:10:15] ErrorCounter - throwQueryException() : no errors
[19:10:15] ErrorCounter - throwQueryException() : no errors
[19:10:15] StdSchedulerFactory - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'qzDS'
[19:10:15] SessionFactoryImpl - HHH000031: Closing
[19:10:15] CascadeStyles - External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
[19:10:15] AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[19:10:15] BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[19:10:15] HikariDataSource - HikariPool-1 - Shutdown initiated...
[19:10:15] HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[19:10:15] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@16266e50: (connection evicted)
[19:10:15] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@799e0674: (connection evicted)
[19:10:15] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@4cec259: (connection evicted)
[19:10:15] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@1fcaabeb: (connection evicted)
[19:10:15] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@5f8af2a: (connection evicted)
[19:10:15] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@22722564: (connection evicted)
[19:10:15] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@3492b1a9: (connection evicted)
[19:10:15] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@4cc760b2: (connection evicted)
[19:10:15] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@45022315: (connection evicted)
[19:10:15] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@26207395: (connection evicted)
[19:10:15] HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[19:10:15] HikariDataSource - HikariPool-1 - Shutdown completed.
[19:10:15] QuartzInitializerListener - Quartz Scheduler successful shutdown.
[19:19:33] logging - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[19:19:33] Version - HV000001: Hibernate Validator 6.0.9.Final
[19:19:33] TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[19:19:33] TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[19:19:33] TraversableResolvers - Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
[19:19:33] ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[19:19:33] ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[19:19:33] ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[19:19:33] ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[19:19:33] ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
[19:19:33] SbBookApplication - Starting SbBookApplication on wjfdeiMac.local with PID 2385 (/Users/wengjf/Server/SpringMVC/sb-book/target/classes started by wengjf in /Users/wengjf/Server/SpringMVC/sb-book)
[19:19:33] SbBookApplication - Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
[19:19:33] SbBookApplication - No active profile set, falling back to default profiles: default
[19:19:33] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[19:19:33] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[19:19:33] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[19:19:33] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[19:19:33] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[19:19:35] HikariConfig - Driver class com.mysql.jdbc.Driver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2c651001
[19:19:35] HikariConfig - HikariPool-1 - configuration:
[19:19:35] HikariConfig - allowPoolSuspension.............false
[19:19:35] HikariConfig - autoCommit......................true
[19:19:35] HikariConfig - catalog.........................none
[19:19:35] HikariConfig - connectionInitSql...............none
[19:19:35] HikariConfig - connectionTestQuery.............none
[19:19:35] HikariConfig - connectionTimeout...............30000
[19:19:35] HikariConfig - dataSource......................none
[19:19:35] HikariConfig - dataSourceClassName.............none
[19:19:35] HikariConfig - dataSourceJNDI..................none
[19:19:35] HikariConfig - dataSourceProperties............{password=<masked>}
[19:19:35] HikariConfig - driverClassName................."com.mysql.jdbc.Driver"
[19:19:35] HikariConfig - healthCheckProperties...........{}
[19:19:35] HikariConfig - healthCheckRegistry.............none
[19:19:35] HikariConfig - idleTimeout.....................600000
[19:19:35] HikariConfig - initializationFailFast..........true
[19:19:35] HikariConfig - initializationFailTimeout.......1
[19:19:35] HikariConfig - isolateInternalQueries..........false
[19:19:35] HikariConfig - jdbc4ConnectionTest.............false
[19:19:35] HikariConfig - jdbcUrl.........................jdbc:mysql://localhost:3306/sbBook
[19:19:35] HikariConfig - leakDetectionThreshold..........0
[19:19:35] HikariConfig - maxLifetime.....................1800000
[19:19:35] HikariConfig - maximumPoolSize.................10
[19:19:35] HikariConfig - metricRegistry..................none
[19:19:35] HikariConfig - metricsTrackerFactory...........none
[19:19:35] HikariConfig - minimumIdle.....................10
[19:19:35] HikariConfig - password........................<masked>
[19:19:35] HikariConfig - poolName........................"HikariPool-1"
[19:19:35] HikariConfig - readOnly........................false
[19:19:35] HikariConfig - registerMbeans..................false
[19:19:35] HikariConfig - scheduledExecutor...............none
[19:19:35] HikariConfig - scheduledExecutorService........internal
[19:19:35] HikariConfig - schema..........................none
[19:19:35] HikariConfig - threadFactory...................internal
[19:19:35] HikariConfig - transactionIsolation............default
[19:19:35] HikariConfig - username........................"root"
[19:19:35] HikariConfig - validationTimeout...............5000
[19:19:35] HikariDataSource - HikariPool-1 - Starting...
[19:19:36] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@59019c88
[19:19:36] HikariDataSource - HikariPool-1 - Start completed.
[19:19:36] LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2c651001
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/wengjf/Server/SpringMVC/sb-book/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.monk.sbbook.entity.LoginTicket
		com.monk.sbbook.entity.User]
	Mapping files names []
	Properties []
[19:19:36] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[19:19:36] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[19:19:36] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[19:19:36] IntegratorServiceImpl - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[19:19:36] HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
[19:19:36] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@77582e87
[19:19:36] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@35b81306
[19:19:36] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@2ebc7c7a
[19:19:36] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@3a07652a
[19:19:36] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@2eb17eb2
[19:19:36] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@73fc4b9b
[19:19:36] Version - HHH000412: Hibernate Core {5.2.16.Final}
[19:19:36] Environment - HHH000206: hibernate.properties not found
[19:19:36] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@3e65115d
[19:19:36] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@3ed80a25
[19:19:36] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[19:19:36] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@37959e1f
[19:19:36] HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[19:19:36] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[19:19:36] Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[19:19:36] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@71874333
[19:19:36] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@71874333
[19:19:36] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@71874333
[19:19:36] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4d206ed0
[19:19:36] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@496fefa7
[19:19:36] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2ac00af
[19:19:36] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@790cd408
[19:19:36] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@790cd408
[19:19:36] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@790cd408
[19:19:36] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@152a5227
[19:19:36] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@152a5227
[19:19:36] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@152a5227
[19:19:36] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5c9c863e
[19:19:36] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5c9c863e
[19:19:36] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5c9c863e
[19:19:36] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@39f54d88
[19:19:36] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@39f54d88
[19:19:36] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@39f54d88
[19:19:36] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@640a60f6
[19:19:36] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@640a60f6
[19:19:36] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@640a60f6
[19:19:36] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4261afc
[19:19:36] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4261afc
[19:19:36] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4261afc
[19:19:36] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5acfb986
[19:19:36] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5acfb986
[19:19:36] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5acfb986
[19:19:36] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1c4e25a6
[19:19:36] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1c4e25a6
[19:19:36] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1654992a
[19:19:36] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1654992a
[19:19:36] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@ba08bea
[19:19:36] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@ba08bea
[19:19:36] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1919d7c5
[19:19:36] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@23ca558e
[19:19:36] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@515a7774
[19:19:36] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@515a7774
[19:19:36] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@430df101
[19:19:36] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@430df101
[19:19:36] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7d76163f
[19:19:36] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7d76163f
[19:19:36] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@734c997e
[19:19:36] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@734c997e
[19:19:36] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@27e3b143
[19:19:36] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@27e3b143
[19:19:36] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6c37cd24
[19:19:36] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6c37cd24
[19:19:36] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@50a4ac9
[19:19:36] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@50a4ac9
[19:19:36] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2a4b1d5a
[19:19:36] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2a4b1d5a
[19:19:36] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5aa316d9
[19:19:36] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5aa316d9
[19:19:36] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@19691227
[19:19:36] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@19691227
[19:19:36] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@339281b9
[19:19:36] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@339281b9
[19:19:36] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5697a89f
[19:19:36] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5697a89f
[19:19:36] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5697a89f
[19:19:36] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a8dc945
[19:19:36] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1396a193
[19:19:36] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1396a193
[19:19:36] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1396a193
[19:19:36] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2308b537
[19:19:36] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6c06e1ad
[19:19:36] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6c06e1ad
[19:19:36] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@587504a1
[19:19:36] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@587504a1
[19:19:36] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4bed293f
[19:19:36] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4bed293f
[19:19:36] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6148c899
[19:19:36] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6148c899
[19:19:36] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4eb74d74
[19:19:36] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4eb74d74
[19:19:36] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6725896e
[19:19:36] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6c5e767b
[19:19:36] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6c5e767b
[19:19:36] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6c5e767b
[19:19:36] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5b9903cf
[19:19:36] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5b9903cf
[19:19:36] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5b9903cf
[19:19:36] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@66fbd480
[19:19:36] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@a0c7861
[19:19:36] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@71d6d7a6
[19:19:36] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@71d6d7a6
[19:19:36] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@71d6d7a6
[19:19:36] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@25f1caf0
[19:19:36] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@25f1caf0
[19:19:36] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@25f1caf0
[19:19:36] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@53fa1f18
[19:19:36] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4628150c
[19:19:36] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@63d3419f
[19:19:36] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@63d3419f
[19:19:36] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@713b247c
[19:19:36] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@51b515e3
[19:19:36] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@51b515e3
[19:19:36] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@c7f25ee
[19:19:36] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@c7f25ee
[19:19:36] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@de292b8
[19:19:36] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@95265e3
[19:19:36] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4f43a31
[19:19:36] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@4f1f5cd9
[19:19:36] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4f1f5cd9
[19:19:36] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@a554298
[19:19:36] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3f193e9f
[19:19:36] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@73700e62
[19:19:36] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7233ba57
[19:19:36] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5252770b
[19:19:36] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@24495618
[19:19:36] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@57395fed
[19:19:36] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3837a65f
[19:19:36] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.22
      major : 5
      minor : 7
[19:19:36] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e )
      major : 5
      minor : 1
[19:19:36] JdbcEnvironmentInitiator - JDBC version : 4.0
[19:19:36] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[19:19:36] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[19:19:36] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[19:19:36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[19:19:36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[19:19:36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[19:19:36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[19:19:36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[19:19:36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[19:19:36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[19:19:36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[19:19:36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[19:19:36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[19:19:36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[19:19:36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[19:19:36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[19:19:36] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[19:19:36] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[19:19:36] AnnotationBinder - Binding entity from annotated class: com.monk.sbbook.entity.LoginTicket
[19:19:36] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[19:19:36] EntityBinder - Import with entity name LoginTicket
[19:19:36] EntityBinder - Bind entity com.monk.sbbook.entity.LoginTicket on table login_ticket
[19:19:36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_userid, insertable=true, updatable=true, unique=false}
[19:19:36] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[19:19:36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:userId]
[19:19:36] SimpleValueBinder - building SimpleValue for userId
[19:19:36] PropertyBinder - Building property userId
[19:19:36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_expired, insertable=true, updatable=true, unique=false}
[19:19:36] PropertyBinder - MetadataSourceProcessor property expired with lazy=false
[19:19:36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:expired]
[19:19:36] SimpleValueBinder - building SimpleValue for expired
[19:19:36] PropertyBinder - Building property expired
[19:19:36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_status, insertable=true, updatable=true, unique=false}
[19:19:36] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[19:19:36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:status]
[19:19:36] SimpleValueBinder - building SimpleValue for status
[19:19:36] PropertyBinder - Building property status
[19:19:36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_ticket, insertable=true, updatable=true, unique=false}
[19:19:36] PropertyBinder - MetadataSourceProcessor property ticket with lazy=false
[19:19:36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:ticket]
[19:19:36] SimpleValueBinder - building SimpleValue for ticket
[19:19:36] PropertyBinder - Building property ticket
[19:19:36] AnnotationBinder - Binding entity from annotated class: com.monk.sbbook.entity.User
[19:19:36] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[19:19:36] EntityBinder - Import with entity name User
[19:19:36] EntityBinder - Bind entity com.monk.sbbook.entity.User on table user
[19:19:36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_id, insertable=true, updatable=true, unique=false}
[19:19:36] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[19:19:36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:id]
[19:19:36] SimpleValueBinder - building SimpleValue for id
[19:19:36] PropertyBinder - Building property id
[19:19:36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_email, insertable=true, updatable=true, unique=false}
[19:19:36] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[19:19:36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:email]
[19:19:36] SimpleValueBinder - building SimpleValue for email
[19:19:36] PropertyBinder - Building property email
[19:19:36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_head_url, insertable=true, updatable=true, unique=false}
[19:19:36] PropertyBinder - MetadataSourceProcessor property headUrl with lazy=false
[19:19:36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:headUrl]
[19:19:36] SimpleValueBinder - building SimpleValue for headUrl
[19:19:36] PropertyBinder - Building property headUrl
[19:19:36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_mobile, insertable=true, updatable=true, unique=false}
[19:19:36] PropertyBinder - MetadataSourceProcessor property mobile with lazy=false
[19:19:36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:mobile]
[19:19:36] SimpleValueBinder - building SimpleValue for mobile
[19:19:36] PropertyBinder - Building property mobile
[19:19:36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_password, insertable=true, updatable=true, unique=false}
[19:19:36] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[19:19:36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:password]
[19:19:36] SimpleValueBinder - building SimpleValue for password
[19:19:36] PropertyBinder - Building property password
[19:19:36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_role, insertable=true, updatable=true, unique=false}
[19:19:36] PropertyBinder - MetadataSourceProcessor property role with lazy=false
[19:19:36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:role]
[19:19:36] SimpleValueBinder - building SimpleValue for role
[19:19:36] PropertyBinder - Building property role
[19:19:36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_salt, insertable=true, updatable=true, unique=false}
[19:19:36] PropertyBinder - MetadataSourceProcessor property salt with lazy=false
[19:19:36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:salt]
[19:19:36] SimpleValueBinder - building SimpleValue for salt
[19:19:36] PropertyBinder - Building property salt
[19:19:36] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_username, insertable=true, updatable=true, unique=true}
[19:19:36] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[19:19:36] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:username]
[19:19:36] SimpleValueBinder - building SimpleValue for username
[19:19:36] PropertyBinder - Building property username
[19:19:36] SimpleValueBinder - Starting fillSimpleValue for userId
[19:19:36] SimpleValueBinder - Starting fillSimpleValue for expired
[19:19:36] SimpleValueBinder - Starting fillSimpleValue for status
[19:19:36] SimpleValueBinder - Starting fillSimpleValue for ticket
[19:19:36] SimpleValueBinder - Starting fillSimpleValue for id
[19:19:36] SimpleValueBinder - Starting fillSimpleValue for email
[19:19:36] SimpleValueBinder - Starting fillSimpleValue for headUrl
[19:19:36] SimpleValueBinder - Starting fillSimpleValue for mobile
[19:19:36] SimpleValueBinder - Starting fillSimpleValue for password
[19:19:36] SimpleValueBinder - Starting fillSimpleValue for role
[19:19:36] SimpleValueBinder - Starting fillSimpleValue for salt
[19:19:36] SimpleValueBinder - Starting fillSimpleValue for username
[19:19:36] PrimaryKey - Forcing column [t_userid] to be non-null as it is part of the primary key for table [login_ticket]
[19:19:36] PrimaryKey - Forcing column [t_id] to be non-null as it is part of the primary key for table [user]
[19:19:36] SessionFactoryImpl - Building session factory
[19:19:36] Settings - SessionFactory name : null
[19:19:36] Settings - Automatic flush during beforeCompletion(): enabled
[19:19:36] Settings - Automatic session close at end of transaction: disabled
[19:19:36] Settings - Statistics: disabled
[19:19:36] Settings - Deleted entity synthetic identifier rollback: disabled
[19:19:36] Settings - Default entity-mode: pojo
[19:19:36] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[19:19:36] Settings - Allow initialization of lazy state outside session : disabled
[19:19:36] Settings - Using BatchFetchStyle : LEGACY
[19:19:36] Settings - Default batch fetch size: -1
[19:19:36] Settings - Maximum outer join fetch depth: 2
[19:19:36] Settings - Default null ordering: NONE
[19:19:36] Settings - Order SQL updates by primary key: disabled
[19:19:36] Settings - Order SQL inserts for batching: disabled
[19:19:36] Settings - multi-tenancy strategy : NONE
[19:19:36] Settings - JTA Track by Thread: enabled
[19:19:36] Settings - Query language substitutions: {}
[19:19:36] Settings - JPA query language strict compliance: disabled
[19:19:36] Settings - Named query checking : enabled
[19:19:36] Settings - Second-level cache: enabled
[19:19:36] Settings - Second-level query cache: disabled
[19:19:36] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@153d910f
[19:19:36] Settings - Second-level cache region prefix: null
[19:19:36] Settings - Optimize second-level cache for minimal puts: disabled
[19:19:36] Settings - Structured second-level cache entries: disabled
[19:19:36] Settings - Second-level cache direct-reference entries: disabled
[19:19:36] Settings - Automatic eviction of collection cache: disabled
[19:19:36] Settings - JDBC batch size: 15
[19:19:36] Settings - JDBC batch updates for versioned data: enabled
[19:19:36] Settings - Scrollable result sets: enabled
[19:19:36] Settings - Wrap result sets: disabled
[19:19:36] Settings - JDBC3 getGeneratedKeys(): enabled
[19:19:36] Settings - JDBC result set fetch size: null
[19:19:36] Settings - Connection release mode: ON_CLOSE
[19:19:36] Settings - Generate SQL with comments: disabled
[19:19:36] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[19:19:36] SessionFactoryImpl - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, com.sun.management.jmxremote.authenticate=false, java.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/tools.jar:/Users/wengjf/Server/SpringMVC/sb-book/target/classes:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.0.1.RELEASE/spring-boot-starter-web-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.0.1.RELEASE/spring-boot-starter-json-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.5/jackson-databind-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.5/jackson-core-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.9.5/jackson-datatype-jdk8-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.9.5/jackson-datatype-jsr310-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.9.5/jackson-module-parameter-names-2.9.5.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.0.1.RELEASE/spring-boot-starter-tomcat-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/8.5.29/tomcat-embed-websocket-8.5.29.jar:/Users/wengjf/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.9.Final/hibernate-validator-6.0.9.Final.jar:/Users/wengjf/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/Users/wengjf/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/wengjf/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/wengjf/.m2/repository/org/springframework/spring-web/5.0.5.RELEASE/spring-web-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-beans/5.0.5.RELEASE/spring-beans-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-webmvc/5.0.5.RELEASE/spring-webmvc-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-aop/5.0.5.RELEASE/spring-aop-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-expression/5.0.5.RELEASE/spring-expression-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/Users/wengjf/.m2/repository/org/springframework/spring-core/5.0.5.RELEASE/spring-core-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-jcl/5.0.5.RELEASE/spring-jcl-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter/2.0.1.RELEASE/spring-boot-starter-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot/2.0.1.RELEASE/spring-boot-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.0.1.RELEASE/spring-boot-autoconfigure-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:/Users/wengjf/.m2/repository/org/yaml/snakeyaml/1.19/snakeyaml-1.19.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-log4j/1.3.8.RELEASE/spring-boot-starter-log4j-1.3.8.RELEASE.jar:/Users/wengjf/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar:/Users/wengjf/.m2/repository/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar:/Users/wengjf/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/Users/wengjf/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-devtools/2.0.1.RELEASE/spring-boot-devtools-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.29/tomcat-embed-jasper-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.29/tomcat-embed-core-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.29/tomcat-annotations-api-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.29/tomcat-embed-el-8.5.29.jar:/Users/wengjf/.m2/repository/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:/Users/wengjf/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/Users/wengjf/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/Users/wengjf/.m2/repository/mysql/mysql-connector-java/5.1.46/mysql-connector-java-5.1.46.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.0.1.RELEASE/spring-boot-starter-data-jpa-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.0.1.RELEASE/spring-boot-starter-aop-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/aspectj/aspectjweaver/1.8.13/aspectjweaver-1.8.13.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.0.1.RELEASE/spring-boot-starter-jdbc-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/com/zaxxer/HikariCP/2.7.8/HikariCP-2.7.8.jar:/Users/wengjf/.m2/repository/org/springframework/spring-jdbc/5.0.5.RELEASE/spring-jdbc-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/hibernate/hibernate-core/5.2.16.Final/hibernate-core-5.2.16.Final.jar:/Users/wengjf/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/wengjf/.m2/repository/org/javassist/javassist/3.22.0-GA/javassist-3.22.0-GA.jar:/Users/wengjf/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/wengjf/.m2/repository/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/Users/wengjf/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/wengjf/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/wengjf/.m2/repository/javax/transaction/javax.transaction-api/1.2/javax.transaction-api-1.2.jar:/Users/wengjf/.m2/repository/org/springframework/data/spring-data-jpa/2.0.6.RELEASE/spring-data-jpa-2.0.6.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/data/spring-data-commons/2.0.6.RELEASE/spring-data-commons-2.0.6.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-orm/5.0.5.RELEASE/spring-orm-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-aspects/5.0.5.RELEASE/spring-aspects-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-mail/2.0.1.RELEASE/spring-boot-starter-mail-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-context/5.0.5.RELEASE/spring-context-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-context-support/5.0.5.RELEASE/spring-context-support-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/com/sun/mail/javax.mail/1.6.1/javax.mail-1.6.1.jar:/Users/wengjf/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-quartz/2.0.1.RELEASE/spring-boot-starter-quartz-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-tx/5.0.5.RELEASE/spring-tx-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/quartz-scheduler/quartz/2.3.0/quartz-2.3.0.jar:/Users/wengjf/.m2/repository/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Macau, os.name=Mac OS X, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib, com.sun.management.jmxremote.ssl=false, spring.application.admin.enabled=true, sun.java.command=com.monk.sbbook.SbBookApplication, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@5134b3c, com.sun.management.jmxremote=, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=/Users/wengjf, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre, spring.output.ansi.enabled=always, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=1.8.0_171-b11, user.name=wengjf, path.separator=:, os.version=10.13.2, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/, com.zaxxer.hikari.pool_number=1, catalina.home=/private/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/tomcat.4320937496028588930.8080, com.sun.management.jmxremote.port=64672, java.version=1.8.0_171, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/Users/wengjf/Server/SpringMVC/sb-book, os.arch=x86_64, PID=2385, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, catalina.base=/private/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/tomcat.4320937496028588930.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@50eb7aec, java.library.path=/Users/wengjf/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.171-b11, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, hibernate.connection.datasource=HikariDataSource (HikariPool-1), sun.io.unicode.encoding=UnicodeBig, java.ext.dirs=/Users/wengjf/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, java.class.version=52.0, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16}
[19:19:36] TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[19:19:36] TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[19:19:36] TraversableResolvers - Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
[19:19:36] ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[19:19:36] ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[19:19:36] ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[19:19:36] ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[19:19:36] ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
[19:19:36] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[19:19:36] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[19:19:36] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[19:19:36] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[19:19:36] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[19:19:36] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:19:36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:19:36] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:19:36] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:19:36] JaccIntegrator - Skipping JACC integration as it was not enabled
[19:19:36] CascadeStyles - External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[19:19:36] SessionFactoryImpl - Instantiated session factory
[19:19:37] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:19:37] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:19:37] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:19:37] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:19:37] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:19:37] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:19:37] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:19:37] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:19:37] AbstractEntityPersister - Static SQL for entity: com.monk.sbbook.entity.LoginTicket
[19:19:37] AbstractEntityPersister -  Version select: select t_userid from login_ticket where t_userid =?
[19:19:37] AbstractEntityPersister -  Snapshot select: select loginticke_.t_userid, loginticke_.t_expired as t_expire2_0_, loginticke_.t_status as t_status3_0_, loginticke_.t_ticket as t_ticket4_0_ from login_ticket loginticke_ where loginticke_.t_userid=?
[19:19:37] AbstractEntityPersister -  Insert 0: insert into login_ticket (t_expired, t_status, t_ticket, t_userid) values (?, ?, ?, ?)
[19:19:37] AbstractEntityPersister -  Update 0: update login_ticket set t_expired=?, t_status=?, t_ticket=? where t_userid=?
[19:19:37] AbstractEntityPersister -  Delete 0: delete from login_ticket where t_userid=?
[19:19:37] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37f22cc7]
[19:19:37] MetamodelGraphWalker - Visiting attribute path : expired
[19:19:37] MetamodelGraphWalker - Visiting attribute path : status
[19:19:37] MetamodelGraphWalker - Visiting attribute path : ticket
[19:19:37] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:19:37] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:19:37] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:19:37] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [NONE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:19:37] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2353da23]
[19:19:37] MetamodelGraphWalker - Visiting attribute path : expired
[19:19:37] MetamodelGraphWalker - Visiting attribute path : status
[19:19:37] MetamodelGraphWalker - Visiting attribute path : ticket
[19:19:37] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:19:37] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:19:37] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:19:37] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [READ]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:19:37] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bb891c5]
[19:19:37] MetamodelGraphWalker - Visiting attribute path : expired
[19:19:37] MetamodelGraphWalker - Visiting attribute path : status
[19:19:37] MetamodelGraphWalker - Visiting attribute path : ticket
[19:19:37] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:19:37] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:19:37] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:19:37] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:19:37] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17542359]
[19:19:37] MetamodelGraphWalker - Visiting attribute path : expired
[19:19:37] MetamodelGraphWalker - Visiting attribute path : status
[19:19:37] MetamodelGraphWalker - Visiting attribute path : ticket
[19:19:37] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:19:37] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:19:37] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:19:37] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE_NOWAIT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:19:37] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30f23f6d]
[19:19:37] MetamodelGraphWalker - Visiting attribute path : expired
[19:19:37] MetamodelGraphWalker - Visiting attribute path : status
[19:19:37] MetamodelGraphWalker - Visiting attribute path : ticket
[19:19:37] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:19:37] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:19:37] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:19:37] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE_SKIPLOCKED]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:19:37] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77a706c1]
[19:19:37] MetamodelGraphWalker - Visiting attribute path : expired
[19:19:37] MetamodelGraphWalker - Visiting attribute path : status
[19:19:37] MetamodelGraphWalker - Visiting attribute path : ticket
[19:19:37] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:19:37] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:19:37] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:19:37] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [FORCE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:19:37] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1439f702]
[19:19:37] MetamodelGraphWalker - Visiting attribute path : expired
[19:19:37] MetamodelGraphWalker - Visiting attribute path : status
[19:19:37] MetamodelGraphWalker - Visiting attribute path : ticket
[19:19:37] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:19:37] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:19:37] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:19:37] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_READ]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? lock in share mode
[19:19:37] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@675e91f9]
[19:19:37] MetamodelGraphWalker - Visiting attribute path : expired
[19:19:37] MetamodelGraphWalker - Visiting attribute path : status
[19:19:37] MetamodelGraphWalker - Visiting attribute path : ticket
[19:19:37] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:19:37] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:19:37] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:19:37] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_WRITE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:19:37] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45172f3]
[19:19:37] MetamodelGraphWalker - Visiting attribute path : expired
[19:19:37] MetamodelGraphWalker - Visiting attribute path : status
[19:19:37] MetamodelGraphWalker - Visiting attribute path : ticket
[19:19:37] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:19:37] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:19:37] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:19:37] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_FORCE_INCREMENT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:19:37] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f629dc0]
[19:19:37] MetamodelGraphWalker - Visiting attribute path : expired
[19:19:37] MetamodelGraphWalker - Visiting attribute path : status
[19:19:37] MetamodelGraphWalker - Visiting attribute path : ticket
[19:19:37] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:19:37] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:19:37] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:19:37] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [OPTIMISTIC]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:19:37] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3758e2f7]
[19:19:37] MetamodelGraphWalker - Visiting attribute path : expired
[19:19:37] MetamodelGraphWalker - Visiting attribute path : status
[19:19:37] MetamodelGraphWalker - Visiting attribute path : ticket
[19:19:37] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:19:37] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:19:37] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:19:37] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [OPTIMISTIC_FORCE_INCREMENT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:19:37] Loader - Static select for action ACTION_MERGE on entity com.monk.sbbook.entity.LoginTicket: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:19:37] Loader - Static select for action ACTION_REFRESH on entity com.monk.sbbook.entity.LoginTicket: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:19:37] AbstractEntityPersister - Static SQL for entity: com.monk.sbbook.entity.User
[19:19:37] AbstractEntityPersister -  Version select: select t_id from user where t_id =?
[19:19:37] AbstractEntityPersister -  Snapshot select: select user_.t_id, user_.t_email as t_email2_1_, user_.t_head_url as t_head_u3_1_, user_.t_mobile as t_mobile4_1_, user_.t_password as t_passwo5_1_, user_.t_role as t_role6_1_, user_.t_salt as t_salt7_1_, user_.t_username as t_userna8_1_ from user user_ where user_.t_id=?
[19:19:37] AbstractEntityPersister -  Insert 0: insert into user (t_email, t_head_url, t_mobile, t_password, t_role, t_salt, t_username, t_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[19:19:37] AbstractEntityPersister -  Update 0: update user set t_email=?, t_head_url=?, t_mobile=?, t_password=?, t_role=?, t_salt=?, t_username=? where t_id=?
[19:19:37] AbstractEntityPersister -  Delete 0: delete from user where t_id=?
[19:19:37] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c9420d5]
[19:19:37] MetamodelGraphWalker - Visiting attribute path : email
[19:19:37] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:19:37] MetamodelGraphWalker - Visiting attribute path : mobile
[19:19:37] MetamodelGraphWalker - Visiting attribute path : password
[19:19:37] MetamodelGraphWalker - Visiting attribute path : role
[19:19:37] MetamodelGraphWalker - Visiting attribute path : salt
[19:19:37] MetamodelGraphWalker - Visiting attribute path : username
[19:19:37] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:19:37] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:19:37] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:19:37] EntityLoader - Static select for entity com.monk.sbbook.entity.User [NONE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:19:37] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73ec5352]
[19:19:37] MetamodelGraphWalker - Visiting attribute path : email
[19:19:37] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:19:37] MetamodelGraphWalker - Visiting attribute path : mobile
[19:19:37] MetamodelGraphWalker - Visiting attribute path : password
[19:19:37] MetamodelGraphWalker - Visiting attribute path : role
[19:19:37] MetamodelGraphWalker - Visiting attribute path : salt
[19:19:37] MetamodelGraphWalker - Visiting attribute path : username
[19:19:37] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:19:37] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:19:37] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:19:37] EntityLoader - Static select for entity com.monk.sbbook.entity.User [READ]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:19:37] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69e0f945]
[19:19:37] MetamodelGraphWalker - Visiting attribute path : email
[19:19:37] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:19:37] MetamodelGraphWalker - Visiting attribute path : mobile
[19:19:37] MetamodelGraphWalker - Visiting attribute path : password
[19:19:37] MetamodelGraphWalker - Visiting attribute path : role
[19:19:37] MetamodelGraphWalker - Visiting attribute path : salt
[19:19:37] MetamodelGraphWalker - Visiting attribute path : username
[19:19:37] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:19:37] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:19:37] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:19:37] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:19:37] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@393b2f1a]
[19:19:37] MetamodelGraphWalker - Visiting attribute path : email
[19:19:37] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:19:37] MetamodelGraphWalker - Visiting attribute path : mobile
[19:19:37] MetamodelGraphWalker - Visiting attribute path : password
[19:19:37] MetamodelGraphWalker - Visiting attribute path : role
[19:19:37] MetamodelGraphWalker - Visiting attribute path : salt
[19:19:37] MetamodelGraphWalker - Visiting attribute path : username
[19:19:37] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:19:37] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:19:37] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:19:37] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE_NOWAIT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:19:37] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9773c3]
[19:19:37] MetamodelGraphWalker - Visiting attribute path : email
[19:19:37] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:19:37] MetamodelGraphWalker - Visiting attribute path : mobile
[19:19:37] MetamodelGraphWalker - Visiting attribute path : password
[19:19:37] MetamodelGraphWalker - Visiting attribute path : role
[19:19:37] MetamodelGraphWalker - Visiting attribute path : salt
[19:19:37] MetamodelGraphWalker - Visiting attribute path : username
[19:19:37] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:19:37] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:19:37] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:19:37] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE_SKIPLOCKED]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:19:37] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ed5d2c8]
[19:19:37] MetamodelGraphWalker - Visiting attribute path : email
[19:19:37] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:19:37] MetamodelGraphWalker - Visiting attribute path : mobile
[19:19:37] MetamodelGraphWalker - Visiting attribute path : password
[19:19:37] MetamodelGraphWalker - Visiting attribute path : role
[19:19:37] MetamodelGraphWalker - Visiting attribute path : salt
[19:19:37] MetamodelGraphWalker - Visiting attribute path : username
[19:19:37] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:19:37] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:19:37] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:19:37] EntityLoader - Static select for entity com.monk.sbbook.entity.User [FORCE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:19:37] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77d02ef4]
[19:19:37] MetamodelGraphWalker - Visiting attribute path : email
[19:19:37] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:19:37] MetamodelGraphWalker - Visiting attribute path : mobile
[19:19:37] MetamodelGraphWalker - Visiting attribute path : password
[19:19:37] MetamodelGraphWalker - Visiting attribute path : role
[19:19:37] MetamodelGraphWalker - Visiting attribute path : salt
[19:19:37] MetamodelGraphWalker - Visiting attribute path : username
[19:19:37] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:19:37] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:19:37] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:19:37] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_READ]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? lock in share mode
[19:19:37] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54213dab]
[19:19:37] MetamodelGraphWalker - Visiting attribute path : email
[19:19:37] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:19:37] MetamodelGraphWalker - Visiting attribute path : mobile
[19:19:37] MetamodelGraphWalker - Visiting attribute path : password
[19:19:37] MetamodelGraphWalker - Visiting attribute path : role
[19:19:37] MetamodelGraphWalker - Visiting attribute path : salt
[19:19:37] MetamodelGraphWalker - Visiting attribute path : username
[19:19:37] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:19:37] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:19:37] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:19:37] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_WRITE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:19:37] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26f26990]
[19:19:37] MetamodelGraphWalker - Visiting attribute path : email
[19:19:37] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:19:37] MetamodelGraphWalker - Visiting attribute path : mobile
[19:19:37] MetamodelGraphWalker - Visiting attribute path : password
[19:19:37] MetamodelGraphWalker - Visiting attribute path : role
[19:19:37] MetamodelGraphWalker - Visiting attribute path : salt
[19:19:37] MetamodelGraphWalker - Visiting attribute path : username
[19:19:37] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:19:37] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:19:37] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:19:37] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:19:37] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@480177b1]
[19:19:37] MetamodelGraphWalker - Visiting attribute path : email
[19:19:37] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:19:37] MetamodelGraphWalker - Visiting attribute path : mobile
[19:19:37] MetamodelGraphWalker - Visiting attribute path : password
[19:19:37] MetamodelGraphWalker - Visiting attribute path : role
[19:19:37] MetamodelGraphWalker - Visiting attribute path : salt
[19:19:37] MetamodelGraphWalker - Visiting attribute path : username
[19:19:37] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:19:37] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:19:37] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:19:37] EntityLoader - Static select for entity com.monk.sbbook.entity.User [OPTIMISTIC]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:19:37] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37b4e7cb]
[19:19:37] MetamodelGraphWalker - Visiting attribute path : email
[19:19:37] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:19:37] MetamodelGraphWalker - Visiting attribute path : mobile
[19:19:37] MetamodelGraphWalker - Visiting attribute path : password
[19:19:37] MetamodelGraphWalker - Visiting attribute path : role
[19:19:37] MetamodelGraphWalker - Visiting attribute path : salt
[19:19:37] MetamodelGraphWalker - Visiting attribute path : username
[19:19:37] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:19:37] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:19:37] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:19:37] EntityLoader - Static select for entity com.monk.sbbook.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:19:37] Loader - Static select for action ACTION_MERGE on entity com.monk.sbbook.entity.User: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:19:37] Loader - Static select for action ACTION_REFRESH on entity com.monk.sbbook.entity.User: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:19:37] Table - No alter strings for table : hibernate_sequence
[19:19:37] Table - No alter strings for table : login_ticket
[19:19:37] Table - No alter strings for table : user
[19:19:37] NamedQueryRepository - Checking 0 named HQL queries
[19:19:37] NamedQueryRepository - Checking 0 named SQL queries
[19:19:37] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@ef3e5b6
[19:19:37] SessionFactoryRegistry - Registering SessionFactory: 9ec2f3e0-a24d-44ea-819d-cfbff60c2afa (<unnamed>)
[19:19:37] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[19:19:37] StatisticsInitiator - Statistics initialized [enabled=false]
[19:19:37] QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@25cab0ac
[19:19:37] QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
[19:19:37] QueryTranslatorImpl - parse() - HQL: update com.monk.sbbook.entity.LoginTicket u set u.status=?1 where u.ticket=?2
[19:19:37] ErrorCounter - throwQueryException() : no errors
[19:19:37] QueryTranslatorImpl - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  \-[IDENT] Node: 'monk'
    |     |  |  |  \-[IDENT] Node: 'sbbook'
    |     |  |  \-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'LoginTicket'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'status'
    |     \-[PARAM] Node: '?'
    |        \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'ticket'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '2'

[19:19:37] HqlSqlBaseWalker - update << begin [level=1, statement=update]
[19:19:37] FromElement - FromClause{level=1} : com.monk.sbbook.entity.LoginTicket (u) -> loginticke0_
[19:19:37] FromReferenceNode - Resolved : u -> t_userid
[19:19:37] DotNode - getDataType() : status -> org.hibernate.type.IntegerType@39f54d88
[19:19:37] FromReferenceNode - Resolved : u.status -> t_status
[19:19:37] FromReferenceNode - Resolved : u -> t_userid
[19:19:37] DotNode - getDataType() : ticket -> org.hibernate.type.StringType@ba08bea
[19:19:37] FromReferenceNode - Resolved : u.ticket -> t_ticket
[19:19:37] HqlSqlBaseWalker - update : finishing up [level=1, statement=update]
[19:19:37] HqlSqlBaseWalker - update >> end [level=1, statement=update]
[19:19:37] QueryTranslatorImpl - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (login_ticket)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[loginticke0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'login_ticket' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=login_ticket,tableAlias=loginticke0_,origin=null,columns={,className=com.monk.sbbook.entity.LoginTicket}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 't_status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=u.status,tableAlias=loginticke0_,className=com.monk.sbbook.entity.LoginTicket,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 't_userid' {alias=u, className=com.monk.sbbook.entity.LoginTicket, tableAlias=loginticke0_}
    |     |  \-[IDENT] IdentNode: 'status' {originalText=status}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@39f54d88}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 't_ticket' {propertyName=ticket,dereferenceType=PRIMITIVE,getPropertyPath=ticket,path=u.ticket,tableAlias=loginticke0_,className=com.monk.sbbook.entity.LoginTicket,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 't_userid' {alias=u, className=com.monk.sbbook.entity.LoginTicket, tableAlias=loginticke0_}
          |  \-[IDENT] IdentNode: 'ticket' {originalText=ticket}
          \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@ba08bea}

[19:19:37] ErrorCounter - throwQueryException() : no errors
[19:19:37] ErrorCounter - throwQueryException() : no errors
[19:19:37] QueryTranslatorImpl - parse() - HQL: update com.monk.sbbook.entity.User u set u.username= ?1 where u.id= ?2
[19:19:37] ErrorCounter - throwQueryException() : no errors
[19:19:37] QueryTranslatorImpl - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  \-[IDENT] Node: 'monk'
    |     |  |  |  \-[IDENT] Node: 'sbbook'
    |     |  |  \-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'username'
    |     \-[PARAM] Node: '?'
    |        \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '2'

[19:19:37] HqlSqlBaseWalker - update << begin [level=1, statement=update]
[19:19:37] FromElement - FromClause{level=1} : com.monk.sbbook.entity.User (u) -> user0_
[19:19:37] FromReferenceNode - Resolved : u -> t_id
[19:19:37] DotNode - getDataType() : username -> org.hibernate.type.StringType@ba08bea
[19:19:37] FromReferenceNode - Resolved : u.username -> t_username
[19:19:37] FromReferenceNode - Resolved : u -> t_id
[19:19:37] DotNode - getDataType() : id -> org.hibernate.type.LongType@640a60f6
[19:19:37] FromReferenceNode - Resolved : u.id -> t_id
[19:19:37] HqlSqlBaseWalker - update : finishing up [level=1, statement=update]
[19:19:37] HqlSqlBaseWalker - update >> end [level=1, statement=update]
[19:19:37] QueryTranslatorImpl - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.monk.sbbook.entity.User}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 't_username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=com.monk.sbbook.entity.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 't_id' {alias=u, className=com.monk.sbbook.entity.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'username' {originalText=username}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@ba08bea}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 't_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=com.monk.sbbook.entity.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 't_id' {alias=u, className=com.monk.sbbook.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.LongType@640a60f6}

[19:19:37] ErrorCounter - throwQueryException() : no errors
[19:19:37] ErrorCounter - throwQueryException() : no errors
[19:19:37] SessionFactoryImpl - HHH000031: Closing
[19:19:37] CascadeStyles - External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
[19:19:37] AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[19:19:37] BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[19:19:37] HikariDataSource - HikariPool-1 - Shutdown initiated...
[19:19:37] HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[19:19:37] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@59019c88: (connection evicted)
[19:19:37] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@77582e87: (connection evicted)
[19:19:37] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@35b81306: (connection evicted)
[19:19:37] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@2ebc7c7a: (connection evicted)
[19:19:37] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@3a07652a: (connection evicted)
[19:19:37] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@2eb17eb2: (connection evicted)
[19:19:37] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@73fc4b9b: (connection evicted)
[19:19:37] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@3e65115d: (connection evicted)
[19:19:37] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@3ed80a25: (connection evicted)
[19:19:37] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@37959e1f: (connection evicted)
[19:19:37] HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[19:19:37] HikariDataSource - HikariPool-1 - Shutdown completed.
[19:22:05] logging - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[19:22:05] Version - HV000001: Hibernate Validator 6.0.9.Final
[19:22:05] TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[19:22:05] TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[19:22:05] TraversableResolvers - Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
[19:22:05] ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[19:22:05] ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[19:22:05] ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[19:22:05] ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[19:22:06] SbBookApplication - Starting SbBookApplication on wjfdeiMac.local with PID 2389 (/Users/wengjf/Server/SpringMVC/sb-book/target/classes started by wengjf in /Users/wengjf/Server/SpringMVC/sb-book)
[19:22:06] SbBookApplication - Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
[19:22:06] SbBookApplication - No active profile set, falling back to default profiles: default
[19:22:06] ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
[19:22:06] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[19:22:06] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[19:22:06] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[19:22:06] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[19:22:06] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[19:22:07] HikariConfig - Driver class com.mysql.jdbc.Driver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@df82b83
[19:22:07] HikariConfig - HikariPool-1 - configuration:
[19:22:07] HikariConfig - allowPoolSuspension.............false
[19:22:07] HikariConfig - autoCommit......................true
[19:22:07] HikariConfig - catalog.........................none
[19:22:07] HikariConfig - connectionInitSql...............none
[19:22:07] HikariConfig - connectionTestQuery.............none
[19:22:07] HikariConfig - connectionTimeout...............30000
[19:22:07] HikariConfig - dataSource......................none
[19:22:07] HikariConfig - dataSourceClassName.............none
[19:22:07] HikariConfig - dataSourceJNDI..................none
[19:22:07] HikariConfig - dataSourceProperties............{password=<masked>}
[19:22:07] HikariConfig - driverClassName................."com.mysql.jdbc.Driver"
[19:22:07] HikariConfig - healthCheckProperties...........{}
[19:22:07] HikariConfig - healthCheckRegistry.............none
[19:22:07] HikariConfig - idleTimeout.....................600000
[19:22:07] HikariConfig - initializationFailFast..........true
[19:22:07] HikariConfig - initializationFailTimeout.......1
[19:22:07] HikariConfig - isolateInternalQueries..........false
[19:22:07] HikariConfig - jdbc4ConnectionTest.............false
[19:22:07] HikariConfig - jdbcUrl.........................jdbc:mysql://localhost:3306/sbBook
[19:22:07] HikariConfig - leakDetectionThreshold..........0
[19:22:07] HikariConfig - maxLifetime.....................1800000
[19:22:07] HikariConfig - maximumPoolSize.................10
[19:22:07] HikariConfig - metricRegistry..................none
[19:22:07] HikariConfig - metricsTrackerFactory...........none
[19:22:07] HikariConfig - minimumIdle.....................10
[19:22:07] HikariConfig - password........................<masked>
[19:22:07] HikariConfig - poolName........................"HikariPool-1"
[19:22:07] HikariConfig - readOnly........................false
[19:22:07] HikariConfig - registerMbeans..................false
[19:22:07] HikariConfig - scheduledExecutor...............none
[19:22:07] HikariConfig - scheduledExecutorService........internal
[19:22:07] HikariConfig - schema..........................none
[19:22:07] HikariConfig - threadFactory...................internal
[19:22:07] HikariConfig - transactionIsolation............default
[19:22:07] HikariConfig - username........................"root"
[19:22:07] HikariConfig - validationTimeout...............5000
[19:22:07] HikariDataSource - HikariPool-1 - Starting...
[19:22:07] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@4d77d4f1
[19:22:07] HikariDataSource - HikariPool-1 - Start completed.
[19:22:07] LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@df82b83
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/wengjf/Server/SpringMVC/sb-book/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.monk.sbbook.entity.LoginTicket
		com.monk.sbbook.entity.User]
	Mapping files names []
	Properties []
[19:22:07] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[19:22:07] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[19:22:07] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[19:22:07] IntegratorServiceImpl - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[19:22:07] Version - HHH000412: Hibernate Core {5.2.16.Final}
[19:22:07] Environment - HHH000206: hibernate.properties not found
[19:22:08] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[19:22:08] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[19:22:08] Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[19:22:08] HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
[19:22:08] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@6a2cab1d
[19:22:08] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@1130e2b1
[19:22:08] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@a3488b1
[19:22:08] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@5bdb41e1
[19:22:08] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2a99447f
[19:22:08] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2a99447f
[19:22:08] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2a99447f
[19:22:08] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@9588f82
[19:22:08] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@73a77639
[19:22:08] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@69fc6c47
[19:22:08] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4543dad1
[19:22:08] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@21e74861
[19:22:08] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@21e74861
[19:22:08] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@21e74861
[19:22:08] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@32e4694f
[19:22:08] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@32e4694f
[19:22:08] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@32e4694f
[19:22:08] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6d2bb724
[19:22:08] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6d2bb724
[19:22:08] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6d2bb724
[19:22:08] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@40f7d443
[19:22:08] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@40f7d443
[19:22:08] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@40f7d443
[19:22:08] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4edb9f6a
[19:22:08] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4edb9f6a
[19:22:08] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4edb9f6a
[19:22:08] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@2aad03d0
[19:22:08] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@12be007f
[19:22:08] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@12be007f
[19:22:08] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@12be007f
[19:22:08] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@35ecf792
[19:22:08] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@35ecf792
[19:22:08] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@35ecf792
[19:22:08] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@47de9e0d
[19:22:08] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@47de9e0d
[19:22:08] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@282187c7
[19:22:08] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@282187c7
[19:22:08] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@40ed8aa
[19:22:08] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@40ed8aa
[19:22:08] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@adb735e
[19:22:08] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7706d2f9
[19:22:08] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@346a0b8b
[19:22:08] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@346a0b8b
[19:22:08] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@5e906234
[19:22:08] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@225cf2ea
[19:22:08] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@225cf2ea
[19:22:08] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@208262a7
[19:22:08] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@208262a7
[19:22:08] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7e848f56
[19:22:08] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7e848f56
[19:22:08] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3091e23d
[19:22:08] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3091e23d
[19:22:08] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@46b97a44
[19:22:08] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@46b97a44
[19:22:08] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3a564d91
[19:22:08] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3a564d91
[19:22:08] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@62eede3d
[19:22:08] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@62eede3d
[19:22:08] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@628c60d2
[19:22:08] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@42bbf391
[19:22:08] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@42bbf391
[19:22:08] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@259c8c15
[19:22:08] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@259c8c15
[19:22:08] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2a270edf
[19:22:08] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2a270edf
[19:22:08] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@3bd66e4e
[19:22:08] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@3bd66e4e
[19:22:08] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@3bd66e4e
[19:22:08] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@279b64bd
[19:22:08] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@26e5692d
[19:22:08] HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[19:22:08] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2e5f1d1b
[19:22:08] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2e5f1d1b
[19:22:08] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2e5f1d1b
[19:22:08] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@69b181b8
[19:22:08] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2ac23180
[19:22:08] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2ac23180
[19:22:08] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@78c9b2b1
[19:22:08] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@78c9b2b1
[19:22:08] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1060af17
[19:22:08] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1060af17
[19:22:08] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@9fbd030
[19:22:08] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@9fbd030
[19:22:08] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1925cff4
[19:22:08] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1925cff4
[19:22:08] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e6c831d
[19:22:08] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3f6d41e1
[19:22:08] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3f6d41e1
[19:22:08] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3f6d41e1
[19:22:08] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4c3506e7
[19:22:08] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4c3506e7
[19:22:08] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4c3506e7
[19:22:08] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6a4b78ad
[19:22:08] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5f205b6f
[19:22:08] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@16c751b9
[19:22:08] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@16c751b9
[19:22:08] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@16c751b9
[19:22:08] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3be54753
[19:22:08] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3be54753
[19:22:08] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3be54753
[19:22:08] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@43816632
[19:22:08] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6f6d5205
[19:22:08] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1e68cc14
[19:22:08] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1e68cc14
[19:22:08] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@38bac91b
[19:22:08] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@48b0d6d9
[19:22:08] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@48b0d6d9
[19:22:08] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@29c71f15
[19:22:08] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@29c71f15
[19:22:08] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@54858c43
[19:22:08] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@38e00d1b
[19:22:08] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@b849989
[19:22:08] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@429fbb8b
[19:22:08] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@429fbb8b
[19:22:08] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4ceeb9b7
[19:22:08] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@73921042
[19:22:08] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a079a07
[19:22:08] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2824bdf3
[19:22:08] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@113e9a41
[19:22:08] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@72cd8824
[19:22:08] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@749ce3d8
[19:22:08] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@795a039d
[19:22:08] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.22
      major : 5
      minor : 7
[19:22:08] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e )
      major : 5
      minor : 1
[19:22:08] JdbcEnvironmentInitiator - JDBC version : 4.0
[19:22:08] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[19:22:08] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[19:22:08] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[19:22:08] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[19:22:08] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[19:22:08] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[19:22:08] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[19:22:08] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[19:22:08] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[19:22:08] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[19:22:08] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[19:22:08] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[19:22:08] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[19:22:08] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[19:22:08] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[19:22:08] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[19:22:08] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[19:22:08] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[19:22:08] AnnotationBinder - Binding entity from annotated class: com.monk.sbbook.entity.LoginTicket
[19:22:08] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[19:22:08] EntityBinder - Import with entity name LoginTicket
[19:22:08] EntityBinder - Bind entity com.monk.sbbook.entity.LoginTicket on table login_ticket
[19:22:08] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_userid, insertable=true, updatable=true, unique=false}
[19:22:08] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[19:22:08] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:userId]
[19:22:08] SimpleValueBinder - building SimpleValue for userId
[19:22:08] PropertyBinder - Building property userId
[19:22:08] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_expired, insertable=true, updatable=true, unique=false}
[19:22:08] PropertyBinder - MetadataSourceProcessor property expired with lazy=false
[19:22:08] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:expired]
[19:22:08] SimpleValueBinder - building SimpleValue for expired
[19:22:08] PropertyBinder - Building property expired
[19:22:08] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_status, insertable=true, updatable=true, unique=false}
[19:22:08] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[19:22:08] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:status]
[19:22:08] SimpleValueBinder - building SimpleValue for status
[19:22:08] PropertyBinder - Building property status
[19:22:08] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_ticket, insertable=true, updatable=true, unique=false}
[19:22:08] PropertyBinder - MetadataSourceProcessor property ticket with lazy=false
[19:22:08] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:ticket]
[19:22:08] SimpleValueBinder - building SimpleValue for ticket
[19:22:08] PropertyBinder - Building property ticket
[19:22:08] AnnotationBinder - Binding entity from annotated class: com.monk.sbbook.entity.User
[19:22:08] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[19:22:08] EntityBinder - Import with entity name User
[19:22:08] EntityBinder - Bind entity com.monk.sbbook.entity.User on table user
[19:22:08] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_id, insertable=true, updatable=true, unique=false}
[19:22:08] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[19:22:08] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:id]
[19:22:08] SimpleValueBinder - building SimpleValue for id
[19:22:08] PropertyBinder - Building property id
[19:22:08] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_email, insertable=true, updatable=true, unique=false}
[19:22:08] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[19:22:08] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:email]
[19:22:08] SimpleValueBinder - building SimpleValue for email
[19:22:08] PropertyBinder - Building property email
[19:22:08] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_head_url, insertable=true, updatable=true, unique=false}
[19:22:08] PropertyBinder - MetadataSourceProcessor property headUrl with lazy=false
[19:22:08] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:headUrl]
[19:22:08] SimpleValueBinder - building SimpleValue for headUrl
[19:22:08] PropertyBinder - Building property headUrl
[19:22:08] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_mobile, insertable=true, updatable=true, unique=false}
[19:22:08] PropertyBinder - MetadataSourceProcessor property mobile with lazy=false
[19:22:08] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:mobile]
[19:22:08] SimpleValueBinder - building SimpleValue for mobile
[19:22:08] PropertyBinder - Building property mobile
[19:22:08] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_password, insertable=true, updatable=true, unique=false}
[19:22:08] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[19:22:08] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:password]
[19:22:08] SimpleValueBinder - building SimpleValue for password
[19:22:08] PropertyBinder - Building property password
[19:22:08] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_role, insertable=true, updatable=true, unique=false}
[19:22:08] PropertyBinder - MetadataSourceProcessor property role with lazy=false
[19:22:08] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:role]
[19:22:08] SimpleValueBinder - building SimpleValue for role
[19:22:08] PropertyBinder - Building property role
[19:22:08] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_salt, insertable=true, updatable=true, unique=false}
[19:22:08] PropertyBinder - MetadataSourceProcessor property salt with lazy=false
[19:22:08] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:salt]
[19:22:08] SimpleValueBinder - building SimpleValue for salt
[19:22:08] PropertyBinder - Building property salt
[19:22:08] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_username, insertable=true, updatable=true, unique=true}
[19:22:08] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[19:22:08] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:username]
[19:22:08] SimpleValueBinder - building SimpleValue for username
[19:22:08] PropertyBinder - Building property username
[19:22:08] SimpleValueBinder - Starting fillSimpleValue for userId
[19:22:08] SimpleValueBinder - Starting fillSimpleValue for expired
[19:22:08] SimpleValueBinder - Starting fillSimpleValue for status
[19:22:08] SimpleValueBinder - Starting fillSimpleValue for ticket
[19:22:08] SimpleValueBinder - Starting fillSimpleValue for id
[19:22:08] SimpleValueBinder - Starting fillSimpleValue for email
[19:22:08] SimpleValueBinder - Starting fillSimpleValue for headUrl
[19:22:08] SimpleValueBinder - Starting fillSimpleValue for mobile
[19:22:08] SimpleValueBinder - Starting fillSimpleValue for password
[19:22:08] SimpleValueBinder - Starting fillSimpleValue for role
[19:22:08] SimpleValueBinder - Starting fillSimpleValue for salt
[19:22:08] SimpleValueBinder - Starting fillSimpleValue for username
[19:22:08] PrimaryKey - Forcing column [t_userid] to be non-null as it is part of the primary key for table [login_ticket]
[19:22:08] PrimaryKey - Forcing column [t_id] to be non-null as it is part of the primary key for table [user]
[19:22:08] SessionFactoryImpl - Building session factory
[19:22:08] Settings - SessionFactory name : null
[19:22:08] Settings - Automatic flush during beforeCompletion(): enabled
[19:22:08] Settings - Automatic session close at end of transaction: disabled
[19:22:08] Settings - Statistics: disabled
[19:22:08] Settings - Deleted entity synthetic identifier rollback: disabled
[19:22:08] Settings - Default entity-mode: pojo
[19:22:08] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[19:22:08] Settings - Allow initialization of lazy state outside session : disabled
[19:22:08] Settings - Using BatchFetchStyle : LEGACY
[19:22:08] Settings - Default batch fetch size: -1
[19:22:08] Settings - Maximum outer join fetch depth: 2
[19:22:08] Settings - Default null ordering: NONE
[19:22:08] Settings - Order SQL updates by primary key: disabled
[19:22:08] Settings - Order SQL inserts for batching: disabled
[19:22:08] Settings - multi-tenancy strategy : NONE
[19:22:08] Settings - JTA Track by Thread: enabled
[19:22:08] Settings - Query language substitutions: {}
[19:22:08] Settings - JPA query language strict compliance: disabled
[19:22:08] Settings - Named query checking : enabled
[19:22:08] Settings - Second-level cache: enabled
[19:22:08] Settings - Second-level query cache: disabled
[19:22:08] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@707e7d7a
[19:22:08] Settings - Second-level cache region prefix: null
[19:22:08] Settings - Optimize second-level cache for minimal puts: disabled
[19:22:08] Settings - Structured second-level cache entries: disabled
[19:22:08] Settings - Second-level cache direct-reference entries: disabled
[19:22:08] Settings - Automatic eviction of collection cache: disabled
[19:22:08] Settings - JDBC batch size: 15
[19:22:08] Settings - JDBC batch updates for versioned data: enabled
[19:22:08] Settings - Scrollable result sets: enabled
[19:22:08] Settings - Wrap result sets: disabled
[19:22:08] Settings - JDBC3 getGeneratedKeys(): enabled
[19:22:08] Settings - JDBC result set fetch size: null
[19:22:08] Settings - Connection release mode: ON_CLOSE
[19:22:08] Settings - Generate SQL with comments: disabled
[19:22:08] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[19:22:08] SessionFactoryImpl - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, com.sun.management.jmxremote.authenticate=false, java.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/tools.jar:/Users/wengjf/Server/SpringMVC/sb-book/target/classes:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.0.1.RELEASE/spring-boot-starter-web-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.0.1.RELEASE/spring-boot-starter-json-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.5/jackson-databind-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.5/jackson-core-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.9.5/jackson-datatype-jdk8-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.9.5/jackson-datatype-jsr310-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.9.5/jackson-module-parameter-names-2.9.5.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.0.1.RELEASE/spring-boot-starter-tomcat-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/8.5.29/tomcat-embed-websocket-8.5.29.jar:/Users/wengjf/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.9.Final/hibernate-validator-6.0.9.Final.jar:/Users/wengjf/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/Users/wengjf/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/wengjf/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/wengjf/.m2/repository/org/springframework/spring-web/5.0.5.RELEASE/spring-web-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-beans/5.0.5.RELEASE/spring-beans-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-webmvc/5.0.5.RELEASE/spring-webmvc-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-aop/5.0.5.RELEASE/spring-aop-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-expression/5.0.5.RELEASE/spring-expression-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/Users/wengjf/.m2/repository/org/springframework/spring-core/5.0.5.RELEASE/spring-core-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-jcl/5.0.5.RELEASE/spring-jcl-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter/2.0.1.RELEASE/spring-boot-starter-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot/2.0.1.RELEASE/spring-boot-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.0.1.RELEASE/spring-boot-autoconfigure-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:/Users/wengjf/.m2/repository/org/yaml/snakeyaml/1.19/snakeyaml-1.19.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-log4j/1.3.8.RELEASE/spring-boot-starter-log4j-1.3.8.RELEASE.jar:/Users/wengjf/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar:/Users/wengjf/.m2/repository/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar:/Users/wengjf/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/Users/wengjf/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-devtools/2.0.1.RELEASE/spring-boot-devtools-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.29/tomcat-embed-jasper-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.29/tomcat-embed-core-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.29/tomcat-annotations-api-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.29/tomcat-embed-el-8.5.29.jar:/Users/wengjf/.m2/repository/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:/Users/wengjf/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/Users/wengjf/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/Users/wengjf/.m2/repository/mysql/mysql-connector-java/5.1.46/mysql-connector-java-5.1.46.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.0.1.RELEASE/spring-boot-starter-data-jpa-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.0.1.RELEASE/spring-boot-starter-aop-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/aspectj/aspectjweaver/1.8.13/aspectjweaver-1.8.13.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.0.1.RELEASE/spring-boot-starter-jdbc-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/com/zaxxer/HikariCP/2.7.8/HikariCP-2.7.8.jar:/Users/wengjf/.m2/repository/org/springframework/spring-jdbc/5.0.5.RELEASE/spring-jdbc-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/hibernate/hibernate-core/5.2.16.Final/hibernate-core-5.2.16.Final.jar:/Users/wengjf/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/wengjf/.m2/repository/org/javassist/javassist/3.22.0-GA/javassist-3.22.0-GA.jar:/Users/wengjf/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/wengjf/.m2/repository/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/Users/wengjf/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/wengjf/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/wengjf/.m2/repository/javax/transaction/javax.transaction-api/1.2/javax.transaction-api-1.2.jar:/Users/wengjf/.m2/repository/org/springframework/data/spring-data-jpa/2.0.6.RELEASE/spring-data-jpa-2.0.6.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/data/spring-data-commons/2.0.6.RELEASE/spring-data-commons-2.0.6.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-orm/5.0.5.RELEASE/spring-orm-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-aspects/5.0.5.RELEASE/spring-aspects-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-mail/2.0.1.RELEASE/spring-boot-starter-mail-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-context/5.0.5.RELEASE/spring-context-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-context-support/5.0.5.RELEASE/spring-context-support-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/com/sun/mail/javax.mail/1.6.1/javax.mail-1.6.1.jar:/Users/wengjf/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-quartz/2.0.1.RELEASE/spring-boot-starter-quartz-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-tx/5.0.5.RELEASE/spring-tx-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/quartz-scheduler/quartz/2.3.0/quartz-2.3.0.jar:/Users/wengjf/.m2/repository/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Macau, os.name=Mac OS X, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib, com.sun.management.jmxremote.ssl=false, spring.application.admin.enabled=true, sun.java.command=com.monk.sbbook.SbBookApplication, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2bfd7d9f, com.sun.management.jmxremote=, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=/Users/wengjf, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre, spring.output.ansi.enabled=always, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=1.8.0_171-b11, user.name=wengjf, path.separator=:, os.version=10.13.2, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/, com.zaxxer.hikari.pool_number=1, catalina.home=/private/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/tomcat.8479365457331510146.8080, com.sun.management.jmxremote.port=64722, java.version=1.8.0_171, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/Users/wengjf/Server/SpringMVC/sb-book, os.arch=x86_64, PID=2389, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, catalina.base=/private/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/tomcat.8479365457331510146.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2ec0dee2, java.library.path=/Users/wengjf/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.171-b11, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, hibernate.connection.datasource=HikariDataSource (HikariPool-1), sun.io.unicode.encoding=UnicodeBig, java.ext.dirs=/Users/wengjf/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, java.class.version=52.0, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16}
[19:22:08] TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[19:22:08] TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[19:22:08] TraversableResolvers - Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
[19:22:08] ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[19:22:08] ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[19:22:08] ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[19:22:08] ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[19:22:08] ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
[19:22:08] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[19:22:08] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[19:22:08] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[19:22:08] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[19:22:08] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[19:22:08] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:22:08] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:22:08] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:22:08] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:22:08] JaccIntegrator - Skipping JACC integration as it was not enabled
[19:22:08] CascadeStyles - External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[19:22:08] SessionFactoryImpl - Instantiated session factory
[19:22:08] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:22:08] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:22:08] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:22:08] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:22:08] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:22:08] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:22:08] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:22:08] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:22:08] AbstractEntityPersister - Static SQL for entity: com.monk.sbbook.entity.LoginTicket
[19:22:08] AbstractEntityPersister -  Version select: select t_userid from login_ticket where t_userid =?
[19:22:08] AbstractEntityPersister -  Snapshot select: select loginticke_.t_userid, loginticke_.t_expired as t_expire2_0_, loginticke_.t_status as t_status3_0_, loginticke_.t_ticket as t_ticket4_0_ from login_ticket loginticke_ where loginticke_.t_userid=?
[19:22:08] AbstractEntityPersister -  Insert 0: insert into login_ticket (t_expired, t_status, t_ticket, t_userid) values (?, ?, ?, ?)
[19:22:08] AbstractEntityPersister -  Update 0: update login_ticket set t_expired=?, t_status=?, t_ticket=? where t_userid=?
[19:22:08] AbstractEntityPersister -  Delete 0: delete from login_ticket where t_userid=?
[19:22:08] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@578a161f]
[19:22:08] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:08] MetamodelGraphWalker - Visiting attribute path : status
[19:22:08] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:08] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:08] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:08] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:08] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [NONE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:22:08] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3522a3ef]
[19:22:08] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:08] MetamodelGraphWalker - Visiting attribute path : status
[19:22:08] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:08] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:08] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:08] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:08] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [READ]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:22:08] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55fc6e31]
[19:22:08] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:08] MetamodelGraphWalker - Visiting attribute path : status
[19:22:08] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:08] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:08] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:08] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:08] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:22:08] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@288fed47]
[19:22:08] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:08] MetamodelGraphWalker - Visiting attribute path : status
[19:22:08] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:08] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:08] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:08] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:08] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE_NOWAIT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:22:08] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28c0ab02]
[19:22:08] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:08] MetamodelGraphWalker - Visiting attribute path : status
[19:22:08] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:08] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:08] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:08] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:08] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE_SKIPLOCKED]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:22:08] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67abcb68]
[19:22:08] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:08] MetamodelGraphWalker - Visiting attribute path : status
[19:22:08] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:08] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:08] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:08] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:08] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [FORCE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:22:08] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@abd804c]
[19:22:08] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:08] MetamodelGraphWalker - Visiting attribute path : status
[19:22:08] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:08] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:08] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:08] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:08] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_READ]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? lock in share mode
[19:22:08] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cfda792]
[19:22:08] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:08] MetamodelGraphWalker - Visiting attribute path : status
[19:22:08] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:08] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:08] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:08] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:08] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_WRITE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:22:08] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48f6c3e7]
[19:22:08] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:08] MetamodelGraphWalker - Visiting attribute path : status
[19:22:08] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:08] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:08] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:08] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:08] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_FORCE_INCREMENT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:22:08] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a676701]
[19:22:08] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:08] MetamodelGraphWalker - Visiting attribute path : status
[19:22:08] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:08] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:08] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:08] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:08] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [OPTIMISTIC]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:22:08] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16c1752c]
[19:22:08] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:08] MetamodelGraphWalker - Visiting attribute path : status
[19:22:08] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:08] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:08] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:08] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:08] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [OPTIMISTIC_FORCE_INCREMENT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:22:08] Loader - Static select for action ACTION_MERGE on entity com.monk.sbbook.entity.LoginTicket: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:22:08] Loader - Static select for action ACTION_REFRESH on entity com.monk.sbbook.entity.LoginTicket: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:22:08] AbstractEntityPersister - Static SQL for entity: com.monk.sbbook.entity.User
[19:22:08] AbstractEntityPersister -  Version select: select t_id from user where t_id =?
[19:22:08] AbstractEntityPersister -  Snapshot select: select user_.t_id, user_.t_email as t_email2_1_, user_.t_head_url as t_head_u3_1_, user_.t_mobile as t_mobile4_1_, user_.t_password as t_passwo5_1_, user_.t_role as t_role6_1_, user_.t_salt as t_salt7_1_, user_.t_username as t_userna8_1_ from user user_ where user_.t_id=?
[19:22:08] AbstractEntityPersister -  Insert 0: insert into user (t_email, t_head_url, t_mobile, t_password, t_role, t_salt, t_username, t_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[19:22:08] AbstractEntityPersister -  Update 0: update user set t_email=?, t_head_url=?, t_mobile=?, t_password=?, t_role=?, t_salt=?, t_username=? where t_id=?
[19:22:08] AbstractEntityPersister -  Delete 0: delete from user where t_id=?
[19:22:08] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@680d23ce]
[19:22:08] MetamodelGraphWalker - Visiting attribute path : email
[19:22:08] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:22:08] MetamodelGraphWalker - Visiting attribute path : mobile
[19:22:08] MetamodelGraphWalker - Visiting attribute path : password
[19:22:08] MetamodelGraphWalker - Visiting attribute path : role
[19:22:08] MetamodelGraphWalker - Visiting attribute path : salt
[19:22:08] MetamodelGraphWalker - Visiting attribute path : username
[19:22:08] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:08] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:08] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:22:08] EntityLoader - Static select for entity com.monk.sbbook.entity.User [NONE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:22:08] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8250d7]
[19:22:08] MetamodelGraphWalker - Visiting attribute path : email
[19:22:08] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:22:08] MetamodelGraphWalker - Visiting attribute path : mobile
[19:22:08] MetamodelGraphWalker - Visiting attribute path : password
[19:22:08] MetamodelGraphWalker - Visiting attribute path : role
[19:22:08] MetamodelGraphWalker - Visiting attribute path : salt
[19:22:08] MetamodelGraphWalker - Visiting attribute path : username
[19:22:08] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:08] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:08] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:22:08] EntityLoader - Static select for entity com.monk.sbbook.entity.User [READ]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:22:08] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55979f55]
[19:22:08] MetamodelGraphWalker - Visiting attribute path : email
[19:22:08] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:22:08] MetamodelGraphWalker - Visiting attribute path : mobile
[19:22:08] MetamodelGraphWalker - Visiting attribute path : password
[19:22:08] MetamodelGraphWalker - Visiting attribute path : role
[19:22:08] MetamodelGraphWalker - Visiting attribute path : salt
[19:22:08] MetamodelGraphWalker - Visiting attribute path : username
[19:22:08] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:08] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:08] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:22:08] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:22:08] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f071241]
[19:22:08] MetamodelGraphWalker - Visiting attribute path : email
[19:22:08] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:22:08] MetamodelGraphWalker - Visiting attribute path : mobile
[19:22:08] MetamodelGraphWalker - Visiting attribute path : password
[19:22:08] MetamodelGraphWalker - Visiting attribute path : role
[19:22:08] MetamodelGraphWalker - Visiting attribute path : salt
[19:22:08] MetamodelGraphWalker - Visiting attribute path : username
[19:22:08] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:08] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:08] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:22:08] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE_NOWAIT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:22:08] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c56fd34]
[19:22:08] MetamodelGraphWalker - Visiting attribute path : email
[19:22:08] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:22:08] MetamodelGraphWalker - Visiting attribute path : mobile
[19:22:08] MetamodelGraphWalker - Visiting attribute path : password
[19:22:08] MetamodelGraphWalker - Visiting attribute path : role
[19:22:08] MetamodelGraphWalker - Visiting attribute path : salt
[19:22:08] MetamodelGraphWalker - Visiting attribute path : username
[19:22:08] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:08] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:08] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:22:08] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE_SKIPLOCKED]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:22:08] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e2324f7]
[19:22:08] MetamodelGraphWalker - Visiting attribute path : email
[19:22:08] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:22:08] MetamodelGraphWalker - Visiting attribute path : mobile
[19:22:08] MetamodelGraphWalker - Visiting attribute path : password
[19:22:08] MetamodelGraphWalker - Visiting attribute path : role
[19:22:08] MetamodelGraphWalker - Visiting attribute path : salt
[19:22:08] MetamodelGraphWalker - Visiting attribute path : username
[19:22:08] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:08] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:08] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:22:08] EntityLoader - Static select for entity com.monk.sbbook.entity.User [FORCE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:22:08] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d7cfbca]
[19:22:08] MetamodelGraphWalker - Visiting attribute path : email
[19:22:08] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:22:08] MetamodelGraphWalker - Visiting attribute path : mobile
[19:22:08] MetamodelGraphWalker - Visiting attribute path : password
[19:22:08] MetamodelGraphWalker - Visiting attribute path : role
[19:22:08] MetamodelGraphWalker - Visiting attribute path : salt
[19:22:08] MetamodelGraphWalker - Visiting attribute path : username
[19:22:08] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:08] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:08] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:22:08] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_READ]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? lock in share mode
[19:22:08] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11d6adf0]
[19:22:08] MetamodelGraphWalker - Visiting attribute path : email
[19:22:08] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:22:08] MetamodelGraphWalker - Visiting attribute path : mobile
[19:22:08] MetamodelGraphWalker - Visiting attribute path : password
[19:22:08] MetamodelGraphWalker - Visiting attribute path : role
[19:22:08] MetamodelGraphWalker - Visiting attribute path : salt
[19:22:08] MetamodelGraphWalker - Visiting attribute path : username
[19:22:08] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:08] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:08] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:22:08] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_WRITE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:22:08] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@304827a6]
[19:22:08] MetamodelGraphWalker - Visiting attribute path : email
[19:22:08] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:22:08] MetamodelGraphWalker - Visiting attribute path : mobile
[19:22:08] MetamodelGraphWalker - Visiting attribute path : password
[19:22:08] MetamodelGraphWalker - Visiting attribute path : role
[19:22:08] MetamodelGraphWalker - Visiting attribute path : salt
[19:22:08] MetamodelGraphWalker - Visiting attribute path : username
[19:22:08] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:08] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:08] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:22:08] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:22:08] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bd534a5]
[19:22:08] MetamodelGraphWalker - Visiting attribute path : email
[19:22:08] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:22:08] MetamodelGraphWalker - Visiting attribute path : mobile
[19:22:08] MetamodelGraphWalker - Visiting attribute path : password
[19:22:08] MetamodelGraphWalker - Visiting attribute path : role
[19:22:08] MetamodelGraphWalker - Visiting attribute path : salt
[19:22:08] MetamodelGraphWalker - Visiting attribute path : username
[19:22:08] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:08] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:08] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:22:08] EntityLoader - Static select for entity com.monk.sbbook.entity.User [OPTIMISTIC]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:22:08] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11e6acb8]
[19:22:08] MetamodelGraphWalker - Visiting attribute path : email
[19:22:08] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:22:08] MetamodelGraphWalker - Visiting attribute path : mobile
[19:22:08] MetamodelGraphWalker - Visiting attribute path : password
[19:22:08] MetamodelGraphWalker - Visiting attribute path : role
[19:22:08] MetamodelGraphWalker - Visiting attribute path : salt
[19:22:08] MetamodelGraphWalker - Visiting attribute path : username
[19:22:08] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:08] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:08] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:22:08] EntityLoader - Static select for entity com.monk.sbbook.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:22:08] Loader - Static select for action ACTION_MERGE on entity com.monk.sbbook.entity.User: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:22:08] Loader - Static select for action ACTION_REFRESH on entity com.monk.sbbook.entity.User: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:22:08] Table - No alter strings for table : hibernate_sequence
[19:22:08] Table - No alter strings for table : login_ticket
[19:22:08] Table - No alter strings for table : user
[19:22:08] NamedQueryRepository - Checking 0 named HQL queries
[19:22:08] NamedQueryRepository - Checking 0 named SQL queries
[19:22:08] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@aecef7a
[19:22:08] SessionFactoryRegistry - Registering SessionFactory: 3dea8f84-9715-4bfd-908e-5ff401da2e83 (<unnamed>)
[19:22:08] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[19:22:08] StatisticsInitiator - Statistics initialized [enabled=false]
[19:22:08] QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@49a6a8b2
[19:22:08] QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
[19:22:08] QueryTranslatorImpl - parse() - HQL: update com.monk.sbbook.entity.LoginTicket u set u.status=?1 where u.ticket=?2
[19:22:08] ErrorCounter - throwQueryException() : no errors
[19:22:08] QueryTranslatorImpl - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  \-[IDENT] Node: 'monk'
    |     |  |  |  \-[IDENT] Node: 'sbbook'
    |     |  |  \-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'LoginTicket'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'status'
    |     \-[PARAM] Node: '?'
    |        \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'ticket'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '2'

[19:22:08] HqlSqlBaseWalker - update << begin [level=1, statement=update]
[19:22:08] FromElement - FromClause{level=1} : com.monk.sbbook.entity.LoginTicket (u) -> loginticke0_
[19:22:08] FromReferenceNode - Resolved : u -> t_userid
[19:22:08] DotNode - getDataType() : status -> org.hibernate.type.IntegerType@40f7d443
[19:22:08] FromReferenceNode - Resolved : u.status -> t_status
[19:22:08] FromReferenceNode - Resolved : u -> t_userid
[19:22:08] DotNode - getDataType() : ticket -> org.hibernate.type.StringType@40ed8aa
[19:22:08] FromReferenceNode - Resolved : u.ticket -> t_ticket
[19:22:08] HqlSqlBaseWalker - update : finishing up [level=1, statement=update]
[19:22:08] HqlSqlBaseWalker - update >> end [level=1, statement=update]
[19:22:08] QueryTranslatorImpl - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (login_ticket)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[loginticke0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'login_ticket' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=login_ticket,tableAlias=loginticke0_,origin=null,columns={,className=com.monk.sbbook.entity.LoginTicket}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 't_status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=u.status,tableAlias=loginticke0_,className=com.monk.sbbook.entity.LoginTicket,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 't_userid' {alias=u, className=com.monk.sbbook.entity.LoginTicket, tableAlias=loginticke0_}
    |     |  \-[IDENT] IdentNode: 'status' {originalText=status}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@40f7d443}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 't_ticket' {propertyName=ticket,dereferenceType=PRIMITIVE,getPropertyPath=ticket,path=u.ticket,tableAlias=loginticke0_,className=com.monk.sbbook.entity.LoginTicket,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 't_userid' {alias=u, className=com.monk.sbbook.entity.LoginTicket, tableAlias=loginticke0_}
          |  \-[IDENT] IdentNode: 'ticket' {originalText=ticket}
          \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@40ed8aa}

[19:22:08] ErrorCounter - throwQueryException() : no errors
[19:22:08] ErrorCounter - throwQueryException() : no errors
[19:22:08] QueryTranslatorImpl - parse() - HQL: update com.monk.sbbook.entity.User u set u.username= ?1 where u.id= ?2
[19:22:08] ErrorCounter - throwQueryException() : no errors
[19:22:08] QueryTranslatorImpl - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  \-[IDENT] Node: 'monk'
    |     |  |  |  \-[IDENT] Node: 'sbbook'
    |     |  |  \-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'username'
    |     \-[PARAM] Node: '?'
    |        \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '2'

[19:22:08] HqlSqlBaseWalker - update << begin [level=1, statement=update]
[19:22:08] FromElement - FromClause{level=1} : com.monk.sbbook.entity.User (u) -> user0_
[19:22:08] FromReferenceNode - Resolved : u -> t_id
[19:22:08] DotNode - getDataType() : username -> org.hibernate.type.StringType@40ed8aa
[19:22:08] FromReferenceNode - Resolved : u.username -> t_username
[19:22:08] FromReferenceNode - Resolved : u -> t_id
[19:22:08] DotNode - getDataType() : id -> org.hibernate.type.LongType@4edb9f6a
[19:22:08] FromReferenceNode - Resolved : u.id -> t_id
[19:22:08] HqlSqlBaseWalker - update : finishing up [level=1, statement=update]
[19:22:08] HqlSqlBaseWalker - update >> end [level=1, statement=update]
[19:22:08] QueryTranslatorImpl - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.monk.sbbook.entity.User}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 't_username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=com.monk.sbbook.entity.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 't_id' {alias=u, className=com.monk.sbbook.entity.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'username' {originalText=username}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@40ed8aa}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 't_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=com.monk.sbbook.entity.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 't_id' {alias=u, className=com.monk.sbbook.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.LongType@4edb9f6a}

[19:22:08] ErrorCounter - throwQueryException() : no errors
[19:22:08] ErrorCounter - throwQueryException() : no errors
[19:22:08] SessionFactoryImpl - HHH000031: Closing
[19:22:08] CascadeStyles - External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
[19:22:08] AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[19:22:08] BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[19:22:08] HikariDataSource - HikariPool-1 - Shutdown initiated...
[19:22:08] HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[19:22:08] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@4d77d4f1: (connection evicted)
[19:22:08] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@6a2cab1d: (connection evicted)
[19:22:08] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@1130e2b1: (connection evicted)
[19:22:08] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@a3488b1: (connection evicted)
[19:22:08] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@5bdb41e1: (connection evicted)
[19:22:08] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@73a77639: (connection evicted)
[19:22:08] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@2aad03d0: (connection evicted)
[19:22:08] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@5e906234: (connection evicted)
[19:22:08] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@628c60d2: (connection evicted)
[19:22:08] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@26e5692d: (connection evicted)
[19:22:08] HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[19:22:08] HikariDataSource - HikariPool-1 - Shutdown completed.
[19:22:38] logging - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[19:22:38] Version - HV000001: Hibernate Validator 6.0.9.Final
[19:22:38] TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[19:22:38] TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[19:22:38] TraversableResolvers - Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
[19:22:38] ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[19:22:38] ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[19:22:38] ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[19:22:38] ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[19:22:38] SbBookApplication - Starting SbBookApplication on wjfdeiMac.local with PID 2426 (/Users/wengjf/Server/SpringMVC/sb-book/target/classes started by wengjf in /Users/wengjf/Server/SpringMVC/sb-book)
[19:22:38] SbBookApplication - Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
[19:22:38] SbBookApplication - No active profile set, falling back to default profiles: default
[19:22:38] ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
[19:22:38] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[19:22:38] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[19:22:38] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[19:22:38] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[19:22:38] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[19:22:40] HikariConfig - Driver class com.mysql.jdbc.Driver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@d3c4b32
[19:22:40] HikariConfig - HikariPool-1 - configuration:
[19:22:40] HikariConfig - allowPoolSuspension.............false
[19:22:40] HikariConfig - autoCommit......................true
[19:22:40] HikariConfig - catalog.........................none
[19:22:40] HikariConfig - connectionInitSql...............none
[19:22:40] HikariConfig - connectionTestQuery.............none
[19:22:40] HikariConfig - connectionTimeout...............30000
[19:22:40] HikariConfig - dataSource......................none
[19:22:40] HikariConfig - dataSourceClassName.............none
[19:22:40] HikariConfig - dataSourceJNDI..................none
[19:22:40] HikariConfig - dataSourceProperties............{password=<masked>}
[19:22:40] HikariConfig - driverClassName................."com.mysql.jdbc.Driver"
[19:22:40] HikariConfig - healthCheckProperties...........{}
[19:22:40] HikariConfig - healthCheckRegistry.............none
[19:22:40] HikariConfig - idleTimeout.....................600000
[19:22:40] HikariConfig - initializationFailFast..........true
[19:22:40] HikariConfig - initializationFailTimeout.......1
[19:22:40] HikariConfig - isolateInternalQueries..........false
[19:22:40] HikariConfig - jdbc4ConnectionTest.............false
[19:22:40] HikariConfig - jdbcUrl.........................jdbc:mysql://localhost:3306/sbBook
[19:22:40] HikariConfig - leakDetectionThreshold..........0
[19:22:40] HikariConfig - maxLifetime.....................1800000
[19:22:40] HikariConfig - maximumPoolSize.................10
[19:22:40] HikariConfig - metricRegistry..................none
[19:22:40] HikariConfig - metricsTrackerFactory...........none
[19:22:40] HikariConfig - minimumIdle.....................10
[19:22:40] HikariConfig - password........................<masked>
[19:22:40] HikariConfig - poolName........................"HikariPool-1"
[19:22:40] HikariConfig - readOnly........................false
[19:22:40] HikariConfig - registerMbeans..................false
[19:22:40] HikariConfig - scheduledExecutor...............none
[19:22:40] HikariConfig - scheduledExecutorService........internal
[19:22:40] HikariConfig - schema..........................none
[19:22:40] HikariConfig - threadFactory...................internal
[19:22:40] HikariConfig - transactionIsolation............default
[19:22:40] HikariConfig - username........................"root"
[19:22:40] HikariConfig - validationTimeout...............5000
[19:22:40] HikariDataSource - HikariPool-1 - Starting...
[19:22:40] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@605b3cf4
[19:22:40] HikariDataSource - HikariPool-1 - Start completed.
[19:22:41] LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@d3c4b32
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/wengjf/Server/SpringMVC/sb-book/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.monk.sbbook.entity.LoginTicket
		com.monk.sbbook.entity.User]
	Mapping files names []
	Properties []
[19:22:41] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[19:22:41] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[19:22:41] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[19:22:41] IntegratorServiceImpl - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[19:22:41] Version - HHH000412: Hibernate Core {5.2.16.Final}
[19:22:41] Environment - HHH000206: hibernate.properties not found
[19:22:41] HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
[19:22:41] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@130d6df
[19:22:41] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@723d6fa8
[19:22:41] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@693966a4
[19:22:41] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@3193cc02
[19:22:41] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@3e151726
[19:22:41] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@15f00889
[19:22:41] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[19:22:41] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@740dd7b5
[19:22:41] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@7b02d412
[19:22:41] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@ccef2fc
[19:22:41] HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[19:22:41] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[19:22:41] Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[19:22:41] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@53664d5
[19:22:41] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@53664d5
[19:22:41] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@53664d5
[19:22:41] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1b587605
[19:22:41] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@549ca94e
[19:22:41] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1eb9cef1
[19:22:41] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@27776d71
[19:22:41] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@27776d71
[19:22:41] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@27776d71
[19:22:41] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2bba237d
[19:22:41] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2bba237d
[19:22:41] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2bba237d
[19:22:41] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@28815508
[19:22:41] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@28815508
[19:22:41] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@28815508
[19:22:41] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@78868ebd
[19:22:41] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@78868ebd
[19:22:41] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@78868ebd
[19:22:41] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7089bc5d
[19:22:41] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7089bc5d
[19:22:41] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7089bc5d
[19:22:41] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@23e0310c
[19:22:41] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@23e0310c
[19:22:41] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@23e0310c
[19:22:41] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3078ee0c
[19:22:41] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3078ee0c
[19:22:41] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3078ee0c
[19:22:41] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@54831a80
[19:22:41] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@54831a80
[19:22:41] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3e00d8e3
[19:22:41] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3e00d8e3
[19:22:41] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5f413347
[19:22:41] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5f413347
[19:22:41] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7c3ea7ef
[19:22:41] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@674b95ef
[19:22:41] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4016391e
[19:22:41] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4016391e
[19:22:41] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@50fd1a9c
[19:22:41] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@50fd1a9c
[19:22:41] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4a77302e
[19:22:41] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4a77302e
[19:22:41] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@241781e6
[19:22:41] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@241781e6
[19:22:41] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@190956c8
[19:22:41] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@190956c8
[19:22:41] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4113962c
[19:22:41] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4113962c
[19:22:41] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6126c68d
[19:22:41] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6126c68d
[19:22:41] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@73512549
[19:22:41] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@73512549
[19:22:41] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56333eef
[19:22:41] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56333eef
[19:22:41] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38db2fe
[19:22:41] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38db2fe
[19:22:41] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6f37057d
[19:22:41] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6f37057d
[19:22:41] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@31083da5
[19:22:41] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@31083da5
[19:22:41] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@31083da5
[19:22:41] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@59d3eac2
[19:22:41] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7dfb9eab
[19:22:41] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7dfb9eab
[19:22:41] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7dfb9eab
[19:22:41] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2db99a0a
[19:22:41] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2f5b5727
[19:22:41] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2f5b5727
[19:22:41] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@31388190
[19:22:41] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@31388190
[19:22:41] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7ef5fec3
[19:22:41] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7ef5fec3
[19:22:41] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@63b7eb2c
[19:22:41] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@63b7eb2c
[19:22:41] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@74afe37b
[19:22:41] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@74afe37b
[19:22:41] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2573ad0f
[19:22:41] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2258f111
[19:22:41] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2258f111
[19:22:41] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2258f111
[19:22:41] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29cd6ecc
[19:22:41] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29cd6ecc
[19:22:41] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29cd6ecc
[19:22:41] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3412a9ba
[19:22:41] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4fce2248
[19:22:41] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@524fdb40
[19:22:41] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@524fdb40
[19:22:41] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@524fdb40
[19:22:41] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@87a6149
[19:22:41] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@87a6149
[19:22:41] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@87a6149
[19:22:41] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3bf9ceff
[19:22:41] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@4e1c006
[19:22:41] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@69fd6485
[19:22:41] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@69fd6485
[19:22:41] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5602056c
[19:22:41] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5e28d5ae
[19:22:41] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5e28d5ae
[19:22:41] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4598d815
[19:22:41] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4598d815
[19:22:41] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@30557c56
[19:22:41] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@40d96e87
[19:22:41] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6734087
[19:22:41] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@23e356c6
[19:22:41] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@23e356c6
[19:22:41] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@75048725
[19:22:41] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4ce8aa25
[19:22:41] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@16489202
[19:22:41] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@18994630
[19:22:41] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4975d7a9
[19:22:41] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@40c5f520
[19:22:41] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@12cfb7b8
[19:22:41] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@40b5db17
[19:22:41] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.22
      major : 5
      minor : 7
[19:22:41] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e )
      major : 5
      minor : 1
[19:22:41] JdbcEnvironmentInitiator - JDBC version : 4.0
[19:22:41] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[19:22:41] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[19:22:41] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[19:22:41] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[19:22:41] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[19:22:41] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[19:22:41] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[19:22:41] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[19:22:41] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[19:22:41] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[19:22:41] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[19:22:41] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[19:22:41] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[19:22:41] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[19:22:41] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[19:22:41] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[19:22:41] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[19:22:41] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[19:22:41] AnnotationBinder - Binding entity from annotated class: com.monk.sbbook.entity.LoginTicket
[19:22:41] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[19:22:41] EntityBinder - Import with entity name LoginTicket
[19:22:41] EntityBinder - Bind entity com.monk.sbbook.entity.LoginTicket on table login_ticket
[19:22:41] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_userid, insertable=true, updatable=true, unique=false}
[19:22:41] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[19:22:41] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:userId]
[19:22:41] SimpleValueBinder - building SimpleValue for userId
[19:22:41] PropertyBinder - Building property userId
[19:22:41] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_expired, insertable=true, updatable=true, unique=false}
[19:22:41] PropertyBinder - MetadataSourceProcessor property expired with lazy=false
[19:22:41] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:expired]
[19:22:41] SimpleValueBinder - building SimpleValue for expired
[19:22:41] PropertyBinder - Building property expired
[19:22:41] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_status, insertable=true, updatable=true, unique=false}
[19:22:41] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[19:22:41] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:status]
[19:22:41] SimpleValueBinder - building SimpleValue for status
[19:22:41] PropertyBinder - Building property status
[19:22:41] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_ticket, insertable=true, updatable=true, unique=false}
[19:22:41] PropertyBinder - MetadataSourceProcessor property ticket with lazy=false
[19:22:41] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:ticket]
[19:22:41] SimpleValueBinder - building SimpleValue for ticket
[19:22:41] PropertyBinder - Building property ticket
[19:22:41] AnnotationBinder - Binding entity from annotated class: com.monk.sbbook.entity.User
[19:22:41] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[19:22:41] EntityBinder - Import with entity name User
[19:22:41] EntityBinder - Bind entity com.monk.sbbook.entity.User on table user
[19:22:41] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_id, insertable=true, updatable=true, unique=false}
[19:22:41] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[19:22:41] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:id]
[19:22:41] SimpleValueBinder - building SimpleValue for id
[19:22:41] PropertyBinder - Building property id
[19:22:41] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_email, insertable=true, updatable=true, unique=false}
[19:22:41] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[19:22:41] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:email]
[19:22:41] SimpleValueBinder - building SimpleValue for email
[19:22:41] PropertyBinder - Building property email
[19:22:41] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_head_url, insertable=true, updatable=true, unique=false}
[19:22:41] PropertyBinder - MetadataSourceProcessor property headUrl with lazy=false
[19:22:41] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:headUrl]
[19:22:41] SimpleValueBinder - building SimpleValue for headUrl
[19:22:41] PropertyBinder - Building property headUrl
[19:22:41] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_mobile, insertable=true, updatable=true, unique=false}
[19:22:41] PropertyBinder - MetadataSourceProcessor property mobile with lazy=false
[19:22:41] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:mobile]
[19:22:41] SimpleValueBinder - building SimpleValue for mobile
[19:22:41] PropertyBinder - Building property mobile
[19:22:41] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_password, insertable=true, updatable=true, unique=false}
[19:22:41] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[19:22:41] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:password]
[19:22:41] SimpleValueBinder - building SimpleValue for password
[19:22:41] PropertyBinder - Building property password
[19:22:41] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_role, insertable=true, updatable=true, unique=false}
[19:22:41] PropertyBinder - MetadataSourceProcessor property role with lazy=false
[19:22:41] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:role]
[19:22:41] SimpleValueBinder - building SimpleValue for role
[19:22:41] PropertyBinder - Building property role
[19:22:41] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_salt, insertable=true, updatable=true, unique=false}
[19:22:41] PropertyBinder - MetadataSourceProcessor property salt with lazy=false
[19:22:41] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:salt]
[19:22:41] SimpleValueBinder - building SimpleValue for salt
[19:22:41] PropertyBinder - Building property salt
[19:22:41] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_username, insertable=true, updatable=true, unique=true}
[19:22:41] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[19:22:41] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:username]
[19:22:41] SimpleValueBinder - building SimpleValue for username
[19:22:41] PropertyBinder - Building property username
[19:22:41] SimpleValueBinder - Starting fillSimpleValue for userId
[19:22:41] SimpleValueBinder - Starting fillSimpleValue for expired
[19:22:41] SimpleValueBinder - Starting fillSimpleValue for status
[19:22:41] SimpleValueBinder - Starting fillSimpleValue for ticket
[19:22:41] SimpleValueBinder - Starting fillSimpleValue for id
[19:22:41] SimpleValueBinder - Starting fillSimpleValue for email
[19:22:41] SimpleValueBinder - Starting fillSimpleValue for headUrl
[19:22:41] SimpleValueBinder - Starting fillSimpleValue for mobile
[19:22:41] SimpleValueBinder - Starting fillSimpleValue for password
[19:22:41] SimpleValueBinder - Starting fillSimpleValue for role
[19:22:41] SimpleValueBinder - Starting fillSimpleValue for salt
[19:22:41] SimpleValueBinder - Starting fillSimpleValue for username
[19:22:41] PrimaryKey - Forcing column [t_userid] to be non-null as it is part of the primary key for table [login_ticket]
[19:22:41] PrimaryKey - Forcing column [t_id] to be non-null as it is part of the primary key for table [user]
[19:22:41] SessionFactoryImpl - Building session factory
[19:22:41] Settings - SessionFactory name : null
[19:22:41] Settings - Automatic flush during beforeCompletion(): enabled
[19:22:41] Settings - Automatic session close at end of transaction: disabled
[19:22:41] Settings - Statistics: disabled
[19:22:41] Settings - Deleted entity synthetic identifier rollback: disabled
[19:22:41] Settings - Default entity-mode: pojo
[19:22:41] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[19:22:41] Settings - Allow initialization of lazy state outside session : disabled
[19:22:41] Settings - Using BatchFetchStyle : LEGACY
[19:22:41] Settings - Default batch fetch size: -1
[19:22:41] Settings - Maximum outer join fetch depth: 2
[19:22:41] Settings - Default null ordering: NONE
[19:22:41] Settings - Order SQL updates by primary key: disabled
[19:22:41] Settings - Order SQL inserts for batching: disabled
[19:22:41] Settings - multi-tenancy strategy : NONE
[19:22:41] Settings - JTA Track by Thread: enabled
[19:22:41] Settings - Query language substitutions: {}
[19:22:41] Settings - JPA query language strict compliance: disabled
[19:22:41] Settings - Named query checking : enabled
[19:22:41] Settings - Second-level cache: enabled
[19:22:41] Settings - Second-level query cache: disabled
[19:22:41] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4f8fe703
[19:22:41] Settings - Second-level cache region prefix: null
[19:22:41] Settings - Optimize second-level cache for minimal puts: disabled
[19:22:41] Settings - Structured second-level cache entries: disabled
[19:22:41] Settings - Second-level cache direct-reference entries: disabled
[19:22:41] Settings - Automatic eviction of collection cache: disabled
[19:22:41] Settings - JDBC batch size: 15
[19:22:41] Settings - JDBC batch updates for versioned data: enabled
[19:22:41] Settings - Scrollable result sets: enabled
[19:22:41] Settings - Wrap result sets: disabled
[19:22:41] Settings - JDBC3 getGeneratedKeys(): enabled
[19:22:41] Settings - JDBC result set fetch size: null
[19:22:41] Settings - Connection release mode: ON_CLOSE
[19:22:41] Settings - Generate SQL with comments: disabled
[19:22:41] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[19:22:41] SessionFactoryImpl - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/Users/wengjf/Server/SpringMVC/sb-book/target/classes:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.0.1.RELEASE/spring-boot-starter-aop-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.0.1.RELEASE/spring-boot-starter-jdbc-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.5/jackson-core-2.9.5.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.29/tomcat-embed-jasper-8.5.29.jar:/Users/wengjf/.m2/repository/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:/Users/wengjf/.m2/repository/org/springframework/data/spring-data-commons/2.0.6.RELEASE/spring-data-commons-2.0.6.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-tx/5.0.5.RELEASE/spring-tx-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/wengjf/.m2/repository/org/hibernate/hibernate-core/5.2.16.Final/hibernate-core-5.2.16.Final.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-mail/2.0.1.RELEASE/spring-boot-starter-mail-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.0.1.RELEASE/spring-boot-starter-data-jpa-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/8.5.29/tomcat-embed-websocket-8.5.29.jar:/Users/wengjf/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.9.5/jackson-module-parameter-names-2.9.5.jar:/Users/wengjf/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/Users/wengjf/.m2/repository/mysql/mysql-connector-java/5.1.46/mysql-connector-java-5.1.46.jar:/Users/wengjf/.m2/repository/org/springframework/spring-context-support/5.0.5.RELEASE/spring-context-support-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.29/tomcat-embed-el-8.5.29.jar:/Users/wengjf/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/wengjf/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/Users/wengjf/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/wengjf/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar:/Users/wengjf/.m2/repository/com/sun/mail/javax.mail/1.6.1/javax.mail-1.6.1.jar:/Users/wengjf/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-log4j/1.3.8.RELEASE/spring-boot-starter-log4j-1.3.8.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-devtools/2.0.1.RELEASE/spring-boot-devtools-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-aspects/5.0.5.RELEASE/spring-aspects-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.0.1.RELEASE/spring-boot-autoconfigure-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-jdbc/5.0.5.RELEASE/spring-jdbc-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-context/5.0.5.RELEASE/spring-context-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.0.1.RELEASE/spring-boot-starter-web-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/data/spring-data-jpa/2.0.6.RELEASE/spring-data-jpa-2.0.6.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot/2.0.1.RELEASE/spring-boot-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.9.5/jackson-datatype-jdk8-2.9.5.jar:/Users/wengjf/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/wengjf/.m2/repository/org/springframework/spring-jcl/5.0.5.RELEASE/spring-jcl-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.9.Final/hibernate-validator-6.0.9.Final.jar:/Users/wengjf/.m2/repository/org/springframework/spring-aop/5.0.5.RELEASE/spring-aop-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.9.5/jackson-datatype-jsr310-2.9.5.jar:/Users/wengjf/.m2/repository/org/javassist/javassist/3.22.0-GA/javassist-3.22.0-GA.jar:/Users/wengjf/.m2/repository/org/springframework/spring-expression/5.0.5.RELEASE/spring-expression-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/quartz-scheduler/quartz/2.3.0/quartz-2.3.0.jar:/Users/wengjf/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/Users/wengjf/.m2/repository/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/Users/wengjf/.m2/repository/org/yaml/snakeyaml/1.19/snakeyaml-1.19.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.29/tomcat-annotations-api-8.5.29.jar:/Users/wengjf/.m2/repository/com/zaxxer/HikariCP/2.7.8/HikariCP-2.7.8.jar:/Users/wengjf/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.0.1.RELEASE/spring-boot-starter-json-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/aspectj/aspectjweaver/1.8.13/aspectjweaver-1.8.13.jar:/Users/wengjf/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.29/tomcat-embed-core-8.5.29.jar:/Users/wengjf/.m2/repository/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-quartz/2.0.1.RELEASE/spring-boot-starter-quartz-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-orm/5.0.5.RELEASE/spring-orm-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.0.1.RELEASE/spring-boot-starter-tomcat-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/Users/wengjf/.m2/repository/org/springframework/spring-webmvc/5.0.5.RELEASE/spring-webmvc-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-core/5.0.5.RELEASE/spring-core-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-beans/5.0.5.RELEASE/spring-beans-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/Users/wengjf/.m2/repository/org/springframework/spring-web/5.0.5.RELEASE/spring-web-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/javax/transaction/javax.transaction-api/1.2/javax.transaction-api-1.2.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter/2.0.1.RELEASE/spring-boot-starter-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.5/jackson-databind-2.9.5.jar:/Users/wengjf/.m2/repository/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Macau, os.name=Mac OS X, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib, sun.java.command=com.monk.sbbook.SbBookApplication, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@953abea, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=/Users/wengjf, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=1.8.0_171-b11, user.name=wengjf, path.separator=:, os.version=10.13.2, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/, com.zaxxer.hikari.pool_number=1, catalina.home=/private/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/tomcat.8213874419768494105.8080, java.version=1.8.0_171, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/Users/wengjf/Server/SpringMVC/sb-book, os.arch=x86_64, PID=2426, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, catalina.base=/private/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/tomcat.8213874419768494105.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@42b47222, java.library.path=/Users/wengjf/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.171-b11, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=HikariDataSource (HikariPool-1), sun.io.unicode.encoding=UnicodeBig, java.ext.dirs=/Users/wengjf/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, java.class.version=52.0, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16}
[19:22:41] TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[19:22:41] TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[19:22:41] TraversableResolvers - Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
[19:22:41] ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[19:22:41] ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[19:22:41] ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[19:22:41] ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[19:22:41] ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
[19:22:41] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[19:22:41] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[19:22:41] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[19:22:41] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[19:22:41] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[19:22:41] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:22:41] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:22:41] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:22:41] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:22:41] JaccIntegrator - Skipping JACC integration as it was not enabled
[19:22:41] CascadeStyles - External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[19:22:41] SessionFactoryImpl - Instantiated session factory
[19:22:41] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:22:41] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:22:41] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:22:41] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:22:41] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:22:41] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:22:41] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:22:41] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:22:41] AbstractEntityPersister - Static SQL for entity: com.monk.sbbook.entity.LoginTicket
[19:22:41] AbstractEntityPersister -  Version select: select t_userid from login_ticket where t_userid =?
[19:22:41] AbstractEntityPersister -  Snapshot select: select loginticke_.t_userid, loginticke_.t_expired as t_expire2_0_, loginticke_.t_status as t_status3_0_, loginticke_.t_ticket as t_ticket4_0_ from login_ticket loginticke_ where loginticke_.t_userid=?
[19:22:41] AbstractEntityPersister -  Insert 0: insert into login_ticket (t_expired, t_status, t_ticket, t_userid) values (?, ?, ?, ?)
[19:22:41] AbstractEntityPersister -  Update 0: update login_ticket set t_expired=?, t_status=?, t_ticket=? where t_userid=?
[19:22:41] AbstractEntityPersister -  Delete 0: delete from login_ticket where t_userid=?
[19:22:41] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c523b2]
[19:22:41] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:41] MetamodelGraphWalker - Visiting attribute path : status
[19:22:41] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:41] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:41] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:41] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:41] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [NONE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:22:41] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2217300b]
[19:22:41] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:41] MetamodelGraphWalker - Visiting attribute path : status
[19:22:41] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:41] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:41] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:41] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:41] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [READ]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:22:41] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f1b82b2]
[19:22:41] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:41] MetamodelGraphWalker - Visiting attribute path : status
[19:22:41] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:41] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:41] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:41] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:41] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:22:41] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46e3d3dd]
[19:22:41] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:41] MetamodelGraphWalker - Visiting attribute path : status
[19:22:41] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:41] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:41] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:41] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:41] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE_NOWAIT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:22:41] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c0097d7]
[19:22:41] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:41] MetamodelGraphWalker - Visiting attribute path : status
[19:22:41] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:41] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:41] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:41] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:41] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE_SKIPLOCKED]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:22:41] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30563d13]
[19:22:41] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:41] MetamodelGraphWalker - Visiting attribute path : status
[19:22:41] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:41] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:41] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:41] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:41] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [FORCE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:22:41] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bea6356]
[19:22:41] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:41] MetamodelGraphWalker - Visiting attribute path : status
[19:22:41] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:41] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:41] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:41] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:41] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_READ]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? lock in share mode
[19:22:41] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59628cc3]
[19:22:41] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:41] MetamodelGraphWalker - Visiting attribute path : status
[19:22:41] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:41] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:41] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:41] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:41] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_WRITE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:22:41] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25044300]
[19:22:41] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:41] MetamodelGraphWalker - Visiting attribute path : status
[19:22:41] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:41] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:41] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:41] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:41] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_FORCE_INCREMENT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:22:41] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cc71744]
[19:22:41] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:41] MetamodelGraphWalker - Visiting attribute path : status
[19:22:41] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:41] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:41] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:41] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:41] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [OPTIMISTIC]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:22:41] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65375125]
[19:22:41] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:41] MetamodelGraphWalker - Visiting attribute path : status
[19:22:41] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:41] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:41] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:41] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:41] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [OPTIMISTIC_FORCE_INCREMENT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:22:41] Loader - Static select for action ACTION_MERGE on entity com.monk.sbbook.entity.LoginTicket: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:22:41] Loader - Static select for action ACTION_REFRESH on entity com.monk.sbbook.entity.LoginTicket: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:22:41] AbstractEntityPersister - Static SQL for entity: com.monk.sbbook.entity.User
[19:22:41] AbstractEntityPersister -  Version select: select t_id from user where t_id =?
[19:22:41] AbstractEntityPersister -  Snapshot select: select user_.t_id, user_.t_email as t_email2_1_, user_.t_head_url as t_head_u3_1_, user_.t_mobile as t_mobile4_1_, user_.t_password as t_passwo5_1_, user_.t_role as t_role6_1_, user_.t_salt as t_salt7_1_, user_.t_username as t_userna8_1_ from user user_ where user_.t_id=?
[19:22:41] AbstractEntityPersister -  Insert 0: insert into user (t_email, t_head_url, t_mobile, t_password, t_role, t_salt, t_username, t_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[19:22:41] AbstractEntityPersister -  Update 0: update user set t_email=?, t_head_url=?, t_mobile=?, t_password=?, t_role=?, t_salt=?, t_username=? where t_id=?
[19:22:41] AbstractEntityPersister -  Delete 0: delete from user where t_id=?
[19:22:41] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fcec610]
[19:22:41] MetamodelGraphWalker - Visiting attribute path : email
[19:22:41] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:22:41] MetamodelGraphWalker - Visiting attribute path : mobile
[19:22:41] MetamodelGraphWalker - Visiting attribute path : password
[19:22:41] MetamodelGraphWalker - Visiting attribute path : role
[19:22:41] MetamodelGraphWalker - Visiting attribute path : salt
[19:22:41] MetamodelGraphWalker - Visiting attribute path : username
[19:22:41] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:41] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:41] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:22:41] EntityLoader - Static select for entity com.monk.sbbook.entity.User [NONE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:22:41] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c345da0]
[19:22:41] MetamodelGraphWalker - Visiting attribute path : email
[19:22:41] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:22:41] MetamodelGraphWalker - Visiting attribute path : mobile
[19:22:41] MetamodelGraphWalker - Visiting attribute path : password
[19:22:41] MetamodelGraphWalker - Visiting attribute path : role
[19:22:41] MetamodelGraphWalker - Visiting attribute path : salt
[19:22:41] MetamodelGraphWalker - Visiting attribute path : username
[19:22:41] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:41] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:41] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:22:41] EntityLoader - Static select for entity com.monk.sbbook.entity.User [READ]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:22:41] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@87d1acd]
[19:22:41] MetamodelGraphWalker - Visiting attribute path : email
[19:22:41] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:22:41] MetamodelGraphWalker - Visiting attribute path : mobile
[19:22:41] MetamodelGraphWalker - Visiting attribute path : password
[19:22:41] MetamodelGraphWalker - Visiting attribute path : role
[19:22:41] MetamodelGraphWalker - Visiting attribute path : salt
[19:22:41] MetamodelGraphWalker - Visiting attribute path : username
[19:22:41] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:41] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:41] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:22:41] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:22:41] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@580d2bd3]
[19:22:41] MetamodelGraphWalker - Visiting attribute path : email
[19:22:41] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:22:41] MetamodelGraphWalker - Visiting attribute path : mobile
[19:22:41] MetamodelGraphWalker - Visiting attribute path : password
[19:22:41] MetamodelGraphWalker - Visiting attribute path : role
[19:22:41] MetamodelGraphWalker - Visiting attribute path : salt
[19:22:41] MetamodelGraphWalker - Visiting attribute path : username
[19:22:41] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:41] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:41] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:22:41] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE_NOWAIT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:22:41] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c3db58b]
[19:22:41] MetamodelGraphWalker - Visiting attribute path : email
[19:22:41] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:22:41] MetamodelGraphWalker - Visiting attribute path : mobile
[19:22:41] MetamodelGraphWalker - Visiting attribute path : password
[19:22:41] MetamodelGraphWalker - Visiting attribute path : role
[19:22:41] MetamodelGraphWalker - Visiting attribute path : salt
[19:22:41] MetamodelGraphWalker - Visiting attribute path : username
[19:22:41] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:41] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:41] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:22:41] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE_SKIPLOCKED]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:22:41] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@513d9699]
[19:22:41] MetamodelGraphWalker - Visiting attribute path : email
[19:22:41] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:22:41] MetamodelGraphWalker - Visiting attribute path : mobile
[19:22:41] MetamodelGraphWalker - Visiting attribute path : password
[19:22:41] MetamodelGraphWalker - Visiting attribute path : role
[19:22:41] MetamodelGraphWalker - Visiting attribute path : salt
[19:22:41] MetamodelGraphWalker - Visiting attribute path : username
[19:22:41] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:41] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:41] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:22:41] EntityLoader - Static select for entity com.monk.sbbook.entity.User [FORCE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:22:41] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54d4d14f]
[19:22:41] MetamodelGraphWalker - Visiting attribute path : email
[19:22:41] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:22:41] MetamodelGraphWalker - Visiting attribute path : mobile
[19:22:41] MetamodelGraphWalker - Visiting attribute path : password
[19:22:41] MetamodelGraphWalker - Visiting attribute path : role
[19:22:41] MetamodelGraphWalker - Visiting attribute path : salt
[19:22:41] MetamodelGraphWalker - Visiting attribute path : username
[19:22:41] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:41] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:41] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:22:41] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_READ]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? lock in share mode
[19:22:41] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b0122ca]
[19:22:41] MetamodelGraphWalker - Visiting attribute path : email
[19:22:41] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:22:41] MetamodelGraphWalker - Visiting attribute path : mobile
[19:22:41] MetamodelGraphWalker - Visiting attribute path : password
[19:22:41] MetamodelGraphWalker - Visiting attribute path : role
[19:22:41] MetamodelGraphWalker - Visiting attribute path : salt
[19:22:41] MetamodelGraphWalker - Visiting attribute path : username
[19:22:41] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:41] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:41] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:22:41] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_WRITE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:22:41] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b9ef36]
[19:22:41] MetamodelGraphWalker - Visiting attribute path : email
[19:22:41] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:22:41] MetamodelGraphWalker - Visiting attribute path : mobile
[19:22:41] MetamodelGraphWalker - Visiting attribute path : password
[19:22:41] MetamodelGraphWalker - Visiting attribute path : role
[19:22:41] MetamodelGraphWalker - Visiting attribute path : salt
[19:22:41] MetamodelGraphWalker - Visiting attribute path : username
[19:22:41] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:41] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:41] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:22:41] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:22:41] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dee69d6]
[19:22:41] MetamodelGraphWalker - Visiting attribute path : email
[19:22:41] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:22:41] MetamodelGraphWalker - Visiting attribute path : mobile
[19:22:41] MetamodelGraphWalker - Visiting attribute path : password
[19:22:41] MetamodelGraphWalker - Visiting attribute path : role
[19:22:41] MetamodelGraphWalker - Visiting attribute path : salt
[19:22:41] MetamodelGraphWalker - Visiting attribute path : username
[19:22:41] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:41] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:41] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:22:41] EntityLoader - Static select for entity com.monk.sbbook.entity.User [OPTIMISTIC]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:22:41] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@81ccce4]
[19:22:41] MetamodelGraphWalker - Visiting attribute path : email
[19:22:41] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:22:41] MetamodelGraphWalker - Visiting attribute path : mobile
[19:22:41] MetamodelGraphWalker - Visiting attribute path : password
[19:22:41] MetamodelGraphWalker - Visiting attribute path : role
[19:22:41] MetamodelGraphWalker - Visiting attribute path : salt
[19:22:41] MetamodelGraphWalker - Visiting attribute path : username
[19:22:41] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:41] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:41] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:22:41] EntityLoader - Static select for entity com.monk.sbbook.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:22:41] Loader - Static select for action ACTION_MERGE on entity com.monk.sbbook.entity.User: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:22:41] Loader - Static select for action ACTION_REFRESH on entity com.monk.sbbook.entity.User: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:22:41] Table - No alter strings for table : hibernate_sequence
[19:22:41] Table - No alter strings for table : login_ticket
[19:22:41] Table - No alter strings for table : user
[19:22:41] NamedQueryRepository - Checking 0 named HQL queries
[19:22:41] NamedQueryRepository - Checking 0 named SQL queries
[19:22:41] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1a211b8e
[19:22:41] SessionFactoryRegistry - Registering SessionFactory: 9d581ebe-87d1-41cf-9067-b737142ac680 (<unnamed>)
[19:22:41] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[19:22:41] StatisticsInitiator - Statistics initialized [enabled=false]
[19:22:41] QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@6fa59b2e
[19:22:41] QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
[19:22:41] QueryTranslatorImpl - parse() - HQL: update com.monk.sbbook.entity.LoginTicket u set u.status=?1 where u.ticket=?2
[19:22:41] ErrorCounter - throwQueryException() : no errors
[19:22:41] QueryTranslatorImpl - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  \-[IDENT] Node: 'monk'
    |     |  |  |  \-[IDENT] Node: 'sbbook'
    |     |  |  \-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'LoginTicket'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'status'
    |     \-[PARAM] Node: '?'
    |        \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'ticket'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '2'

[19:22:42] HqlSqlBaseWalker - update << begin [level=1, statement=update]
[19:22:42] FromElement - FromClause{level=1} : com.monk.sbbook.entity.LoginTicket (u) -> loginticke0_
[19:22:42] FromReferenceNode - Resolved : u -> t_userid
[19:22:42] DotNode - getDataType() : status -> org.hibernate.type.IntegerType@78868ebd
[19:22:42] FromReferenceNode - Resolved : u.status -> t_status
[19:22:42] FromReferenceNode - Resolved : u -> t_userid
[19:22:42] DotNode - getDataType() : ticket -> org.hibernate.type.StringType@5f413347
[19:22:42] FromReferenceNode - Resolved : u.ticket -> t_ticket
[19:22:42] HqlSqlBaseWalker - update : finishing up [level=1, statement=update]
[19:22:42] HqlSqlBaseWalker - update >> end [level=1, statement=update]
[19:22:42] QueryTranslatorImpl - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (login_ticket)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[loginticke0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'login_ticket' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=login_ticket,tableAlias=loginticke0_,origin=null,columns={,className=com.monk.sbbook.entity.LoginTicket}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 't_status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=u.status,tableAlias=loginticke0_,className=com.monk.sbbook.entity.LoginTicket,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 't_userid' {alias=u, className=com.monk.sbbook.entity.LoginTicket, tableAlias=loginticke0_}
    |     |  \-[IDENT] IdentNode: 'status' {originalText=status}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@78868ebd}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 't_ticket' {propertyName=ticket,dereferenceType=PRIMITIVE,getPropertyPath=ticket,path=u.ticket,tableAlias=loginticke0_,className=com.monk.sbbook.entity.LoginTicket,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 't_userid' {alias=u, className=com.monk.sbbook.entity.LoginTicket, tableAlias=loginticke0_}
          |  \-[IDENT] IdentNode: 'ticket' {originalText=ticket}
          \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@5f413347}

[19:22:42] ErrorCounter - throwQueryException() : no errors
[19:22:42] ErrorCounter - throwQueryException() : no errors
[19:22:42] QueryTranslatorImpl - parse() - HQL: update com.monk.sbbook.entity.User u set u.username= ?1 where u.id= ?2
[19:22:42] ErrorCounter - throwQueryException() : no errors
[19:22:42] QueryTranslatorImpl - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  \-[IDENT] Node: 'monk'
    |     |  |  |  \-[IDENT] Node: 'sbbook'
    |     |  |  \-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'username'
    |     \-[PARAM] Node: '?'
    |        \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '2'

[19:22:42] HqlSqlBaseWalker - update << begin [level=1, statement=update]
[19:22:42] FromElement - FromClause{level=1} : com.monk.sbbook.entity.User (u) -> user0_
[19:22:42] FromReferenceNode - Resolved : u -> t_id
[19:22:42] DotNode - getDataType() : username -> org.hibernate.type.StringType@5f413347
[19:22:42] FromReferenceNode - Resolved : u.username -> t_username
[19:22:42] FromReferenceNode - Resolved : u -> t_id
[19:22:42] DotNode - getDataType() : id -> org.hibernate.type.LongType@7089bc5d
[19:22:42] FromReferenceNode - Resolved : u.id -> t_id
[19:22:42] HqlSqlBaseWalker - update : finishing up [level=1, statement=update]
[19:22:42] HqlSqlBaseWalker - update >> end [level=1, statement=update]
[19:22:42] QueryTranslatorImpl - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.monk.sbbook.entity.User}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 't_username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=com.monk.sbbook.entity.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 't_id' {alias=u, className=com.monk.sbbook.entity.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'username' {originalText=username}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@5f413347}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 't_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=com.monk.sbbook.entity.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 't_id' {alias=u, className=com.monk.sbbook.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.LongType@7089bc5d}

[19:22:42] ErrorCounter - throwQueryException() : no errors
[19:22:42] ErrorCounter - throwQueryException() : no errors
[19:22:42] SessionFactoryImpl - HHH000031: Closing
[19:22:42] CascadeStyles - External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
[19:22:42] AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[19:22:42] BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[19:22:42] HikariDataSource - HikariPool-1 - Shutdown initiated...
[19:22:42] HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[19:22:42] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@605b3cf4: (connection evicted)
[19:22:42] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@130d6df: (connection evicted)
[19:22:42] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@723d6fa8: (connection evicted)
[19:22:42] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@693966a4: (connection evicted)
[19:22:42] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@3193cc02: (connection evicted)
[19:22:42] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@3e151726: (connection evicted)
[19:22:42] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@15f00889: (connection evicted)
[19:22:42] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@740dd7b5: (connection evicted)
[19:22:42] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@7b02d412: (connection evicted)
[19:22:42] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@ccef2fc: (connection evicted)
[19:22:42] HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[19:22:42] HikariDataSource - HikariPool-1 - Shutdown completed.
[19:22:57] logging - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[19:22:57] Version - HV000001: Hibernate Validator 6.0.9.Final
[19:22:57] TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[19:22:57] TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[19:22:57] TraversableResolvers - Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
[19:22:57] ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[19:22:57] ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[19:22:57] ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[19:22:57] ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[19:22:57] SbBookApplication - Starting SbBookApplication on wjfdeiMac.local with PID 2428 (/Users/wengjf/Server/SpringMVC/sb-book/target/classes started by wengjf in /Users/wengjf/Server/SpringMVC/sb-book)
[19:22:57] SbBookApplication - Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
[19:22:57] SbBookApplication - No active profile set, falling back to default profiles: default
[19:22:57] ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
[19:22:57] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[19:22:57] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[19:22:57] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[19:22:57] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[19:22:57] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[19:22:59] HikariConfig - Driver class com.mysql.jdbc.Driver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@37b63ced
[19:22:59] HikariConfig - HikariPool-1 - configuration:
[19:22:59] HikariConfig - allowPoolSuspension.............false
[19:22:59] HikariConfig - autoCommit......................true
[19:22:59] HikariConfig - catalog.........................none
[19:22:59] HikariConfig - connectionInitSql...............none
[19:22:59] HikariConfig - connectionTestQuery.............none
[19:22:59] HikariConfig - connectionTimeout...............30000
[19:22:59] HikariConfig - dataSource......................none
[19:22:59] HikariConfig - dataSourceClassName.............none
[19:22:59] HikariConfig - dataSourceJNDI..................none
[19:22:59] HikariConfig - dataSourceProperties............{password=<masked>}
[19:22:59] HikariConfig - driverClassName................."com.mysql.jdbc.Driver"
[19:22:59] HikariConfig - healthCheckProperties...........{}
[19:22:59] HikariConfig - healthCheckRegistry.............none
[19:22:59] HikariConfig - idleTimeout.....................600000
[19:22:59] HikariConfig - initializationFailFast..........true
[19:22:59] HikariConfig - initializationFailTimeout.......1
[19:22:59] HikariConfig - isolateInternalQueries..........false
[19:22:59] HikariConfig - jdbc4ConnectionTest.............false
[19:22:59] HikariConfig - jdbcUrl.........................jdbc:mysql://localhost:3306/sbBook
[19:22:59] HikariConfig - leakDetectionThreshold..........0
[19:22:59] HikariConfig - maxLifetime.....................1800000
[19:22:59] HikariConfig - maximumPoolSize.................10
[19:22:59] HikariConfig - metricRegistry..................none
[19:22:59] HikariConfig - metricsTrackerFactory...........none
[19:22:59] HikariConfig - minimumIdle.....................10
[19:22:59] HikariConfig - password........................<masked>
[19:22:59] HikariConfig - poolName........................"HikariPool-1"
[19:22:59] HikariConfig - readOnly........................false
[19:22:59] HikariConfig - registerMbeans..................false
[19:22:59] HikariConfig - scheduledExecutor...............none
[19:22:59] HikariConfig - scheduledExecutorService........internal
[19:22:59] HikariConfig - schema..........................none
[19:22:59] HikariConfig - threadFactory...................internal
[19:22:59] HikariConfig - transactionIsolation............default
[19:22:59] HikariConfig - username........................"root"
[19:22:59] HikariConfig - validationTimeout...............5000
[19:22:59] HikariDataSource - HikariPool-1 - Starting...
[19:22:59] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@7a2a9ef5
[19:22:59] HikariDataSource - HikariPool-1 - Start completed.
[19:22:59] LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@37b63ced
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/wengjf/Server/SpringMVC/sb-book/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.monk.sbbook.entity.LoginTicket
		com.monk.sbbook.entity.User]
	Mapping files names []
	Properties []
[19:22:59] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[19:22:59] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[19:22:59] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[19:22:59] IntegratorServiceImpl - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[19:22:59] Version - HHH000412: Hibernate Core {5.2.16.Final}
[19:22:59] Environment - HHH000206: hibernate.properties not found
[19:22:59] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[19:22:59] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[19:22:59] Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[19:22:59] HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
[19:22:59] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@46ae13ab
[19:22:59] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@4e03b96
[19:22:59] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@1fe4f51c
[19:22:59] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6add6a9f
[19:22:59] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@6add6a9f
[19:22:59] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6add6a9f
[19:22:59] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@13b67770
[19:22:59] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6fa21065
[19:22:59] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@8cd4710
[19:22:59] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@224351e
[19:22:59] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@224351e
[19:22:59] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@224351e
[19:22:59] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6136ac70
[19:22:59] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6136ac70
[19:22:59] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6136ac70
[19:22:59] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5631106b
[19:22:59] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5631106b
[19:22:59] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5631106b
[19:22:59] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3c95a19f
[19:22:59] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3c95a19f
[19:22:59] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3c95a19f
[19:22:59] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@5de85af0
[19:22:59] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@446d3684
[19:22:59] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@446d3684
[19:22:59] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@446d3684
[19:22:59] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@22dc0a29
[19:22:59] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@22dc0a29
[19:22:59] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@22dc0a29
[19:22:59] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@429ef03a
[19:22:59] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@429ef03a
[19:22:59] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@429ef03a
[19:22:59] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7252fac
[19:22:59] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7252fac
[19:22:59] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2d7474de
[19:22:59] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2d7474de
[19:22:59] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@272b3527
[19:22:59] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@272b3527
[19:22:59] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@39074e5e
[19:22:59] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@181da027
[19:22:59] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3fbbc74b
[19:22:59] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3fbbc74b
[19:22:59] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@38a03c68
[19:22:59] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5527b951
[19:22:59] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5527b951
[19:22:59] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3dd2537e
[19:22:59] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3dd2537e
[19:22:59] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2b637657
[19:22:59] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2b637657
[19:22:59] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3a724aca
[19:22:59] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3a724aca
[19:22:59] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@880acda
[19:22:59] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@880acda
[19:22:59] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4c17d68b
[19:22:59] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4c17d68b
[19:22:59] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@763b0f06
[19:22:59] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@763b0f06
[19:22:59] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@5e2bf39b
[19:22:59] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1eebc599
[19:22:59] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1eebc599
[19:22:59] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3b1dc50b
[19:22:59] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3b1dc50b
[19:22:59] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@237eb855
[19:22:59] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@237eb855
[19:22:59] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@24cc582b
[19:22:59] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@24cc582b
[19:22:59] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@24cc582b
[19:22:59] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3c6df224
[19:22:59] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@70f7649e
[19:22:59] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@70f7649e
[19:22:59] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@70f7649e
[19:22:59] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1ab13b87
[19:22:59] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@55cce24b
[19:22:59] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@55cce24b
[19:22:59] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4d61730b
[19:22:59] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@3c940027
[19:22:59] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4d61730b
[19:22:59] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@631e5035
[19:22:59] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@631e5035
[19:22:59] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@20d602b9
[19:22:59] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@20d602b9
[19:22:59] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@49522091
[19:22:59] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@49522091
[19:22:59] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@61859a43
[19:22:59] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@76de6025
[19:22:59] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@76de6025
[19:22:59] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@76de6025
[19:22:59] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4efbf242
[19:22:59] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4efbf242
[19:22:59] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4efbf242
[19:22:59] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@15b1a970
[19:22:59] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3b1a0eb3
[19:22:59] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@6e988168
[19:22:59] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@6e988168
[19:22:59] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@6e988168
[19:22:59] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@21008618
[19:22:59] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@21008618
[19:22:59] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@21008618
[19:22:59] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@183710a
[19:22:59] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@d9a121f
[19:22:59] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@59e35f0a
[19:22:59] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2fb2341
[19:22:59] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2fb2341
[19:22:59] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@36dda42a
[19:22:59] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@e7eb2e
[19:22:59] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@e7eb2e
[19:22:59] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7a2ad2f0
[19:22:59] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7a2ad2f0
[19:22:59] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@696d71f
[19:22:59] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4aedacd1
[19:22:59] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@69d89bb3
[19:22:59] HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[19:22:59] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@763c4cdf
[19:22:59] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@773be33b
[19:22:59] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@773be33b
[19:22:59] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@34621341
[19:22:59] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1ce80ccd
[19:22:59] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@499e4bdd
[19:22:59] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7a895a0f
[19:22:59] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5e55a604
[19:22:59] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2075767
[19:22:59] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39fc3459
[19:22:59] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@915484b
[19:22:59] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.22
      major : 5
      minor : 7
[19:22:59] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e )
      major : 5
      minor : 1
[19:22:59] JdbcEnvironmentInitiator - JDBC version : 4.0
[19:22:59] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[19:22:59] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[19:22:59] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[19:22:59] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[19:22:59] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[19:22:59] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[19:22:59] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[19:22:59] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[19:22:59] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[19:22:59] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[19:22:59] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[19:22:59] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[19:22:59] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[19:22:59] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[19:22:59] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[19:22:59] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[19:22:59] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[19:22:59] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[19:22:59] AnnotationBinder - Binding entity from annotated class: com.monk.sbbook.entity.LoginTicket
[19:22:59] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[19:22:59] EntityBinder - Import with entity name LoginTicket
[19:22:59] EntityBinder - Bind entity com.monk.sbbook.entity.LoginTicket on table login_ticket
[19:22:59] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_userid, insertable=true, updatable=true, unique=false}
[19:22:59] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[19:22:59] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:userId]
[19:22:59] SimpleValueBinder - building SimpleValue for userId
[19:22:59] PropertyBinder - Building property userId
[19:22:59] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_expired, insertable=true, updatable=true, unique=false}
[19:22:59] PropertyBinder - MetadataSourceProcessor property expired with lazy=false
[19:22:59] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:expired]
[19:22:59] SimpleValueBinder - building SimpleValue for expired
[19:22:59] PropertyBinder - Building property expired
[19:22:59] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_status, insertable=true, updatable=true, unique=false}
[19:22:59] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[19:22:59] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:status]
[19:22:59] SimpleValueBinder - building SimpleValue for status
[19:22:59] PropertyBinder - Building property status
[19:22:59] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_ticket, insertable=true, updatable=true, unique=false}
[19:22:59] PropertyBinder - MetadataSourceProcessor property ticket with lazy=false
[19:22:59] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:ticket]
[19:22:59] SimpleValueBinder - building SimpleValue for ticket
[19:22:59] PropertyBinder - Building property ticket
[19:22:59] AnnotationBinder - Binding entity from annotated class: com.monk.sbbook.entity.User
[19:22:59] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[19:22:59] EntityBinder - Import with entity name User
[19:22:59] EntityBinder - Bind entity com.monk.sbbook.entity.User on table user
[19:22:59] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_id, insertable=true, updatable=true, unique=false}
[19:22:59] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[19:22:59] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:id]
[19:22:59] SimpleValueBinder - building SimpleValue for id
[19:22:59] PropertyBinder - Building property id
[19:22:59] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_email, insertable=true, updatable=true, unique=false}
[19:22:59] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[19:22:59] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:email]
[19:22:59] SimpleValueBinder - building SimpleValue for email
[19:22:59] PropertyBinder - Building property email
[19:22:59] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_head_url, insertable=true, updatable=true, unique=false}
[19:22:59] PropertyBinder - MetadataSourceProcessor property headUrl with lazy=false
[19:22:59] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:headUrl]
[19:22:59] SimpleValueBinder - building SimpleValue for headUrl
[19:22:59] PropertyBinder - Building property headUrl
[19:22:59] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_mobile, insertable=true, updatable=true, unique=false}
[19:22:59] PropertyBinder - MetadataSourceProcessor property mobile with lazy=false
[19:22:59] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:mobile]
[19:22:59] SimpleValueBinder - building SimpleValue for mobile
[19:22:59] PropertyBinder - Building property mobile
[19:22:59] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_password, insertable=true, updatable=true, unique=false}
[19:22:59] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[19:22:59] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:password]
[19:22:59] SimpleValueBinder - building SimpleValue for password
[19:22:59] PropertyBinder - Building property password
[19:22:59] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_role, insertable=true, updatable=true, unique=false}
[19:22:59] PropertyBinder - MetadataSourceProcessor property role with lazy=false
[19:22:59] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:role]
[19:22:59] SimpleValueBinder - building SimpleValue for role
[19:22:59] PropertyBinder - Building property role
[19:22:59] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_salt, insertable=true, updatable=true, unique=false}
[19:22:59] PropertyBinder - MetadataSourceProcessor property salt with lazy=false
[19:22:59] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:salt]
[19:22:59] SimpleValueBinder - building SimpleValue for salt
[19:22:59] PropertyBinder - Building property salt
[19:22:59] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_username, insertable=true, updatable=true, unique=true}
[19:22:59] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[19:22:59] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:username]
[19:22:59] SimpleValueBinder - building SimpleValue for username
[19:22:59] PropertyBinder - Building property username
[19:22:59] SimpleValueBinder - Starting fillSimpleValue for userId
[19:22:59] SimpleValueBinder - Starting fillSimpleValue for expired
[19:22:59] SimpleValueBinder - Starting fillSimpleValue for status
[19:22:59] SimpleValueBinder - Starting fillSimpleValue for ticket
[19:22:59] SimpleValueBinder - Starting fillSimpleValue for id
[19:22:59] SimpleValueBinder - Starting fillSimpleValue for email
[19:22:59] SimpleValueBinder - Starting fillSimpleValue for headUrl
[19:22:59] SimpleValueBinder - Starting fillSimpleValue for mobile
[19:22:59] SimpleValueBinder - Starting fillSimpleValue for password
[19:22:59] SimpleValueBinder - Starting fillSimpleValue for role
[19:22:59] SimpleValueBinder - Starting fillSimpleValue for salt
[19:22:59] SimpleValueBinder - Starting fillSimpleValue for username
[19:22:59] PrimaryKey - Forcing column [t_userid] to be non-null as it is part of the primary key for table [login_ticket]
[19:22:59] PrimaryKey - Forcing column [t_id] to be non-null as it is part of the primary key for table [user]
[19:22:59] SessionFactoryImpl - Building session factory
[19:22:59] Settings - SessionFactory name : null
[19:22:59] Settings - Automatic flush during beforeCompletion(): enabled
[19:22:59] Settings - Automatic session close at end of transaction: disabled
[19:22:59] Settings - Statistics: disabled
[19:22:59] Settings - Deleted entity synthetic identifier rollback: disabled
[19:22:59] Settings - Default entity-mode: pojo
[19:22:59] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[19:22:59] Settings - Allow initialization of lazy state outside session : disabled
[19:22:59] Settings - Using BatchFetchStyle : LEGACY
[19:22:59] Settings - Default batch fetch size: -1
[19:22:59] Settings - Maximum outer join fetch depth: 2
[19:22:59] Settings - Default null ordering: NONE
[19:22:59] Settings - Order SQL updates by primary key: disabled
[19:22:59] Settings - Order SQL inserts for batching: disabled
[19:22:59] Settings - multi-tenancy strategy : NONE
[19:22:59] Settings - JTA Track by Thread: enabled
[19:22:59] Settings - Query language substitutions: {}
[19:22:59] Settings - JPA query language strict compliance: disabled
[19:22:59] Settings - Named query checking : enabled
[19:22:59] Settings - Second-level cache: enabled
[19:22:59] Settings - Second-level query cache: disabled
[19:22:59] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@110af3d
[19:22:59] Settings - Second-level cache region prefix: null
[19:22:59] Settings - Optimize second-level cache for minimal puts: disabled
[19:22:59] Settings - Structured second-level cache entries: disabled
[19:22:59] Settings - Second-level cache direct-reference entries: disabled
[19:22:59] Settings - Automatic eviction of collection cache: disabled
[19:22:59] Settings - JDBC batch size: 15
[19:22:59] Settings - JDBC batch updates for versioned data: enabled
[19:22:59] Settings - Scrollable result sets: enabled
[19:22:59] Settings - Wrap result sets: disabled
[19:22:59] Settings - JDBC3 getGeneratedKeys(): enabled
[19:22:59] Settings - JDBC result set fetch size: null
[19:22:59] Settings - Connection release mode: ON_CLOSE
[19:22:59] Settings - Generate SQL with comments: disabled
[19:22:59] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[19:22:59] SessionFactoryImpl - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, com.sun.management.jmxremote.authenticate=false, java.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/tools.jar:/Users/wengjf/Server/SpringMVC/sb-book/target/classes:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.0.1.RELEASE/spring-boot-starter-web-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.0.1.RELEASE/spring-boot-starter-json-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.5/jackson-databind-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.5/jackson-core-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.9.5/jackson-datatype-jdk8-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.9.5/jackson-datatype-jsr310-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.9.5/jackson-module-parameter-names-2.9.5.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.0.1.RELEASE/spring-boot-starter-tomcat-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/8.5.29/tomcat-embed-websocket-8.5.29.jar:/Users/wengjf/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.9.Final/hibernate-validator-6.0.9.Final.jar:/Users/wengjf/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/Users/wengjf/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/wengjf/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/wengjf/.m2/repository/org/springframework/spring-web/5.0.5.RELEASE/spring-web-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-beans/5.0.5.RELEASE/spring-beans-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-webmvc/5.0.5.RELEASE/spring-webmvc-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-aop/5.0.5.RELEASE/spring-aop-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-expression/5.0.5.RELEASE/spring-expression-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/Users/wengjf/.m2/repository/org/springframework/spring-core/5.0.5.RELEASE/spring-core-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-jcl/5.0.5.RELEASE/spring-jcl-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter/2.0.1.RELEASE/spring-boot-starter-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot/2.0.1.RELEASE/spring-boot-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.0.1.RELEASE/spring-boot-autoconfigure-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:/Users/wengjf/.m2/repository/org/yaml/snakeyaml/1.19/snakeyaml-1.19.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-log4j/1.3.8.RELEASE/spring-boot-starter-log4j-1.3.8.RELEASE.jar:/Users/wengjf/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar:/Users/wengjf/.m2/repository/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar:/Users/wengjf/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/Users/wengjf/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-devtools/2.0.1.RELEASE/spring-boot-devtools-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.29/tomcat-embed-jasper-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.29/tomcat-embed-core-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.29/tomcat-annotations-api-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.29/tomcat-embed-el-8.5.29.jar:/Users/wengjf/.m2/repository/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:/Users/wengjf/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/Users/wengjf/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/Users/wengjf/.m2/repository/mysql/mysql-connector-java/5.1.46/mysql-connector-java-5.1.46.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.0.1.RELEASE/spring-boot-starter-data-jpa-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.0.1.RELEASE/spring-boot-starter-aop-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/aspectj/aspectjweaver/1.8.13/aspectjweaver-1.8.13.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.0.1.RELEASE/spring-boot-starter-jdbc-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/com/zaxxer/HikariCP/2.7.8/HikariCP-2.7.8.jar:/Users/wengjf/.m2/repository/org/springframework/spring-jdbc/5.0.5.RELEASE/spring-jdbc-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/hibernate/hibernate-core/5.2.16.Final/hibernate-core-5.2.16.Final.jar:/Users/wengjf/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/wengjf/.m2/repository/org/javassist/javassist/3.22.0-GA/javassist-3.22.0-GA.jar:/Users/wengjf/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/wengjf/.m2/repository/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/Users/wengjf/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/wengjf/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/wengjf/.m2/repository/javax/transaction/javax.transaction-api/1.2/javax.transaction-api-1.2.jar:/Users/wengjf/.m2/repository/org/springframework/data/spring-data-jpa/2.0.6.RELEASE/spring-data-jpa-2.0.6.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/data/spring-data-commons/2.0.6.RELEASE/spring-data-commons-2.0.6.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-orm/5.0.5.RELEASE/spring-orm-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-aspects/5.0.5.RELEASE/spring-aspects-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-mail/2.0.1.RELEASE/spring-boot-starter-mail-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-context/5.0.5.RELEASE/spring-context-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-context-support/5.0.5.RELEASE/spring-context-support-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/com/sun/mail/javax.mail/1.6.1/javax.mail-1.6.1.jar:/Users/wengjf/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-quartz/2.0.1.RELEASE/spring-boot-starter-quartz-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-tx/5.0.5.RELEASE/spring-tx-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/quartz-scheduler/quartz/2.3.0/quartz-2.3.0.jar:/Users/wengjf/.m2/repository/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Macau, os.name=Mac OS X, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib, com.sun.management.jmxremote.ssl=false, spring.application.admin.enabled=true, sun.java.command=com.monk.sbbook.SbBookApplication, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@53850f76, com.sun.management.jmxremote=, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=/Users/wengjf, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre, spring.output.ansi.enabled=always, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=1.8.0_171-b11, user.name=wengjf, path.separator=:, os.version=10.13.2, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/, com.zaxxer.hikari.pool_number=1, catalina.home=/private/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/tomcat.3537937369404916325.8080, com.sun.management.jmxremote.port=64761, java.version=1.8.0_171, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/Users/wengjf/Server/SpringMVC/sb-book, os.arch=x86_64, PID=2428, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, catalina.base=/private/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/tomcat.3537937369404916325.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4b314eec, java.library.path=/Users/wengjf/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.171-b11, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, hibernate.connection.datasource=HikariDataSource (HikariPool-1), sun.io.unicode.encoding=UnicodeBig, java.ext.dirs=/Users/wengjf/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, java.class.version=52.0, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16}
[19:22:59] TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[19:22:59] TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[19:22:59] TraversableResolvers - Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
[19:22:59] ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[19:22:59] ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[19:22:59] ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[19:22:59] ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[19:22:59] ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
[19:22:59] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[19:22:59] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[19:22:59] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[19:22:59] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[19:22:59] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[19:22:59] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:22:59] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:22:59] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:22:59] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:22:59] JaccIntegrator - Skipping JACC integration as it was not enabled
[19:22:59] CascadeStyles - External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[19:22:59] SessionFactoryImpl - Instantiated session factory
[19:22:59] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:22:59] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:22:59] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:22:59] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:22:59] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:22:59] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:22:59] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:22:59] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:22:59] AbstractEntityPersister - Static SQL for entity: com.monk.sbbook.entity.LoginTicket
[19:22:59] AbstractEntityPersister -  Version select: select t_userid from login_ticket where t_userid =?
[19:22:59] AbstractEntityPersister -  Snapshot select: select loginticke_.t_userid, loginticke_.t_expired as t_expire2_0_, loginticke_.t_status as t_status3_0_, loginticke_.t_ticket as t_ticket4_0_ from login_ticket loginticke_ where loginticke_.t_userid=?
[19:22:59] AbstractEntityPersister -  Insert 0: insert into login_ticket (t_expired, t_status, t_ticket, t_userid) values (?, ?, ?, ?)
[19:22:59] AbstractEntityPersister -  Update 0: update login_ticket set t_expired=?, t_status=?, t_ticket=? where t_userid=?
[19:22:59] AbstractEntityPersister -  Delete 0: delete from login_ticket where t_userid=?
[19:22:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52be423d]
[19:22:59] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:59] MetamodelGraphWalker - Visiting attribute path : status
[19:22:59] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:59] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [NONE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:22:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@345e2f16]
[19:22:59] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:59] MetamodelGraphWalker - Visiting attribute path : status
[19:22:59] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:59] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [READ]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:22:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71d0e78b]
[19:22:59] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:59] MetamodelGraphWalker - Visiting attribute path : status
[19:22:59] MetamodelGraphWalker - Visiting attribute path : ticket
[19:22:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:22:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:22:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:22:59] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:22:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dfa40cb]
[19:22:59] MetamodelGraphWalker - Visiting attribute path : expired
[19:22:59] MetamodelGraphWalker - Visiting attribute path : status
[19:22:59] MetamodelGraphWalker - Visiting attribute path : ticket
[19:23:00] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:23:00] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:23:00] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:23:00] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE_NOWAIT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:23:00] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e1b2502]
[19:23:00] MetamodelGraphWalker - Visiting attribute path : expired
[19:23:00] MetamodelGraphWalker - Visiting attribute path : status
[19:23:00] MetamodelGraphWalker - Visiting attribute path : ticket
[19:23:00] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:23:00] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:23:00] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:23:00] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE_SKIPLOCKED]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:23:00] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2684920f]
[19:23:00] MetamodelGraphWalker - Visiting attribute path : expired
[19:23:00] MetamodelGraphWalker - Visiting attribute path : status
[19:23:00] MetamodelGraphWalker - Visiting attribute path : ticket
[19:23:00] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:23:00] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:23:00] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:23:00] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [FORCE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:23:00] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22bebbe]
[19:23:00] MetamodelGraphWalker - Visiting attribute path : expired
[19:23:00] MetamodelGraphWalker - Visiting attribute path : status
[19:23:00] MetamodelGraphWalker - Visiting attribute path : ticket
[19:23:00] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:23:00] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:23:00] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:23:00] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_READ]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? lock in share mode
[19:23:00] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62b76ceb]
[19:23:00] MetamodelGraphWalker - Visiting attribute path : expired
[19:23:00] MetamodelGraphWalker - Visiting attribute path : status
[19:23:00] MetamodelGraphWalker - Visiting attribute path : ticket
[19:23:00] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:23:00] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:23:00] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:23:00] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_WRITE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:23:00] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65b075bc]
[19:23:00] MetamodelGraphWalker - Visiting attribute path : expired
[19:23:00] MetamodelGraphWalker - Visiting attribute path : status
[19:23:00] MetamodelGraphWalker - Visiting attribute path : ticket
[19:23:00] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:23:00] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:23:00] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:23:00] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_FORCE_INCREMENT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:23:00] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50040320]
[19:23:00] MetamodelGraphWalker - Visiting attribute path : expired
[19:23:00] MetamodelGraphWalker - Visiting attribute path : status
[19:23:00] MetamodelGraphWalker - Visiting attribute path : ticket
[19:23:00] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:23:00] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:23:00] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:23:00] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [OPTIMISTIC]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:23:00] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@567cbbdc]
[19:23:00] MetamodelGraphWalker - Visiting attribute path : expired
[19:23:00] MetamodelGraphWalker - Visiting attribute path : status
[19:23:00] MetamodelGraphWalker - Visiting attribute path : ticket
[19:23:00] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:23:00] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:23:00] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:23:00] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [OPTIMISTIC_FORCE_INCREMENT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:23:00] Loader - Static select for action ACTION_MERGE on entity com.monk.sbbook.entity.LoginTicket: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:23:00] Loader - Static select for action ACTION_REFRESH on entity com.monk.sbbook.entity.LoginTicket: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:23:00] AbstractEntityPersister - Static SQL for entity: com.monk.sbbook.entity.User
[19:23:00] AbstractEntityPersister -  Version select: select t_id from user where t_id =?
[19:23:00] AbstractEntityPersister -  Snapshot select: select user_.t_id, user_.t_email as t_email2_1_, user_.t_head_url as t_head_u3_1_, user_.t_mobile as t_mobile4_1_, user_.t_password as t_passwo5_1_, user_.t_role as t_role6_1_, user_.t_salt as t_salt7_1_, user_.t_username as t_userna8_1_ from user user_ where user_.t_id=?
[19:23:00] AbstractEntityPersister -  Insert 0: insert into user (t_email, t_head_url, t_mobile, t_password, t_role, t_salt, t_username, t_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[19:23:00] AbstractEntityPersister -  Update 0: update user set t_email=?, t_head_url=?, t_mobile=?, t_password=?, t_role=?, t_salt=?, t_username=? where t_id=?
[19:23:00] AbstractEntityPersister -  Delete 0: delete from user where t_id=?
[19:23:00] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d892ad0]
[19:23:00] MetamodelGraphWalker - Visiting attribute path : email
[19:23:00] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:23:00] MetamodelGraphWalker - Visiting attribute path : mobile
[19:23:00] MetamodelGraphWalker - Visiting attribute path : password
[19:23:00] MetamodelGraphWalker - Visiting attribute path : role
[19:23:00] MetamodelGraphWalker - Visiting attribute path : salt
[19:23:00] MetamodelGraphWalker - Visiting attribute path : username
[19:23:00] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:23:00] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:23:00] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:23:00] EntityLoader - Static select for entity com.monk.sbbook.entity.User [NONE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:23:00] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50b1c218]
[19:23:00] MetamodelGraphWalker - Visiting attribute path : email
[19:23:00] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:23:00] MetamodelGraphWalker - Visiting attribute path : mobile
[19:23:00] MetamodelGraphWalker - Visiting attribute path : password
[19:23:00] MetamodelGraphWalker - Visiting attribute path : role
[19:23:00] MetamodelGraphWalker - Visiting attribute path : salt
[19:23:00] MetamodelGraphWalker - Visiting attribute path : username
[19:23:00] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:23:00] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:23:00] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:23:00] EntityLoader - Static select for entity com.monk.sbbook.entity.User [READ]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:23:00] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7346ac56]
[19:23:00] MetamodelGraphWalker - Visiting attribute path : email
[19:23:00] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:23:00] MetamodelGraphWalker - Visiting attribute path : mobile
[19:23:00] MetamodelGraphWalker - Visiting attribute path : password
[19:23:00] MetamodelGraphWalker - Visiting attribute path : role
[19:23:00] MetamodelGraphWalker - Visiting attribute path : salt
[19:23:00] MetamodelGraphWalker - Visiting attribute path : username
[19:23:00] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:23:00] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:23:00] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:23:00] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:23:00] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13a297f1]
[19:23:00] MetamodelGraphWalker - Visiting attribute path : email
[19:23:00] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:23:00] MetamodelGraphWalker - Visiting attribute path : mobile
[19:23:00] MetamodelGraphWalker - Visiting attribute path : password
[19:23:00] MetamodelGraphWalker - Visiting attribute path : role
[19:23:00] MetamodelGraphWalker - Visiting attribute path : salt
[19:23:00] MetamodelGraphWalker - Visiting attribute path : username
[19:23:00] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:23:00] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:23:00] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:23:00] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE_NOWAIT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:23:00] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cba7024]
[19:23:00] MetamodelGraphWalker - Visiting attribute path : email
[19:23:00] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:23:00] MetamodelGraphWalker - Visiting attribute path : mobile
[19:23:00] MetamodelGraphWalker - Visiting attribute path : password
[19:23:00] MetamodelGraphWalker - Visiting attribute path : role
[19:23:00] MetamodelGraphWalker - Visiting attribute path : salt
[19:23:00] MetamodelGraphWalker - Visiting attribute path : username
[19:23:00] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:23:00] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:23:00] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:23:00] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE_SKIPLOCKED]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:23:00] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27ead19f]
[19:23:00] MetamodelGraphWalker - Visiting attribute path : email
[19:23:00] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:23:00] MetamodelGraphWalker - Visiting attribute path : mobile
[19:23:00] MetamodelGraphWalker - Visiting attribute path : password
[19:23:00] MetamodelGraphWalker - Visiting attribute path : role
[19:23:00] MetamodelGraphWalker - Visiting attribute path : salt
[19:23:00] MetamodelGraphWalker - Visiting attribute path : username
[19:23:00] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:23:00] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:23:00] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:23:00] EntityLoader - Static select for entity com.monk.sbbook.entity.User [FORCE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:23:00] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b9acd52]
[19:23:00] MetamodelGraphWalker - Visiting attribute path : email
[19:23:00] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:23:00] MetamodelGraphWalker - Visiting attribute path : mobile
[19:23:00] MetamodelGraphWalker - Visiting attribute path : password
[19:23:00] MetamodelGraphWalker - Visiting attribute path : role
[19:23:00] MetamodelGraphWalker - Visiting attribute path : salt
[19:23:00] MetamodelGraphWalker - Visiting attribute path : username
[19:23:00] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:23:00] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:23:00] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:23:00] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_READ]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? lock in share mode
[19:23:00] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e6b9209]
[19:23:00] MetamodelGraphWalker - Visiting attribute path : email
[19:23:00] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:23:00] MetamodelGraphWalker - Visiting attribute path : mobile
[19:23:00] MetamodelGraphWalker - Visiting attribute path : password
[19:23:00] MetamodelGraphWalker - Visiting attribute path : role
[19:23:00] MetamodelGraphWalker - Visiting attribute path : salt
[19:23:00] MetamodelGraphWalker - Visiting attribute path : username
[19:23:00] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:23:00] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:23:00] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:23:00] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_WRITE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:23:00] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e255ea0]
[19:23:00] MetamodelGraphWalker - Visiting attribute path : email
[19:23:00] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:23:00] MetamodelGraphWalker - Visiting attribute path : mobile
[19:23:00] MetamodelGraphWalker - Visiting attribute path : password
[19:23:00] MetamodelGraphWalker - Visiting attribute path : role
[19:23:00] MetamodelGraphWalker - Visiting attribute path : salt
[19:23:00] MetamodelGraphWalker - Visiting attribute path : username
[19:23:00] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:23:00] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:23:00] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:23:00] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:23:00] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55ab80d5]
[19:23:00] MetamodelGraphWalker - Visiting attribute path : email
[19:23:00] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:23:00] MetamodelGraphWalker - Visiting attribute path : mobile
[19:23:00] MetamodelGraphWalker - Visiting attribute path : password
[19:23:00] MetamodelGraphWalker - Visiting attribute path : role
[19:23:00] MetamodelGraphWalker - Visiting attribute path : salt
[19:23:00] MetamodelGraphWalker - Visiting attribute path : username
[19:23:00] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:23:00] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:23:00] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:23:00] EntityLoader - Static select for entity com.monk.sbbook.entity.User [OPTIMISTIC]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:23:00] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@750dd3e6]
[19:23:00] MetamodelGraphWalker - Visiting attribute path : email
[19:23:00] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:23:00] MetamodelGraphWalker - Visiting attribute path : mobile
[19:23:00] MetamodelGraphWalker - Visiting attribute path : password
[19:23:00] MetamodelGraphWalker - Visiting attribute path : role
[19:23:00] MetamodelGraphWalker - Visiting attribute path : salt
[19:23:00] MetamodelGraphWalker - Visiting attribute path : username
[19:23:00] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:23:00] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:23:00] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:23:00] EntityLoader - Static select for entity com.monk.sbbook.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:23:00] Loader - Static select for action ACTION_MERGE on entity com.monk.sbbook.entity.User: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:23:00] Loader - Static select for action ACTION_REFRESH on entity com.monk.sbbook.entity.User: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:23:00] Table - No alter strings for table : hibernate_sequence
[19:23:00] Table - No alter strings for table : login_ticket
[19:23:00] Table - No alter strings for table : user
[19:23:00] NamedQueryRepository - Checking 0 named HQL queries
[19:23:00] NamedQueryRepository - Checking 0 named SQL queries
[19:23:00] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6f1e6e13
[19:23:00] SessionFactoryRegistry - Registering SessionFactory: 1affa0c4-d9dc-4d82-9f37-e3ae561b2d2a (<unnamed>)
[19:23:00] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[19:23:00] StatisticsInitiator - Statistics initialized [enabled=false]
[19:23:00] QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@32095a4
[19:23:00] QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
[19:23:00] QueryTranslatorImpl - parse() - HQL: update com.monk.sbbook.entity.LoginTicket u set u.status=?1 where u.ticket=?2
[19:23:00] ErrorCounter - throwQueryException() : no errors
[19:23:00] QueryTranslatorImpl - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  \-[IDENT] Node: 'monk'
    |     |  |  |  \-[IDENT] Node: 'sbbook'
    |     |  |  \-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'LoginTicket'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'status'
    |     \-[PARAM] Node: '?'
    |        \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'ticket'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '2'

[19:23:00] HqlSqlBaseWalker - update << begin [level=1, statement=update]
[19:23:00] FromElement - FromClause{level=1} : com.monk.sbbook.entity.LoginTicket (u) -> loginticke0_
[19:23:00] FromReferenceNode - Resolved : u -> t_userid
[19:23:00] DotNode - getDataType() : status -> org.hibernate.type.IntegerType@3c95a19f
[19:23:00] FromReferenceNode - Resolved : u.status -> t_status
[19:23:00] FromReferenceNode - Resolved : u -> t_userid
[19:23:00] DotNode - getDataType() : ticket -> org.hibernate.type.StringType@272b3527
[19:23:00] FromReferenceNode - Resolved : u.ticket -> t_ticket
[19:23:00] HqlSqlBaseWalker - update : finishing up [level=1, statement=update]
[19:23:00] HqlSqlBaseWalker - update >> end [level=1, statement=update]
[19:23:00] QueryTranslatorImpl - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (login_ticket)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[loginticke0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'login_ticket' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=login_ticket,tableAlias=loginticke0_,origin=null,columns={,className=com.monk.sbbook.entity.LoginTicket}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 't_status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=u.status,tableAlias=loginticke0_,className=com.monk.sbbook.entity.LoginTicket,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 't_userid' {alias=u, className=com.monk.sbbook.entity.LoginTicket, tableAlias=loginticke0_}
    |     |  \-[IDENT] IdentNode: 'status' {originalText=status}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@3c95a19f}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 't_ticket' {propertyName=ticket,dereferenceType=PRIMITIVE,getPropertyPath=ticket,path=u.ticket,tableAlias=loginticke0_,className=com.monk.sbbook.entity.LoginTicket,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 't_userid' {alias=u, className=com.monk.sbbook.entity.LoginTicket, tableAlias=loginticke0_}
          |  \-[IDENT] IdentNode: 'ticket' {originalText=ticket}
          \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@272b3527}

[19:23:00] ErrorCounter - throwQueryException() : no errors
[19:23:00] ErrorCounter - throwQueryException() : no errors
[19:23:00] QueryTranslatorImpl - parse() - HQL: update com.monk.sbbook.entity.User u set u.username= ?1 where u.id= ?2
[19:23:00] ErrorCounter - throwQueryException() : no errors
[19:23:00] QueryTranslatorImpl - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  \-[IDENT] Node: 'monk'
    |     |  |  |  \-[IDENT] Node: 'sbbook'
    |     |  |  \-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'username'
    |     \-[PARAM] Node: '?'
    |        \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '2'

[19:23:00] HqlSqlBaseWalker - update << begin [level=1, statement=update]
[19:23:00] FromElement - FromClause{level=1} : com.monk.sbbook.entity.User (u) -> user0_
[19:23:00] FromReferenceNode - Resolved : u -> t_id
[19:23:00] DotNode - getDataType() : username -> org.hibernate.type.StringType@272b3527
[19:23:00] FromReferenceNode - Resolved : u.username -> t_username
[19:23:00] FromReferenceNode - Resolved : u -> t_id
[19:23:00] DotNode - getDataType() : id -> org.hibernate.type.LongType@446d3684
[19:23:00] FromReferenceNode - Resolved : u.id -> t_id
[19:23:00] HqlSqlBaseWalker - update : finishing up [level=1, statement=update]
[19:23:00] HqlSqlBaseWalker - update >> end [level=1, statement=update]
[19:23:00] QueryTranslatorImpl - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.monk.sbbook.entity.User}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 't_username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=com.monk.sbbook.entity.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 't_id' {alias=u, className=com.monk.sbbook.entity.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'username' {originalText=username}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@272b3527}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 't_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=com.monk.sbbook.entity.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 't_id' {alias=u, className=com.monk.sbbook.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.LongType@446d3684}

[19:23:00] ErrorCounter - throwQueryException() : no errors
[19:23:00] ErrorCounter - throwQueryException() : no errors
[19:23:00] SessionFactoryImpl - HHH000031: Closing
[19:23:00] CascadeStyles - External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
[19:23:00] AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[19:23:00] BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[19:23:00] HikariDataSource - HikariPool-1 - Shutdown initiated...
[19:23:00] HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[19:23:00] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@7a2a9ef5: (connection evicted)
[19:23:00] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@46ae13ab: (connection evicted)
[19:23:00] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@4e03b96: (connection evicted)
[19:23:00] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@1fe4f51c: (connection evicted)
[19:23:00] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@5de85af0: (connection evicted)
[19:23:00] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@38a03c68: (connection evicted)
[19:23:00] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@5e2bf39b: (connection evicted)
[19:23:00] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@3c940027: (connection evicted)
[19:23:00] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@d9a121f: (connection evicted)
[19:23:00] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@69d89bb3: (connection evicted)
[19:23:00] HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[19:23:00] HikariDataSource - HikariPool-1 - Shutdown completed.
[19:24:13] logging - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[19:24:13] Version - HV000001: Hibernate Validator 6.0.9.Final
[19:24:13] TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[19:24:13] TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[19:24:13] TraversableResolvers - Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
[19:24:13] ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[19:24:13] ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[19:24:13] ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[19:24:13] ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[19:24:13] SbBookApplication - Starting SbBookApplication on wjfdeiMac.local with PID 2436 (/Users/wengjf/Server/SpringMVC/sb-book/target/classes started by wengjf in /Users/wengjf/Server/SpringMVC/sb-book)
[19:24:13] SbBookApplication - Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
[19:24:13] SbBookApplication - No active profile set, falling back to default profiles: default
[19:24:13] ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
[19:24:13] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[19:24:13] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[19:24:13] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[19:24:13] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[19:24:13] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[19:24:14] HikariConfig - Driver class com.mysql.jdbc.Driver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2ed3b334
[19:24:14] HikariConfig - HikariPool-1 - configuration:
[19:24:14] HikariConfig - allowPoolSuspension.............false
[19:24:14] HikariConfig - autoCommit......................true
[19:24:14] HikariConfig - catalog.........................none
[19:24:14] HikariConfig - connectionInitSql...............none
[19:24:14] HikariConfig - connectionTestQuery.............none
[19:24:14] HikariConfig - connectionTimeout...............30000
[19:24:14] HikariConfig - dataSource......................none
[19:24:14] HikariConfig - dataSourceClassName.............none
[19:24:14] HikariConfig - dataSourceJNDI..................none
[19:24:14] HikariConfig - dataSourceProperties............{password=<masked>}
[19:24:14] HikariConfig - driverClassName................."com.mysql.jdbc.Driver"
[19:24:14] HikariConfig - healthCheckProperties...........{}
[19:24:14] HikariConfig - healthCheckRegistry.............none
[19:24:14] HikariConfig - idleTimeout.....................600000
[19:24:14] HikariConfig - initializationFailFast..........true
[19:24:14] HikariConfig - initializationFailTimeout.......1
[19:24:14] HikariConfig - isolateInternalQueries..........false
[19:24:14] HikariConfig - jdbc4ConnectionTest.............false
[19:24:14] HikariConfig - jdbcUrl.........................jdbc:mysql://localhost:3306/sbBook
[19:24:14] HikariConfig - leakDetectionThreshold..........0
[19:24:14] HikariConfig - maxLifetime.....................1800000
[19:24:14] HikariConfig - maximumPoolSize.................10
[19:24:14] HikariConfig - metricRegistry..................none
[19:24:14] HikariConfig - metricsTrackerFactory...........none
[19:24:14] HikariConfig - minimumIdle.....................10
[19:24:14] HikariConfig - password........................<masked>
[19:24:14] HikariConfig - poolName........................"HikariPool-1"
[19:24:14] HikariConfig - readOnly........................false
[19:24:14] HikariConfig - registerMbeans..................false
[19:24:14] HikariConfig - scheduledExecutor...............none
[19:24:14] HikariConfig - scheduledExecutorService........internal
[19:24:14] HikariConfig - schema..........................none
[19:24:14] HikariConfig - threadFactory...................internal
[19:24:14] HikariConfig - transactionIsolation............default
[19:24:14] HikariConfig - username........................"root"
[19:24:14] HikariConfig - validationTimeout...............5000
[19:24:14] HikariDataSource - HikariPool-1 - Starting...
[19:24:15] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@4643961a
[19:24:15] HikariDataSource - HikariPool-1 - Start completed.
[19:24:15] LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2ed3b334
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/wengjf/Server/SpringMVC/sb-book/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.monk.sbbook.entity.LoginTicket
		com.monk.sbbook.entity.User]
	Mapping files names []
	Properties []
[19:24:15] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[19:24:15] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[19:24:15] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[19:24:15] IntegratorServiceImpl - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[19:24:15] Version - HHH000412: Hibernate Core {5.2.16.Final}
[19:24:15] Environment - HHH000206: hibernate.properties not found
[19:24:15] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[19:24:15] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[19:24:15] Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[19:24:15] HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
[19:24:15] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@550ec756
[19:24:15] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@24167dc
[19:24:15] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@1945aae6
[19:24:15] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@667de1da
[19:24:15] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@2d9d45f2
[19:24:15] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@62e842c8
[19:24:15] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@62e842c8
[19:24:15] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@62e842c8
[19:24:15] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@32992bce
[19:24:15] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@687c6861
[19:24:15] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@10080ad1
[19:24:15] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3e9eef00
[19:24:15] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3e9eef00
[19:24:15] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3e9eef00
[19:24:15] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@28b356dd
[19:24:15] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6b4cdab3
[19:24:15] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6b4cdab3
[19:24:15] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6b4cdab3
[19:24:15] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@201655ae
[19:24:15] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@201655ae
[19:24:15] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@201655ae
[19:24:15] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@3f331bf0
[19:24:15] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@3f331bf0
[19:24:15] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3f331bf0
[19:24:15] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6cdbd01b
[19:24:15] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6cdbd01b
[19:24:15] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6cdbd01b
[19:24:15] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5147f78a
[19:24:15] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5147f78a
[19:24:15] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5147f78a
[19:24:15] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7645c09a
[19:24:15] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7645c09a
[19:24:15] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7645c09a
[19:24:15] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@6f0d6ffb
[19:24:15] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3e7555a4
[19:24:15] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3e7555a4
[19:24:15] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@37dd1ac2
[19:24:15] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@37dd1ac2
[19:24:15] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@74dac16d
[19:24:15] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@74dac16d
[19:24:15] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1ea550e
[19:24:15] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7eeba26
[19:24:15] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3b980db4
[19:24:15] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3b980db4
[19:24:15] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@58459a3f
[19:24:15] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@58459a3f
[19:24:15] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4b06a012
[19:24:15] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4b06a012
[19:24:15] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@14168b51
[19:24:15] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@14168b51
[19:24:15] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@6fa0fa72
[19:24:15] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7a741ff1
[19:24:15] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7a741ff1
[19:24:15] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@192b48f
[19:24:15] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@192b48f
[19:24:15] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@13666de
[19:24:15] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@13666de
[19:24:15] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@cefdb72
[19:24:15] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@cefdb72
[19:24:15] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76d2563a
[19:24:15] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76d2563a
[19:24:15] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@2ffd2a10
[19:24:15] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2ffd2a10
[19:24:15] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@1bbd5259
[19:24:15] HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[19:24:15] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@256017e2
[19:24:15] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@256017e2
[19:24:15] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2f60d7e
[19:24:15] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2f60d7e
[19:24:15] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2f60d7e
[19:24:15] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@63d0de21
[19:24:15] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@57a58b20
[19:24:15] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@57a58b20
[19:24:15] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@57a58b20
[19:24:15] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3afa4713
[19:24:15] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6c32712d
[19:24:15] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6c32712d
[19:24:15] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@20a217f5
[19:24:15] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@20a217f5
[19:24:15] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@777f0fe1
[19:24:15] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@777f0fe1
[19:24:15] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@32977100
[19:24:15] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@32977100
[19:24:15] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6871bb1a
[19:24:15] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6871bb1a
[19:24:15] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@73fccd47
[19:24:15] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6095207
[19:24:15] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6095207
[19:24:15] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6095207
[19:24:15] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@16e4f3db
[19:24:15] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@16e4f3db
[19:24:15] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@16e4f3db
[19:24:15] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@785c23e3
[19:24:15] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@77a52979
[19:24:15] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@52e8f34
[19:24:15] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@52e8f34
[19:24:15] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@52e8f34
[19:24:15] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7abb97d3
[19:24:15] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7abb97d3
[19:24:15] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7abb97d3
[19:24:15] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@13b4d31f
[19:24:15] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@46086f06
[19:24:15] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5b23360c
[19:24:15] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5b23360c
[19:24:15] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@44b6aa46
[19:24:15] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4bcc0f9
[19:24:15] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4bcc0f9
[19:24:15] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@47e10dce
[19:24:15] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@47e10dce
[19:24:15] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1714a4e0
[19:24:15] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6cff1c25
[19:24:15] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7f295664
[19:24:15] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@6fdeb205
[19:24:15] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6fdeb205
[19:24:15] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7337f9fa
[19:24:15] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@69633303
[19:24:15] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@46065807
[19:24:15] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@546cf35
[19:24:15] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@49f21e4e
[19:24:15] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@39f9c758
[19:24:15] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4d4b7600
[19:24:15] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7e4737fb
[19:24:15] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.22
      major : 5
      minor : 7
[19:24:15] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e )
      major : 5
      minor : 1
[19:24:15] JdbcEnvironmentInitiator - JDBC version : 4.0
[19:24:15] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[19:24:15] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[19:24:15] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[19:24:15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[19:24:15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[19:24:15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[19:24:15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[19:24:15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[19:24:15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[19:24:15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[19:24:15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[19:24:15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[19:24:15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[19:24:15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[19:24:15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[19:24:15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[19:24:15] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[19:24:15] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[19:24:15] AnnotationBinder - Binding entity from annotated class: com.monk.sbbook.entity.LoginTicket
[19:24:15] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[19:24:15] EntityBinder - Import with entity name LoginTicket
[19:24:15] EntityBinder - Bind entity com.monk.sbbook.entity.LoginTicket on table login_ticket
[19:24:15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_userid, insertable=true, updatable=true, unique=false}
[19:24:15] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[19:24:15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:userId]
[19:24:15] SimpleValueBinder - building SimpleValue for userId
[19:24:15] PropertyBinder - Building property userId
[19:24:15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_expired, insertable=true, updatable=true, unique=false}
[19:24:15] PropertyBinder - MetadataSourceProcessor property expired with lazy=false
[19:24:15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:expired]
[19:24:15] SimpleValueBinder - building SimpleValue for expired
[19:24:15] PropertyBinder - Building property expired
[19:24:15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_status, insertable=true, updatable=true, unique=false}
[19:24:15] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[19:24:15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:status]
[19:24:15] SimpleValueBinder - building SimpleValue for status
[19:24:15] PropertyBinder - Building property status
[19:24:15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_ticket, insertable=true, updatable=true, unique=false}
[19:24:15] PropertyBinder - MetadataSourceProcessor property ticket with lazy=false
[19:24:15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:ticket]
[19:24:15] SimpleValueBinder - building SimpleValue for ticket
[19:24:15] PropertyBinder - Building property ticket
[19:24:15] AnnotationBinder - Binding entity from annotated class: com.monk.sbbook.entity.User
[19:24:15] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[19:24:15] EntityBinder - Import with entity name User
[19:24:15] EntityBinder - Bind entity com.monk.sbbook.entity.User on table user
[19:24:15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_id, insertable=true, updatable=true, unique=false}
[19:24:15] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[19:24:15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:id]
[19:24:15] SimpleValueBinder - building SimpleValue for id
[19:24:15] PropertyBinder - Building property id
[19:24:15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_email, insertable=true, updatable=true, unique=false}
[19:24:15] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[19:24:15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:email]
[19:24:15] SimpleValueBinder - building SimpleValue for email
[19:24:15] PropertyBinder - Building property email
[19:24:15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_head_url, insertable=true, updatable=true, unique=false}
[19:24:15] PropertyBinder - MetadataSourceProcessor property headUrl with lazy=false
[19:24:15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:headUrl]
[19:24:15] SimpleValueBinder - building SimpleValue for headUrl
[19:24:15] PropertyBinder - Building property headUrl
[19:24:15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_mobile, insertable=true, updatable=true, unique=false}
[19:24:15] PropertyBinder - MetadataSourceProcessor property mobile with lazy=false
[19:24:15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:mobile]
[19:24:15] SimpleValueBinder - building SimpleValue for mobile
[19:24:15] PropertyBinder - Building property mobile
[19:24:15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_password, insertable=true, updatable=true, unique=false}
[19:24:15] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[19:24:15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:password]
[19:24:15] SimpleValueBinder - building SimpleValue for password
[19:24:15] PropertyBinder - Building property password
[19:24:15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_role, insertable=true, updatable=true, unique=false}
[19:24:15] PropertyBinder - MetadataSourceProcessor property role with lazy=false
[19:24:15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:role]
[19:24:15] SimpleValueBinder - building SimpleValue for role
[19:24:15] PropertyBinder - Building property role
[19:24:15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_salt, insertable=true, updatable=true, unique=false}
[19:24:15] PropertyBinder - MetadataSourceProcessor property salt with lazy=false
[19:24:15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:salt]
[19:24:15] SimpleValueBinder - building SimpleValue for salt
[19:24:15] PropertyBinder - Building property salt
[19:24:15] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_username, insertable=true, updatable=true, unique=true}
[19:24:15] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[19:24:15] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:username]
[19:24:15] SimpleValueBinder - building SimpleValue for username
[19:24:15] PropertyBinder - Building property username
[19:24:15] SimpleValueBinder - Starting fillSimpleValue for userId
[19:24:15] SimpleValueBinder - Starting fillSimpleValue for expired
[19:24:15] SimpleValueBinder - Starting fillSimpleValue for status
[19:24:15] SimpleValueBinder - Starting fillSimpleValue for ticket
[19:24:15] SimpleValueBinder - Starting fillSimpleValue for id
[19:24:15] SimpleValueBinder - Starting fillSimpleValue for email
[19:24:15] SimpleValueBinder - Starting fillSimpleValue for headUrl
[19:24:15] SimpleValueBinder - Starting fillSimpleValue for mobile
[19:24:15] SimpleValueBinder - Starting fillSimpleValue for password
[19:24:15] SimpleValueBinder - Starting fillSimpleValue for role
[19:24:15] SimpleValueBinder - Starting fillSimpleValue for salt
[19:24:15] SimpleValueBinder - Starting fillSimpleValue for username
[19:24:15] PrimaryKey - Forcing column [t_userid] to be non-null as it is part of the primary key for table [login_ticket]
[19:24:15] PrimaryKey - Forcing column [t_id] to be non-null as it is part of the primary key for table [user]
[19:24:15] SessionFactoryImpl - Building session factory
[19:24:15] Settings - SessionFactory name : null
[19:24:15] Settings - Automatic flush during beforeCompletion(): enabled
[19:24:15] Settings - Automatic session close at end of transaction: disabled
[19:24:15] Settings - Statistics: disabled
[19:24:15] Settings - Deleted entity synthetic identifier rollback: disabled
[19:24:15] Settings - Default entity-mode: pojo
[19:24:15] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[19:24:15] Settings - Allow initialization of lazy state outside session : disabled
[19:24:15] Settings - Using BatchFetchStyle : LEGACY
[19:24:15] Settings - Default batch fetch size: -1
[19:24:15] Settings - Maximum outer join fetch depth: 2
[19:24:15] Settings - Default null ordering: NONE
[19:24:15] Settings - Order SQL updates by primary key: disabled
[19:24:15] Settings - Order SQL inserts for batching: disabled
[19:24:15] Settings - multi-tenancy strategy : NONE
[19:24:15] Settings - JTA Track by Thread: enabled
[19:24:15] Settings - Query language substitutions: {}
[19:24:15] Settings - JPA query language strict compliance: disabled
[19:24:15] Settings - Named query checking : enabled
[19:24:15] Settings - Second-level cache: enabled
[19:24:15] Settings - Second-level query cache: disabled
[19:24:15] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@5571913a
[19:24:15] Settings - Second-level cache region prefix: null
[19:24:15] Settings - Optimize second-level cache for minimal puts: disabled
[19:24:15] Settings - Structured second-level cache entries: disabled
[19:24:15] Settings - Second-level cache direct-reference entries: disabled
[19:24:15] Settings - Automatic eviction of collection cache: disabled
[19:24:15] Settings - JDBC batch size: 15
[19:24:15] Settings - JDBC batch updates for versioned data: enabled
[19:24:15] Settings - Scrollable result sets: enabled
[19:24:15] Settings - Wrap result sets: disabled
[19:24:15] Settings - JDBC3 getGeneratedKeys(): enabled
[19:24:15] Settings - JDBC result set fetch size: null
[19:24:15] Settings - Connection release mode: ON_CLOSE
[19:24:15] Settings - Generate SQL with comments: disabled
[19:24:15] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[19:24:15] SessionFactoryImpl - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, com.sun.management.jmxremote.authenticate=false, java.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/tools.jar:/Users/wengjf/Server/SpringMVC/sb-book/target/classes:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.0.1.RELEASE/spring-boot-starter-web-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.0.1.RELEASE/spring-boot-starter-json-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.5/jackson-databind-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.5/jackson-core-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.9.5/jackson-datatype-jdk8-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.9.5/jackson-datatype-jsr310-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.9.5/jackson-module-parameter-names-2.9.5.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.0.1.RELEASE/spring-boot-starter-tomcat-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/8.5.29/tomcat-embed-websocket-8.5.29.jar:/Users/wengjf/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.9.Final/hibernate-validator-6.0.9.Final.jar:/Users/wengjf/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/Users/wengjf/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/wengjf/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/wengjf/.m2/repository/org/springframework/spring-web/5.0.5.RELEASE/spring-web-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-beans/5.0.5.RELEASE/spring-beans-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-webmvc/5.0.5.RELEASE/spring-webmvc-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-aop/5.0.5.RELEASE/spring-aop-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-expression/5.0.5.RELEASE/spring-expression-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/Users/wengjf/.m2/repository/org/springframework/spring-core/5.0.5.RELEASE/spring-core-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-jcl/5.0.5.RELEASE/spring-jcl-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter/2.0.1.RELEASE/spring-boot-starter-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot/2.0.1.RELEASE/spring-boot-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.0.1.RELEASE/spring-boot-autoconfigure-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:/Users/wengjf/.m2/repository/org/yaml/snakeyaml/1.19/snakeyaml-1.19.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-log4j/1.3.8.RELEASE/spring-boot-starter-log4j-1.3.8.RELEASE.jar:/Users/wengjf/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar:/Users/wengjf/.m2/repository/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar:/Users/wengjf/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/Users/wengjf/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-devtools/2.0.1.RELEASE/spring-boot-devtools-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.29/tomcat-embed-jasper-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.29/tomcat-embed-core-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.29/tomcat-annotations-api-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.29/tomcat-embed-el-8.5.29.jar:/Users/wengjf/.m2/repository/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:/Users/wengjf/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/Users/wengjf/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/Users/wengjf/.m2/repository/mysql/mysql-connector-java/5.1.46/mysql-connector-java-5.1.46.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.0.1.RELEASE/spring-boot-starter-data-jpa-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.0.1.RELEASE/spring-boot-starter-aop-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/aspectj/aspectjweaver/1.8.13/aspectjweaver-1.8.13.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.0.1.RELEASE/spring-boot-starter-jdbc-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/com/zaxxer/HikariCP/2.7.8/HikariCP-2.7.8.jar:/Users/wengjf/.m2/repository/org/springframework/spring-jdbc/5.0.5.RELEASE/spring-jdbc-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/hibernate/hibernate-core/5.2.16.Final/hibernate-core-5.2.16.Final.jar:/Users/wengjf/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/wengjf/.m2/repository/org/javassist/javassist/3.22.0-GA/javassist-3.22.0-GA.jar:/Users/wengjf/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/wengjf/.m2/repository/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/Users/wengjf/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/wengjf/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/wengjf/.m2/repository/javax/transaction/javax.transaction-api/1.2/javax.transaction-api-1.2.jar:/Users/wengjf/.m2/repository/org/springframework/data/spring-data-jpa/2.0.6.RELEASE/spring-data-jpa-2.0.6.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/data/spring-data-commons/2.0.6.RELEASE/spring-data-commons-2.0.6.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-orm/5.0.5.RELEASE/spring-orm-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-aspects/5.0.5.RELEASE/spring-aspects-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-mail/2.0.1.RELEASE/spring-boot-starter-mail-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-context/5.0.5.RELEASE/spring-context-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-context-support/5.0.5.RELEASE/spring-context-support-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/com/sun/mail/javax.mail/1.6.1/javax.mail-1.6.1.jar:/Users/wengjf/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-quartz/2.0.1.RELEASE/spring-boot-starter-quartz-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-tx/5.0.5.RELEASE/spring-tx-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/quartz-scheduler/quartz/2.3.0/quartz-2.3.0.jar:/Users/wengjf/.m2/repository/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Macau, os.name=Mac OS X, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib, com.sun.management.jmxremote.ssl=false, spring.application.admin.enabled=true, sun.java.command=com.monk.sbbook.SbBookApplication, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7faf75d5, com.sun.management.jmxremote=, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=/Users/wengjf, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre, spring.output.ansi.enabled=always, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=1.8.0_171-b11, user.name=wengjf, path.separator=:, os.version=10.13.2, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/, com.zaxxer.hikari.pool_number=1, catalina.home=/private/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/tomcat.986599594461611037.8080, com.sun.management.jmxremote.port=64792, java.version=1.8.0_171, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/Users/wengjf/Server/SpringMVC/sb-book, os.arch=x86_64, PID=2436, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, catalina.base=/private/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/tomcat.986599594461611037.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7aa6ebc3, java.library.path=/Users/wengjf/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.171-b11, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, hibernate.connection.datasource=HikariDataSource (HikariPool-1), sun.io.unicode.encoding=UnicodeBig, java.ext.dirs=/Users/wengjf/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, java.class.version=52.0, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16}
[19:24:15] TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[19:24:15] TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[19:24:15] TraversableResolvers - Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
[19:24:15] ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[19:24:15] ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[19:24:15] ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[19:24:15] ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[19:24:15] ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
[19:24:15] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[19:24:15] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[19:24:15] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[19:24:15] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[19:24:15] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[19:24:15] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:24:15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:24:15] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:24:15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:24:15] JaccIntegrator - Skipping JACC integration as it was not enabled
[19:24:15] CascadeStyles - External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[19:24:15] SessionFactoryImpl - Instantiated session factory
[19:24:15] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:24:15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:24:15] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:24:15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:24:15] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:24:15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:24:15] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:24:15] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:24:15] AbstractEntityPersister - Static SQL for entity: com.monk.sbbook.entity.LoginTicket
[19:24:15] AbstractEntityPersister -  Version select: select t_userid from login_ticket where t_userid =?
[19:24:15] AbstractEntityPersister -  Snapshot select: select loginticke_.t_userid, loginticke_.t_expired as t_expire2_0_, loginticke_.t_status as t_status3_0_, loginticke_.t_ticket as t_ticket4_0_ from login_ticket loginticke_ where loginticke_.t_userid=?
[19:24:15] AbstractEntityPersister -  Insert 0: insert into login_ticket (t_expired, t_status, t_ticket, t_userid) values (?, ?, ?, ?)
[19:24:15] AbstractEntityPersister -  Update 0: update login_ticket set t_expired=?, t_status=?, t_ticket=? where t_userid=?
[19:24:15] AbstractEntityPersister -  Delete 0: delete from login_ticket where t_userid=?
[19:24:15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ce780ef]
[19:24:15] MetamodelGraphWalker - Visiting attribute path : expired
[19:24:15] MetamodelGraphWalker - Visiting attribute path : status
[19:24:15] MetamodelGraphWalker - Visiting attribute path : ticket
[19:24:15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:24:15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:24:15] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:24:15] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [NONE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:24:15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@247e1477]
[19:24:15] MetamodelGraphWalker - Visiting attribute path : expired
[19:24:15] MetamodelGraphWalker - Visiting attribute path : status
[19:24:15] MetamodelGraphWalker - Visiting attribute path : ticket
[19:24:15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:24:15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:24:15] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:24:15] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [READ]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:24:15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ee41530]
[19:24:15] MetamodelGraphWalker - Visiting attribute path : expired
[19:24:15] MetamodelGraphWalker - Visiting attribute path : status
[19:24:15] MetamodelGraphWalker - Visiting attribute path : ticket
[19:24:15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:24:15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:24:15] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:24:15] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:24:15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45b90dfc]
[19:24:15] MetamodelGraphWalker - Visiting attribute path : expired
[19:24:15] MetamodelGraphWalker - Visiting attribute path : status
[19:24:15] MetamodelGraphWalker - Visiting attribute path : ticket
[19:24:15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:24:15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:24:15] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:24:15] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE_NOWAIT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:24:15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66debe89]
[19:24:15] MetamodelGraphWalker - Visiting attribute path : expired
[19:24:15] MetamodelGraphWalker - Visiting attribute path : status
[19:24:15] MetamodelGraphWalker - Visiting attribute path : ticket
[19:24:15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:24:15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:24:15] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:24:15] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE_SKIPLOCKED]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:24:15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7957a1b5]
[19:24:15] MetamodelGraphWalker - Visiting attribute path : expired
[19:24:15] MetamodelGraphWalker - Visiting attribute path : status
[19:24:15] MetamodelGraphWalker - Visiting attribute path : ticket
[19:24:15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:24:15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:24:15] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:24:15] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [FORCE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:24:15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6929ba1e]
[19:24:15] MetamodelGraphWalker - Visiting attribute path : expired
[19:24:15] MetamodelGraphWalker - Visiting attribute path : status
[19:24:15] MetamodelGraphWalker - Visiting attribute path : ticket
[19:24:15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:24:15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:24:15] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:24:15] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_READ]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? lock in share mode
[19:24:15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d0a7abc]
[19:24:15] MetamodelGraphWalker - Visiting attribute path : expired
[19:24:15] MetamodelGraphWalker - Visiting attribute path : status
[19:24:15] MetamodelGraphWalker - Visiting attribute path : ticket
[19:24:15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:24:15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:24:15] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:24:15] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_WRITE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:24:15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f77e9e]
[19:24:15] MetamodelGraphWalker - Visiting attribute path : expired
[19:24:15] MetamodelGraphWalker - Visiting attribute path : status
[19:24:15] MetamodelGraphWalker - Visiting attribute path : ticket
[19:24:15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:24:15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:24:15] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:24:15] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_FORCE_INCREMENT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:24:15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56bb33b3]
[19:24:15] MetamodelGraphWalker - Visiting attribute path : expired
[19:24:15] MetamodelGraphWalker - Visiting attribute path : status
[19:24:15] MetamodelGraphWalker - Visiting attribute path : ticket
[19:24:15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:24:15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:24:15] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:24:15] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [OPTIMISTIC]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:24:15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f710193]
[19:24:15] MetamodelGraphWalker - Visiting attribute path : expired
[19:24:15] MetamodelGraphWalker - Visiting attribute path : status
[19:24:15] MetamodelGraphWalker - Visiting attribute path : ticket
[19:24:15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:24:15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:24:15] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:24:15] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [OPTIMISTIC_FORCE_INCREMENT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:24:15] Loader - Static select for action ACTION_MERGE on entity com.monk.sbbook.entity.LoginTicket: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:24:15] Loader - Static select for action ACTION_REFRESH on entity com.monk.sbbook.entity.LoginTicket: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:24:15] AbstractEntityPersister - Static SQL for entity: com.monk.sbbook.entity.User
[19:24:15] AbstractEntityPersister -  Version select: select t_id from user where t_id =?
[19:24:15] AbstractEntityPersister -  Snapshot select: select user_.t_id, user_.t_email as t_email2_1_, user_.t_head_url as t_head_u3_1_, user_.t_mobile as t_mobile4_1_, user_.t_password as t_passwo5_1_, user_.t_role as t_role6_1_, user_.t_salt as t_salt7_1_, user_.t_username as t_userna8_1_ from user user_ where user_.t_id=?
[19:24:15] AbstractEntityPersister -  Insert 0: insert into user (t_email, t_head_url, t_mobile, t_password, t_role, t_salt, t_username, t_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[19:24:15] AbstractEntityPersister -  Update 0: update user set t_email=?, t_head_url=?, t_mobile=?, t_password=?, t_role=?, t_salt=?, t_username=? where t_id=?
[19:24:15] AbstractEntityPersister -  Delete 0: delete from user where t_id=?
[19:24:15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63d83b0c]
[19:24:15] MetamodelGraphWalker - Visiting attribute path : email
[19:24:15] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:24:15] MetamodelGraphWalker - Visiting attribute path : mobile
[19:24:15] MetamodelGraphWalker - Visiting attribute path : password
[19:24:15] MetamodelGraphWalker - Visiting attribute path : role
[19:24:15] MetamodelGraphWalker - Visiting attribute path : salt
[19:24:15] MetamodelGraphWalker - Visiting attribute path : username
[19:24:15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:24:15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:24:15] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:24:15] EntityLoader - Static select for entity com.monk.sbbook.entity.User [NONE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:24:15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c4e313e]
[19:24:15] MetamodelGraphWalker - Visiting attribute path : email
[19:24:15] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:24:15] MetamodelGraphWalker - Visiting attribute path : mobile
[19:24:15] MetamodelGraphWalker - Visiting attribute path : password
[19:24:15] MetamodelGraphWalker - Visiting attribute path : role
[19:24:15] MetamodelGraphWalker - Visiting attribute path : salt
[19:24:15] MetamodelGraphWalker - Visiting attribute path : username
[19:24:15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:24:15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:24:15] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:24:15] EntityLoader - Static select for entity com.monk.sbbook.entity.User [READ]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:24:15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3299f611]
[19:24:15] MetamodelGraphWalker - Visiting attribute path : email
[19:24:15] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:24:15] MetamodelGraphWalker - Visiting attribute path : mobile
[19:24:15] MetamodelGraphWalker - Visiting attribute path : password
[19:24:15] MetamodelGraphWalker - Visiting attribute path : role
[19:24:15] MetamodelGraphWalker - Visiting attribute path : salt
[19:24:15] MetamodelGraphWalker - Visiting attribute path : username
[19:24:15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:24:15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:24:15] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:24:15] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:24:15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a111e46]
[19:24:15] MetamodelGraphWalker - Visiting attribute path : email
[19:24:15] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:24:15] MetamodelGraphWalker - Visiting attribute path : mobile
[19:24:15] MetamodelGraphWalker - Visiting attribute path : password
[19:24:15] MetamodelGraphWalker - Visiting attribute path : role
[19:24:15] MetamodelGraphWalker - Visiting attribute path : salt
[19:24:15] MetamodelGraphWalker - Visiting attribute path : username
[19:24:15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:24:15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:24:15] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:24:15] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE_NOWAIT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:24:15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ac9b6fe]
[19:24:15] MetamodelGraphWalker - Visiting attribute path : email
[19:24:15] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:24:15] MetamodelGraphWalker - Visiting attribute path : mobile
[19:24:15] MetamodelGraphWalker - Visiting attribute path : password
[19:24:15] MetamodelGraphWalker - Visiting attribute path : role
[19:24:15] MetamodelGraphWalker - Visiting attribute path : salt
[19:24:15] MetamodelGraphWalker - Visiting attribute path : username
[19:24:15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:24:15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:24:15] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:24:15] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE_SKIPLOCKED]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:24:15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fc0646e]
[19:24:15] MetamodelGraphWalker - Visiting attribute path : email
[19:24:15] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:24:15] MetamodelGraphWalker - Visiting attribute path : mobile
[19:24:15] MetamodelGraphWalker - Visiting attribute path : password
[19:24:15] MetamodelGraphWalker - Visiting attribute path : role
[19:24:15] MetamodelGraphWalker - Visiting attribute path : salt
[19:24:15] MetamodelGraphWalker - Visiting attribute path : username
[19:24:15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:24:15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:24:15] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:24:15] EntityLoader - Static select for entity com.monk.sbbook.entity.User [FORCE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:24:15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@468abd84]
[19:24:15] MetamodelGraphWalker - Visiting attribute path : email
[19:24:15] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:24:15] MetamodelGraphWalker - Visiting attribute path : mobile
[19:24:15] MetamodelGraphWalker - Visiting attribute path : password
[19:24:15] MetamodelGraphWalker - Visiting attribute path : role
[19:24:15] MetamodelGraphWalker - Visiting attribute path : salt
[19:24:15] MetamodelGraphWalker - Visiting attribute path : username
[19:24:15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:24:15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:24:15] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:24:15] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_READ]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? lock in share mode
[19:24:15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7865a16f]
[19:24:15] MetamodelGraphWalker - Visiting attribute path : email
[19:24:15] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:24:15] MetamodelGraphWalker - Visiting attribute path : mobile
[19:24:15] MetamodelGraphWalker - Visiting attribute path : password
[19:24:15] MetamodelGraphWalker - Visiting attribute path : role
[19:24:15] MetamodelGraphWalker - Visiting attribute path : salt
[19:24:15] MetamodelGraphWalker - Visiting attribute path : username
[19:24:15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:24:15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:24:15] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:24:15] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_WRITE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:24:15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49024d39]
[19:24:15] MetamodelGraphWalker - Visiting attribute path : email
[19:24:15] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:24:15] MetamodelGraphWalker - Visiting attribute path : mobile
[19:24:15] MetamodelGraphWalker - Visiting attribute path : password
[19:24:15] MetamodelGraphWalker - Visiting attribute path : role
[19:24:15] MetamodelGraphWalker - Visiting attribute path : salt
[19:24:15] MetamodelGraphWalker - Visiting attribute path : username
[19:24:15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:24:15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:24:15] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:24:15] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:24:15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a2128c0]
[19:24:15] MetamodelGraphWalker - Visiting attribute path : email
[19:24:15] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:24:15] MetamodelGraphWalker - Visiting attribute path : mobile
[19:24:15] MetamodelGraphWalker - Visiting attribute path : password
[19:24:15] MetamodelGraphWalker - Visiting attribute path : role
[19:24:15] MetamodelGraphWalker - Visiting attribute path : salt
[19:24:15] MetamodelGraphWalker - Visiting attribute path : username
[19:24:15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:24:15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:24:15] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:24:15] EntityLoader - Static select for entity com.monk.sbbook.entity.User [OPTIMISTIC]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:24:15] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76ea0b20]
[19:24:15] MetamodelGraphWalker - Visiting attribute path : email
[19:24:15] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:24:15] MetamodelGraphWalker - Visiting attribute path : mobile
[19:24:15] MetamodelGraphWalker - Visiting attribute path : password
[19:24:15] MetamodelGraphWalker - Visiting attribute path : role
[19:24:15] MetamodelGraphWalker - Visiting attribute path : salt
[19:24:15] MetamodelGraphWalker - Visiting attribute path : username
[19:24:15] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:24:15] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:24:15] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:24:15] EntityLoader - Static select for entity com.monk.sbbook.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:24:15] Loader - Static select for action ACTION_MERGE on entity com.monk.sbbook.entity.User: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:24:15] Loader - Static select for action ACTION_REFRESH on entity com.monk.sbbook.entity.User: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:24:15] Table - No alter strings for table : hibernate_sequence
[19:24:15] Table - No alter strings for table : login_ticket
[19:24:15] Table - No alter strings for table : user
[19:24:15] NamedQueryRepository - Checking 0 named HQL queries
[19:24:15] NamedQueryRepository - Checking 0 named SQL queries
[19:24:15] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2fbcbd65
[19:24:15] SessionFactoryRegistry - Registering SessionFactory: 54294a28-2408-4328-bc68-c44e7ece222d (<unnamed>)
[19:24:15] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[19:24:15] StatisticsInitiator - Statistics initialized [enabled=false]
[19:24:15] QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@231701d4
[19:24:15] QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
[19:24:15] QueryTranslatorImpl - parse() - HQL: update com.monk.sbbook.entity.LoginTicket u set u.status=?1 where u.ticket=?2
[19:24:15] ErrorCounter - throwQueryException() : no errors
[19:24:15] QueryTranslatorImpl - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  \-[IDENT] Node: 'monk'
    |     |  |  |  \-[IDENT] Node: 'sbbook'
    |     |  |  \-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'LoginTicket'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'status'
    |     \-[PARAM] Node: '?'
    |        \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'ticket'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '2'

[19:24:15] HqlSqlBaseWalker - update << begin [level=1, statement=update]
[19:24:15] FromElement - FromClause{level=1} : com.monk.sbbook.entity.LoginTicket (u) -> loginticke0_
[19:24:15] FromReferenceNode - Resolved : u -> t_userid
[19:24:15] DotNode - getDataType() : status -> org.hibernate.type.IntegerType@3f331bf0
[19:24:15] FromReferenceNode - Resolved : u.status -> t_status
[19:24:15] FromReferenceNode - Resolved : u -> t_userid
[19:24:15] DotNode - getDataType() : ticket -> org.hibernate.type.StringType@74dac16d
[19:24:15] FromReferenceNode - Resolved : u.ticket -> t_ticket
[19:24:15] HqlSqlBaseWalker - update : finishing up [level=1, statement=update]
[19:24:16] HqlSqlBaseWalker - update >> end [level=1, statement=update]
[19:24:16] QueryTranslatorImpl - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (login_ticket)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[loginticke0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'login_ticket' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=login_ticket,tableAlias=loginticke0_,origin=null,columns={,className=com.monk.sbbook.entity.LoginTicket}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 't_status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=u.status,tableAlias=loginticke0_,className=com.monk.sbbook.entity.LoginTicket,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 't_userid' {alias=u, className=com.monk.sbbook.entity.LoginTicket, tableAlias=loginticke0_}
    |     |  \-[IDENT] IdentNode: 'status' {originalText=status}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@3f331bf0}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 't_ticket' {propertyName=ticket,dereferenceType=PRIMITIVE,getPropertyPath=ticket,path=u.ticket,tableAlias=loginticke0_,className=com.monk.sbbook.entity.LoginTicket,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 't_userid' {alias=u, className=com.monk.sbbook.entity.LoginTicket, tableAlias=loginticke0_}
          |  \-[IDENT] IdentNode: 'ticket' {originalText=ticket}
          \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@74dac16d}

[19:24:16] ErrorCounter - throwQueryException() : no errors
[19:24:16] ErrorCounter - throwQueryException() : no errors
[19:24:16] QueryTranslatorImpl - parse() - HQL: update com.monk.sbbook.entity.User u set u.username= ?1 where u.id= ?2
[19:24:16] ErrorCounter - throwQueryException() : no errors
[19:24:16] QueryTranslatorImpl - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  \-[IDENT] Node: 'monk'
    |     |  |  |  \-[IDENT] Node: 'sbbook'
    |     |  |  \-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'username'
    |     \-[PARAM] Node: '?'
    |        \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '2'

[19:24:16] HqlSqlBaseWalker - update << begin [level=1, statement=update]
[19:24:16] FromElement - FromClause{level=1} : com.monk.sbbook.entity.User (u) -> user0_
[19:24:16] FromReferenceNode - Resolved : u -> t_id
[19:24:16] DotNode - getDataType() : username -> org.hibernate.type.StringType@74dac16d
[19:24:16] FromReferenceNode - Resolved : u.username -> t_username
[19:24:16] FromReferenceNode - Resolved : u -> t_id
[19:24:16] DotNode - getDataType() : id -> org.hibernate.type.LongType@6cdbd01b
[19:24:16] FromReferenceNode - Resolved : u.id -> t_id
[19:24:16] HqlSqlBaseWalker - update : finishing up [level=1, statement=update]
[19:24:16] HqlSqlBaseWalker - update >> end [level=1, statement=update]
[19:24:16] QueryTranslatorImpl - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.monk.sbbook.entity.User}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 't_username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=com.monk.sbbook.entity.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 't_id' {alias=u, className=com.monk.sbbook.entity.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'username' {originalText=username}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@74dac16d}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 't_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=com.monk.sbbook.entity.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 't_id' {alias=u, className=com.monk.sbbook.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.LongType@6cdbd01b}

[19:24:16] ErrorCounter - throwQueryException() : no errors
[19:24:16] ErrorCounter - throwQueryException() : no errors
[19:24:16] SessionFactoryImpl - HHH000031: Closing
[19:24:16] CascadeStyles - External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
[19:24:16] AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[19:24:16] BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[19:24:16] HikariDataSource - HikariPool-1 - Shutdown initiated...
[19:24:16] HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[19:24:16] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@4643961a: (connection evicted)
[19:24:16] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@550ec756: (connection evicted)
[19:24:16] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@24167dc: (connection evicted)
[19:24:16] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@1945aae6: (connection evicted)
[19:24:16] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@667de1da: (connection evicted)
[19:24:16] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@2d9d45f2: (connection evicted)
[19:24:16] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@28b356dd: (connection evicted)
[19:24:16] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@6f0d6ffb: (connection evicted)
[19:24:16] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@6fa0fa72: (connection evicted)
[19:24:16] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@1bbd5259: (connection evicted)
[19:24:16] HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[19:24:16] HikariDataSource - HikariPool-1 - Shutdown completed.
[19:25:09] logging - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[19:25:09] Version - HV000001: Hibernate Validator 6.0.9.Final
[19:25:09] TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[19:25:09] TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[19:25:09] TraversableResolvers - Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
[19:25:09] ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[19:25:09] ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[19:25:09] ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[19:25:09] ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[19:25:09] SbBookApplication - Starting SbBookApplication on wjfdeiMac.local with PID 2476 (/Users/wengjf/Server/SpringMVC/sb-book/target/classes started by wengjf in /Users/wengjf/Server/SpringMVC/sb-book)
[19:25:09] SbBookApplication - Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
[19:25:09] SbBookApplication - No active profile set, falling back to default profiles: default
[19:25:09] ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
[19:25:09] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[19:25:09] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[19:25:09] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[19:25:09] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[19:25:09] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[19:25:11] HikariConfig - Driver class com.mysql.jdbc.Driver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2c7ffcf7
[19:25:11] HikariConfig - HikariPool-1 - configuration:
[19:25:11] HikariConfig - allowPoolSuspension.............false
[19:25:11] HikariConfig - autoCommit......................true
[19:25:11] HikariConfig - catalog.........................none
[19:25:11] HikariConfig - connectionInitSql...............none
[19:25:11] HikariConfig - connectionTestQuery.............none
[19:25:11] HikariConfig - connectionTimeout...............30000
[19:25:11] HikariConfig - dataSource......................none
[19:25:11] HikariConfig - dataSourceClassName.............none
[19:25:11] HikariConfig - dataSourceJNDI..................none
[19:25:11] HikariConfig - dataSourceProperties............{password=<masked>}
[19:25:11] HikariConfig - driverClassName................."com.mysql.jdbc.Driver"
[19:25:11] HikariConfig - healthCheckProperties...........{}
[19:25:11] HikariConfig - healthCheckRegistry.............none
[19:25:11] HikariConfig - idleTimeout.....................600000
[19:25:11] HikariConfig - initializationFailFast..........true
[19:25:11] HikariConfig - initializationFailTimeout.......1
[19:25:11] HikariConfig - isolateInternalQueries..........false
[19:25:11] HikariConfig - jdbc4ConnectionTest.............false
[19:25:11] HikariConfig - jdbcUrl.........................jdbc:mysql://localhost:3306/sbBook
[19:25:11] HikariConfig - leakDetectionThreshold..........0
[19:25:11] HikariConfig - maxLifetime.....................1800000
[19:25:11] HikariConfig - maximumPoolSize.................10
[19:25:11] HikariConfig - metricRegistry..................none
[19:25:11] HikariConfig - metricsTrackerFactory...........none
[19:25:11] HikariConfig - minimumIdle.....................10
[19:25:11] HikariConfig - password........................<masked>
[19:25:11] HikariConfig - poolName........................"HikariPool-1"
[19:25:11] HikariConfig - readOnly........................false
[19:25:11] HikariConfig - registerMbeans..................false
[19:25:11] HikariConfig - scheduledExecutor...............none
[19:25:11] HikariConfig - scheduledExecutorService........internal
[19:25:11] HikariConfig - schema..........................none
[19:25:11] HikariConfig - threadFactory...................internal
[19:25:11] HikariConfig - transactionIsolation............default
[19:25:11] HikariConfig - username........................"root"
[19:25:11] HikariConfig - validationTimeout...............5000
[19:25:11] HikariDataSource - HikariPool-1 - Starting...
[19:25:11] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@4b7ec0ea
[19:25:11] HikariDataSource - HikariPool-1 - Start completed.
[19:25:11] LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2c7ffcf7
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/wengjf/Server/SpringMVC/sb-book/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.monk.sbbook.entity.LoginTicket
		com.monk.sbbook.entity.User]
	Mapping files names []
	Properties []
[19:25:11] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[19:25:11] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[19:25:11] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[19:25:11] IntegratorServiceImpl - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[19:25:11] Version - HHH000412: Hibernate Core {5.2.16.Final}
[19:25:11] Environment - HHH000206: hibernate.properties not found
[19:25:11] HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
[19:25:11] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[19:25:11] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@3cfd2ac2
[19:25:11] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@1db2d292
[19:25:11] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@6b67e43
[19:25:11] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[19:25:11] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@19e52d9f
[19:25:11] Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[19:25:11] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@1f2efcd8
[19:25:11] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@3521e456
[19:25:11] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@1505e311
[19:25:11] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@5cc1e9b5
[19:25:11] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@79c6b48d
[19:25:11] HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[19:25:11] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@75a41a67
[19:25:11] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@75a41a67
[19:25:11] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@75a41a67
[19:25:11] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6137b5ef
[19:25:11] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1c1ffac2
[19:25:11] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@621415c6
[19:25:11] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5b23db25
[19:25:11] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5b23db25
[19:25:11] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5b23db25
[19:25:11] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7fd8b075
[19:25:11] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7fd8b075
[19:25:11] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7fd8b075
[19:25:11] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7600e211
[19:25:11] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7600e211
[19:25:11] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7600e211
[19:25:11] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7153458
[19:25:11] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7153458
[19:25:11] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7153458
[19:25:11] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4a7a7541
[19:25:11] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4a7a7541
[19:25:11] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4a7a7541
[19:25:11] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7c0b8e5c
[19:25:11] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7c0b8e5c
[19:25:11] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7c0b8e5c
[19:25:11] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@370ac6d8
[19:25:11] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@370ac6d8
[19:25:11] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@370ac6d8
[19:25:11] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@52c99685
[19:25:11] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@52c99685
[19:25:11] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@564589d3
[19:25:11] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@564589d3
[19:25:11] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4f369c87
[19:25:11] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4f369c87
[19:25:11] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@16281c6d
[19:25:11] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@42842e21
[19:25:11] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@48e8ccb8
[19:25:11] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@48e8ccb8
[19:25:11] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@3f388549
[19:25:11] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@3f388549
[19:25:11] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2c1ab670
[19:25:11] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2c1ab670
[19:25:11] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@aee8e7b
[19:25:11] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@aee8e7b
[19:25:11] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7a67d3fb
[19:25:11] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7a67d3fb
[19:25:11] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@34cf9f2c
[19:25:11] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@34cf9f2c
[19:25:11] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@35057f5e
[19:25:11] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@35057f5e
[19:25:11] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1e0ea414
[19:25:11] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1e0ea414
[19:25:11] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@535f5a9d
[19:25:11] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@535f5a9d
[19:25:11] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7d11e864
[19:25:11] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7d11e864
[19:25:11] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@c4ff098
[19:25:11] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@c4ff098
[19:25:11] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@f4f821c
[19:25:11] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@f4f821c
[19:25:11] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@f4f821c
[19:25:11] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5ed2a5d5
[19:25:11] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4a279d3e
[19:25:11] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4a279d3e
[19:25:11] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4a279d3e
[19:25:11] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2cce9645
[19:25:11] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@87ce607
[19:25:11] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@87ce607
[19:25:11] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6690219a
[19:25:11] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6690219a
[19:25:11] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@17e47bd9
[19:25:11] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@17e47bd9
[19:25:11] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1b9f16dd
[19:25:11] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b9f16dd
[19:25:11] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@389dd0a4
[19:25:11] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@389dd0a4
[19:25:11] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@24576905
[19:25:11] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4313360f
[19:25:11] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4313360f
[19:25:11] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4313360f
[19:25:11] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@190b9cfe
[19:25:11] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@190b9cfe
[19:25:11] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@190b9cfe
[19:25:11] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1e056394
[19:25:11] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3ddf2367
[19:25:11] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@750dc892
[19:25:11] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@750dc892
[19:25:11] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@750dc892
[19:25:11] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@406e5610
[19:25:11] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@406e5610
[19:25:11] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@406e5610
[19:25:11] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1f5d500b
[19:25:11] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@62b17b59
[19:25:11] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7d96af87
[19:25:11] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7d96af87
[19:25:11] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56ef3f7d
[19:25:11] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@799dbd3b
[19:25:11] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@799dbd3b
[19:25:11] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@40a6353
[19:25:11] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@40a6353
[19:25:11] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1262ad2
[19:25:11] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2f494c2c
[19:25:11] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@76d720c2
[19:25:11] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@27b83adf
[19:25:11] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@27b83adf
[19:25:11] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@77395576
[19:25:11] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@11b1f78c
[19:25:11] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@aee6fb
[19:25:11] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1d7bb175
[19:25:11] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2054d549
[19:25:11] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3e474b58
[19:25:11] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4929eb55
[19:25:11] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@9991b1c
[19:25:11] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.22
      major : 5
      minor : 7
[19:25:11] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e )
      major : 5
      minor : 1
[19:25:11] JdbcEnvironmentInitiator - JDBC version : 4.0
[19:25:11] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[19:25:11] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[19:25:11] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[19:25:11] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[19:25:11] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[19:25:11] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[19:25:11] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[19:25:11] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[19:25:11] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[19:25:11] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[19:25:11] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[19:25:11] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[19:25:11] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[19:25:11] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[19:25:11] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[19:25:11] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[19:25:11] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[19:25:11] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[19:25:12] AnnotationBinder - Binding entity from annotated class: com.monk.sbbook.entity.LoginTicket
[19:25:12] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[19:25:12] EntityBinder - Import with entity name LoginTicket
[19:25:12] EntityBinder - Bind entity com.monk.sbbook.entity.LoginTicket on table login_ticket
[19:25:12] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_userid, insertable=true, updatable=true, unique=false}
[19:25:12] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[19:25:12] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:userId]
[19:25:12] SimpleValueBinder - building SimpleValue for userId
[19:25:12] PropertyBinder - Building property userId
[19:25:12] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_expired, insertable=true, updatable=true, unique=false}
[19:25:12] PropertyBinder - MetadataSourceProcessor property expired with lazy=false
[19:25:12] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:expired]
[19:25:12] SimpleValueBinder - building SimpleValue for expired
[19:25:12] PropertyBinder - Building property expired
[19:25:12] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_status, insertable=true, updatable=true, unique=false}
[19:25:12] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[19:25:12] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:status]
[19:25:12] SimpleValueBinder - building SimpleValue for status
[19:25:12] PropertyBinder - Building property status
[19:25:12] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_ticket, insertable=true, updatable=true, unique=false}
[19:25:12] PropertyBinder - MetadataSourceProcessor property ticket with lazy=false
[19:25:12] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:ticket]
[19:25:12] SimpleValueBinder - building SimpleValue for ticket
[19:25:12] PropertyBinder - Building property ticket
[19:25:12] AnnotationBinder - Binding entity from annotated class: com.monk.sbbook.entity.User
[19:25:12] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[19:25:12] EntityBinder - Import with entity name User
[19:25:12] EntityBinder - Bind entity com.monk.sbbook.entity.User on table user
[19:25:12] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_id, insertable=true, updatable=true, unique=false}
[19:25:12] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[19:25:12] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:id]
[19:25:12] SimpleValueBinder - building SimpleValue for id
[19:25:12] PropertyBinder - Building property id
[19:25:12] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_email, insertable=true, updatable=true, unique=false}
[19:25:12] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[19:25:12] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:email]
[19:25:12] SimpleValueBinder - building SimpleValue for email
[19:25:12] PropertyBinder - Building property email
[19:25:12] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_head_url, insertable=true, updatable=true, unique=false}
[19:25:12] PropertyBinder - MetadataSourceProcessor property headUrl with lazy=false
[19:25:12] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:headUrl]
[19:25:12] SimpleValueBinder - building SimpleValue for headUrl
[19:25:12] PropertyBinder - Building property headUrl
[19:25:12] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_mobile, insertable=true, updatable=true, unique=false}
[19:25:12] PropertyBinder - MetadataSourceProcessor property mobile with lazy=false
[19:25:12] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:mobile]
[19:25:12] SimpleValueBinder - building SimpleValue for mobile
[19:25:12] PropertyBinder - Building property mobile
[19:25:12] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_password, insertable=true, updatable=true, unique=false}
[19:25:12] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[19:25:12] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:password]
[19:25:12] SimpleValueBinder - building SimpleValue for password
[19:25:12] PropertyBinder - Building property password
[19:25:12] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_role, insertable=true, updatable=true, unique=false}
[19:25:12] PropertyBinder - MetadataSourceProcessor property role with lazy=false
[19:25:12] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:role]
[19:25:12] SimpleValueBinder - building SimpleValue for role
[19:25:12] PropertyBinder - Building property role
[19:25:12] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_salt, insertable=true, updatable=true, unique=false}
[19:25:12] PropertyBinder - MetadataSourceProcessor property salt with lazy=false
[19:25:12] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:salt]
[19:25:12] SimpleValueBinder - building SimpleValue for salt
[19:25:12] PropertyBinder - Building property salt
[19:25:12] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_username, insertable=true, updatable=true, unique=true}
[19:25:12] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[19:25:12] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:username]
[19:25:12] SimpleValueBinder - building SimpleValue for username
[19:25:12] PropertyBinder - Building property username
[19:25:12] SimpleValueBinder - Starting fillSimpleValue for userId
[19:25:12] SimpleValueBinder - Starting fillSimpleValue for expired
[19:25:12] SimpleValueBinder - Starting fillSimpleValue for status
[19:25:12] SimpleValueBinder - Starting fillSimpleValue for ticket
[19:25:12] SimpleValueBinder - Starting fillSimpleValue for id
[19:25:12] SimpleValueBinder - Starting fillSimpleValue for email
[19:25:12] SimpleValueBinder - Starting fillSimpleValue for headUrl
[19:25:12] SimpleValueBinder - Starting fillSimpleValue for mobile
[19:25:12] SimpleValueBinder - Starting fillSimpleValue for password
[19:25:12] SimpleValueBinder - Starting fillSimpleValue for role
[19:25:12] SimpleValueBinder - Starting fillSimpleValue for salt
[19:25:12] SimpleValueBinder - Starting fillSimpleValue for username
[19:25:12] PrimaryKey - Forcing column [t_userid] to be non-null as it is part of the primary key for table [login_ticket]
[19:25:12] PrimaryKey - Forcing column [t_id] to be non-null as it is part of the primary key for table [user]
[19:25:12] SessionFactoryImpl - Building session factory
[19:25:12] Settings - SessionFactory name : null
[19:25:12] Settings - Automatic flush during beforeCompletion(): enabled
[19:25:12] Settings - Automatic session close at end of transaction: disabled
[19:25:12] Settings - Statistics: disabled
[19:25:12] Settings - Deleted entity synthetic identifier rollback: disabled
[19:25:12] Settings - Default entity-mode: pojo
[19:25:12] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[19:25:12] Settings - Allow initialization of lazy state outside session : disabled
[19:25:12] Settings - Using BatchFetchStyle : LEGACY
[19:25:12] Settings - Default batch fetch size: -1
[19:25:12] Settings - Maximum outer join fetch depth: 2
[19:25:12] Settings - Default null ordering: NONE
[19:25:12] Settings - Order SQL updates by primary key: disabled
[19:25:12] Settings - Order SQL inserts for batching: disabled
[19:25:12] Settings - multi-tenancy strategy : NONE
[19:25:12] Settings - JTA Track by Thread: enabled
[19:25:12] Settings - Query language substitutions: {}
[19:25:12] Settings - JPA query language strict compliance: disabled
[19:25:12] Settings - Named query checking : enabled
[19:25:12] Settings - Second-level cache: enabled
[19:25:12] Settings - Second-level query cache: disabled
[19:25:12] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@5a47e03c
[19:25:12] Settings - Second-level cache region prefix: null
[19:25:12] Settings - Optimize second-level cache for minimal puts: disabled
[19:25:12] Settings - Structured second-level cache entries: disabled
[19:25:12] Settings - Second-level cache direct-reference entries: disabled
[19:25:12] Settings - Automatic eviction of collection cache: disabled
[19:25:12] Settings - JDBC batch size: 15
[19:25:12] Settings - JDBC batch updates for versioned data: enabled
[19:25:12] Settings - Scrollable result sets: enabled
[19:25:12] Settings - Wrap result sets: disabled
[19:25:12] Settings - JDBC3 getGeneratedKeys(): enabled
[19:25:12] Settings - JDBC result set fetch size: null
[19:25:12] Settings - Connection release mode: ON_CLOSE
[19:25:12] Settings - Generate SQL with comments: disabled
[19:25:12] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[19:25:12] SessionFactoryImpl - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/Users/wengjf/Server/SpringMVC/sb-book/target/classes:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.0.1.RELEASE/spring-boot-starter-aop-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.0.1.RELEASE/spring-boot-starter-jdbc-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.5/jackson-core-2.9.5.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.29/tomcat-embed-jasper-8.5.29.jar:/Users/wengjf/.m2/repository/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:/Users/wengjf/.m2/repository/org/springframework/data/spring-data-commons/2.0.6.RELEASE/spring-data-commons-2.0.6.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-tx/5.0.5.RELEASE/spring-tx-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/wengjf/.m2/repository/org/hibernate/hibernate-core/5.2.16.Final/hibernate-core-5.2.16.Final.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-mail/2.0.1.RELEASE/spring-boot-starter-mail-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.0.1.RELEASE/spring-boot-starter-data-jpa-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/8.5.29/tomcat-embed-websocket-8.5.29.jar:/Users/wengjf/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.9.5/jackson-module-parameter-names-2.9.5.jar:/Users/wengjf/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/Users/wengjf/.m2/repository/mysql/mysql-connector-java/5.1.46/mysql-connector-java-5.1.46.jar:/Users/wengjf/.m2/repository/org/springframework/spring-context-support/5.0.5.RELEASE/spring-context-support-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.29/tomcat-embed-el-8.5.29.jar:/Users/wengjf/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/wengjf/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/Users/wengjf/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/wengjf/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar:/Users/wengjf/.m2/repository/com/sun/mail/javax.mail/1.6.1/javax.mail-1.6.1.jar:/Users/wengjf/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-log4j/1.3.8.RELEASE/spring-boot-starter-log4j-1.3.8.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-devtools/2.0.1.RELEASE/spring-boot-devtools-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-aspects/5.0.5.RELEASE/spring-aspects-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.0.1.RELEASE/spring-boot-autoconfigure-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-jdbc/5.0.5.RELEASE/spring-jdbc-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-context/5.0.5.RELEASE/spring-context-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.0.1.RELEASE/spring-boot-starter-web-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/data/spring-data-jpa/2.0.6.RELEASE/spring-data-jpa-2.0.6.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot/2.0.1.RELEASE/spring-boot-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.9.5/jackson-datatype-jdk8-2.9.5.jar:/Users/wengjf/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/wengjf/.m2/repository/org/springframework/spring-jcl/5.0.5.RELEASE/spring-jcl-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.9.Final/hibernate-validator-6.0.9.Final.jar:/Users/wengjf/.m2/repository/org/springframework/spring-aop/5.0.5.RELEASE/spring-aop-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.9.5/jackson-datatype-jsr310-2.9.5.jar:/Users/wengjf/.m2/repository/org/javassist/javassist/3.22.0-GA/javassist-3.22.0-GA.jar:/Users/wengjf/.m2/repository/org/springframework/spring-expression/5.0.5.RELEASE/spring-expression-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/quartz-scheduler/quartz/2.3.0/quartz-2.3.0.jar:/Users/wengjf/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/Users/wengjf/.m2/repository/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/Users/wengjf/.m2/repository/org/yaml/snakeyaml/1.19/snakeyaml-1.19.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.29/tomcat-annotations-api-8.5.29.jar:/Users/wengjf/.m2/repository/com/zaxxer/HikariCP/2.7.8/HikariCP-2.7.8.jar:/Users/wengjf/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.0.1.RELEASE/spring-boot-starter-json-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/aspectj/aspectjweaver/1.8.13/aspectjweaver-1.8.13.jar:/Users/wengjf/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.29/tomcat-embed-core-8.5.29.jar:/Users/wengjf/.m2/repository/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-quartz/2.0.1.RELEASE/spring-boot-starter-quartz-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-orm/5.0.5.RELEASE/spring-orm-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.0.1.RELEASE/spring-boot-starter-tomcat-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/Users/wengjf/.m2/repository/org/springframework/spring-webmvc/5.0.5.RELEASE/spring-webmvc-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-core/5.0.5.RELEASE/spring-core-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-beans/5.0.5.RELEASE/spring-beans-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/Users/wengjf/.m2/repository/org/springframework/spring-web/5.0.5.RELEASE/spring-web-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/javax/transaction/javax.transaction-api/1.2/javax.transaction-api-1.2.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter/2.0.1.RELEASE/spring-boot-starter-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.5/jackson-databind-2.9.5.jar:/Users/wengjf/.m2/repository/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Macau, os.name=Mac OS X, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib, sun.java.command=com.monk.sbbook.SbBookApplication, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@15282670, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=/Users/wengjf, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=1.8.0_171-b11, user.name=wengjf, path.separator=:, os.version=10.13.2, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/, com.zaxxer.hikari.pool_number=1, catalina.home=/private/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/tomcat.3294792231992179519.8080, java.version=1.8.0_171, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/Users/wengjf/Server/SpringMVC/sb-book, os.arch=x86_64, PID=2476, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, catalina.base=/private/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/tomcat.3294792231992179519.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7a9108ed, java.library.path=/Users/wengjf/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.171-b11, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=HikariDataSource (HikariPool-1), sun.io.unicode.encoding=UnicodeBig, java.ext.dirs=/Users/wengjf/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, java.class.version=52.0, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16}
[19:25:12] TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[19:25:12] TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[19:25:12] TraversableResolvers - Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
[19:25:12] ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[19:25:12] ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[19:25:12] ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[19:25:12] ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[19:25:12] ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
[19:25:12] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[19:25:12] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[19:25:12] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[19:25:12] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[19:25:12] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[19:25:12] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:25:12] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:25:12] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:25:12] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:25:12] JaccIntegrator - Skipping JACC integration as it was not enabled
[19:25:12] CascadeStyles - External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[19:25:12] SessionFactoryImpl - Instantiated session factory
[19:25:12] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:25:12] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:25:12] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:25:12] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:25:12] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:25:12] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:25:12] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:25:12] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:25:12] AbstractEntityPersister - Static SQL for entity: com.monk.sbbook.entity.LoginTicket
[19:25:12] AbstractEntityPersister -  Version select: select t_userid from login_ticket where t_userid =?
[19:25:12] AbstractEntityPersister -  Snapshot select: select loginticke_.t_userid, loginticke_.t_expired as t_expire2_0_, loginticke_.t_status as t_status3_0_, loginticke_.t_ticket as t_ticket4_0_ from login_ticket loginticke_ where loginticke_.t_userid=?
[19:25:12] AbstractEntityPersister -  Insert 0: insert into login_ticket (t_expired, t_status, t_ticket, t_userid) values (?, ?, ?, ?)
[19:25:12] AbstractEntityPersister -  Update 0: update login_ticket set t_expired=?, t_status=?, t_ticket=? where t_userid=?
[19:25:12] AbstractEntityPersister -  Delete 0: delete from login_ticket where t_userid=?
[19:25:12] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fc4a48f]
[19:25:12] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:12] MetamodelGraphWalker - Visiting attribute path : status
[19:25:12] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:12] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:12] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:12] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:12] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [NONE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:25:12] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51d8c21a]
[19:25:12] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:12] MetamodelGraphWalker - Visiting attribute path : status
[19:25:12] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:12] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:12] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:12] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:12] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [READ]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:25:12] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1521863d]
[19:25:12] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:12] MetamodelGraphWalker - Visiting attribute path : status
[19:25:12] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:12] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:12] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:12] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:12] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:25:12] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5729127e]
[19:25:12] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:12] MetamodelGraphWalker - Visiting attribute path : status
[19:25:12] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:12] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:12] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:12] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:12] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE_NOWAIT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:25:12] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ba63f91]
[19:25:12] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:12] MetamodelGraphWalker - Visiting attribute path : status
[19:25:12] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:12] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:12] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:12] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:12] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE_SKIPLOCKED]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:25:12] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72808c35]
[19:25:12] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:12] MetamodelGraphWalker - Visiting attribute path : status
[19:25:12] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:12] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:12] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:12] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:12] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [FORCE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:25:12] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20abb4f6]
[19:25:12] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:12] MetamodelGraphWalker - Visiting attribute path : status
[19:25:12] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:12] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:12] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:12] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:12] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_READ]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? lock in share mode
[19:25:12] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@159225ae]
[19:25:12] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:12] MetamodelGraphWalker - Visiting attribute path : status
[19:25:12] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:12] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:12] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:12] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:12] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_WRITE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:25:12] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@382c28ce]
[19:25:12] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:12] MetamodelGraphWalker - Visiting attribute path : status
[19:25:12] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:12] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:12] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:12] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:12] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_FORCE_INCREMENT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:25:12] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7038bcfb]
[19:25:12] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:12] MetamodelGraphWalker - Visiting attribute path : status
[19:25:12] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:12] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:12] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:12] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:12] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [OPTIMISTIC]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:25:12] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5be12fc]
[19:25:12] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:12] MetamodelGraphWalker - Visiting attribute path : status
[19:25:12] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:12] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:12] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:12] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:12] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [OPTIMISTIC_FORCE_INCREMENT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:25:12] Loader - Static select for action ACTION_MERGE on entity com.monk.sbbook.entity.LoginTicket: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:25:12] Loader - Static select for action ACTION_REFRESH on entity com.monk.sbbook.entity.LoginTicket: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:25:12] AbstractEntityPersister - Static SQL for entity: com.monk.sbbook.entity.User
[19:25:12] AbstractEntityPersister -  Version select: select t_id from user where t_id =?
[19:25:12] AbstractEntityPersister -  Snapshot select: select user_.t_id, user_.t_email as t_email2_1_, user_.t_head_url as t_head_u3_1_, user_.t_mobile as t_mobile4_1_, user_.t_password as t_passwo5_1_, user_.t_role as t_role6_1_, user_.t_salt as t_salt7_1_, user_.t_username as t_userna8_1_ from user user_ where user_.t_id=?
[19:25:12] AbstractEntityPersister -  Insert 0: insert into user (t_email, t_head_url, t_mobile, t_password, t_role, t_salt, t_username, t_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[19:25:12] AbstractEntityPersister -  Update 0: update user set t_email=?, t_head_url=?, t_mobile=?, t_password=?, t_role=?, t_salt=?, t_username=? where t_id=?
[19:25:12] AbstractEntityPersister -  Delete 0: delete from user where t_id=?
[19:25:12] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@392917ec]
[19:25:12] MetamodelGraphWalker - Visiting attribute path : email
[19:25:12] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:12] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:12] MetamodelGraphWalker - Visiting attribute path : password
[19:25:12] MetamodelGraphWalker - Visiting attribute path : role
[19:25:12] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:12] MetamodelGraphWalker - Visiting attribute path : username
[19:25:12] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:12] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:12] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:12] EntityLoader - Static select for entity com.monk.sbbook.entity.User [NONE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:25:12] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49599238]
[19:25:12] MetamodelGraphWalker - Visiting attribute path : email
[19:25:12] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:12] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:12] MetamodelGraphWalker - Visiting attribute path : password
[19:25:12] MetamodelGraphWalker - Visiting attribute path : role
[19:25:12] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:12] MetamodelGraphWalker - Visiting attribute path : username
[19:25:12] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:12] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:12] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:12] EntityLoader - Static select for entity com.monk.sbbook.entity.User [READ]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:25:12] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a6a2f6f]
[19:25:12] MetamodelGraphWalker - Visiting attribute path : email
[19:25:12] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:12] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:12] MetamodelGraphWalker - Visiting attribute path : password
[19:25:12] MetamodelGraphWalker - Visiting attribute path : role
[19:25:12] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:12] MetamodelGraphWalker - Visiting attribute path : username
[19:25:12] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:12] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:12] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:12] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:25:12] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ff47ef7]
[19:25:12] MetamodelGraphWalker - Visiting attribute path : email
[19:25:12] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:12] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:12] MetamodelGraphWalker - Visiting attribute path : password
[19:25:12] MetamodelGraphWalker - Visiting attribute path : role
[19:25:12] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:12] MetamodelGraphWalker - Visiting attribute path : username
[19:25:12] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:12] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:12] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:12] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE_NOWAIT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:25:12] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@513a4293]
[19:25:12] MetamodelGraphWalker - Visiting attribute path : email
[19:25:12] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:12] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:12] MetamodelGraphWalker - Visiting attribute path : password
[19:25:12] MetamodelGraphWalker - Visiting attribute path : role
[19:25:12] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:12] MetamodelGraphWalker - Visiting attribute path : username
[19:25:12] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:12] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:12] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:12] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE_SKIPLOCKED]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:25:12] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2292dab7]
[19:25:12] MetamodelGraphWalker - Visiting attribute path : email
[19:25:12] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:12] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:12] MetamodelGraphWalker - Visiting attribute path : password
[19:25:12] MetamodelGraphWalker - Visiting attribute path : role
[19:25:12] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:12] MetamodelGraphWalker - Visiting attribute path : username
[19:25:12] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:12] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:12] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:12] EntityLoader - Static select for entity com.monk.sbbook.entity.User [FORCE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:25:12] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66522462]
[19:25:12] MetamodelGraphWalker - Visiting attribute path : email
[19:25:12] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:12] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:12] MetamodelGraphWalker - Visiting attribute path : password
[19:25:12] MetamodelGraphWalker - Visiting attribute path : role
[19:25:12] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:12] MetamodelGraphWalker - Visiting attribute path : username
[19:25:12] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:12] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:12] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:12] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_READ]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? lock in share mode
[19:25:12] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@571c3ce0]
[19:25:12] MetamodelGraphWalker - Visiting attribute path : email
[19:25:12] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:12] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:12] MetamodelGraphWalker - Visiting attribute path : password
[19:25:12] MetamodelGraphWalker - Visiting attribute path : role
[19:25:12] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:12] MetamodelGraphWalker - Visiting attribute path : username
[19:25:12] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:12] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:12] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:12] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_WRITE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:25:12] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78284246]
[19:25:12] MetamodelGraphWalker - Visiting attribute path : email
[19:25:12] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:12] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:12] MetamodelGraphWalker - Visiting attribute path : password
[19:25:12] MetamodelGraphWalker - Visiting attribute path : role
[19:25:12] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:12] MetamodelGraphWalker - Visiting attribute path : username
[19:25:12] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:12] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:12] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:12] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:25:12] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@553b167c]
[19:25:12] MetamodelGraphWalker - Visiting attribute path : email
[19:25:12] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:12] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:12] MetamodelGraphWalker - Visiting attribute path : password
[19:25:12] MetamodelGraphWalker - Visiting attribute path : role
[19:25:12] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:12] MetamodelGraphWalker - Visiting attribute path : username
[19:25:12] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:12] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:12] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:12] EntityLoader - Static select for entity com.monk.sbbook.entity.User [OPTIMISTIC]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:25:12] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10dd66ef]
[19:25:12] MetamodelGraphWalker - Visiting attribute path : email
[19:25:12] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:12] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:12] MetamodelGraphWalker - Visiting attribute path : password
[19:25:12] MetamodelGraphWalker - Visiting attribute path : role
[19:25:12] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:12] MetamodelGraphWalker - Visiting attribute path : username
[19:25:12] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:12] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:12] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:12] EntityLoader - Static select for entity com.monk.sbbook.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:25:12] Loader - Static select for action ACTION_MERGE on entity com.monk.sbbook.entity.User: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:25:12] Loader - Static select for action ACTION_REFRESH on entity com.monk.sbbook.entity.User: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:25:12] Table - No alter strings for table : hibernate_sequence
[19:25:12] Table - No alter strings for table : login_ticket
[19:25:12] Table - No alter strings for table : user
[19:25:12] NamedQueryRepository - Checking 0 named HQL queries
[19:25:12] NamedQueryRepository - Checking 0 named SQL queries
[19:25:12] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7f45645f
[19:25:12] SessionFactoryRegistry - Registering SessionFactory: f893c303-e88d-4430-97e4-89f1b7a5da05 (<unnamed>)
[19:25:12] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[19:25:12] StatisticsInitiator - Statistics initialized [enabled=false]
[19:25:12] QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@49cbf7ef
[19:25:12] QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
[19:25:12] QueryTranslatorImpl - parse() - HQL: update com.monk.sbbook.entity.LoginTicket u set u.status=?1 where u.ticket=?2
[19:25:12] ErrorCounter - throwQueryException() : no errors
[19:25:12] QueryTranslatorImpl - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  \-[IDENT] Node: 'monk'
    |     |  |  |  \-[IDENT] Node: 'sbbook'
    |     |  |  \-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'LoginTicket'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'status'
    |     \-[PARAM] Node: '?'
    |        \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'ticket'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '2'

[19:25:12] HqlSqlBaseWalker - update << begin [level=1, statement=update]
[19:25:12] FromElement - FromClause{level=1} : com.monk.sbbook.entity.LoginTicket (u) -> loginticke0_
[19:25:12] FromReferenceNode - Resolved : u -> t_userid
[19:25:12] DotNode - getDataType() : status -> org.hibernate.type.IntegerType@7153458
[19:25:12] FromReferenceNode - Resolved : u.status -> t_status
[19:25:12] FromReferenceNode - Resolved : u -> t_userid
[19:25:12] DotNode - getDataType() : ticket -> org.hibernate.type.StringType@4f369c87
[19:25:12] FromReferenceNode - Resolved : u.ticket -> t_ticket
[19:25:12] HqlSqlBaseWalker - update : finishing up [level=1, statement=update]
[19:25:12] HqlSqlBaseWalker - update >> end [level=1, statement=update]
[19:25:12] QueryTranslatorImpl - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (login_ticket)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[loginticke0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'login_ticket' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=login_ticket,tableAlias=loginticke0_,origin=null,columns={,className=com.monk.sbbook.entity.LoginTicket}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 't_status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=u.status,tableAlias=loginticke0_,className=com.monk.sbbook.entity.LoginTicket,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 't_userid' {alias=u, className=com.monk.sbbook.entity.LoginTicket, tableAlias=loginticke0_}
    |     |  \-[IDENT] IdentNode: 'status' {originalText=status}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@7153458}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 't_ticket' {propertyName=ticket,dereferenceType=PRIMITIVE,getPropertyPath=ticket,path=u.ticket,tableAlias=loginticke0_,className=com.monk.sbbook.entity.LoginTicket,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 't_userid' {alias=u, className=com.monk.sbbook.entity.LoginTicket, tableAlias=loginticke0_}
          |  \-[IDENT] IdentNode: 'ticket' {originalText=ticket}
          \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@4f369c87}

[19:25:12] ErrorCounter - throwQueryException() : no errors
[19:25:12] ErrorCounter - throwQueryException() : no errors
[19:25:12] QueryTranslatorImpl - parse() - HQL: update com.monk.sbbook.entity.User u set u.username= ?1 where u.id= ?2
[19:25:12] ErrorCounter - throwQueryException() : no errors
[19:25:12] QueryTranslatorImpl - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  \-[IDENT] Node: 'monk'
    |     |  |  |  \-[IDENT] Node: 'sbbook'
    |     |  |  \-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'username'
    |     \-[PARAM] Node: '?'
    |        \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '2'

[19:25:12] HqlSqlBaseWalker - update << begin [level=1, statement=update]
[19:25:12] FromElement - FromClause{level=1} : com.monk.sbbook.entity.User (u) -> user0_
[19:25:12] FromReferenceNode - Resolved : u -> t_id
[19:25:12] DotNode - getDataType() : username -> org.hibernate.type.StringType@4f369c87
[19:25:12] FromReferenceNode - Resolved : u.username -> t_username
[19:25:12] FromReferenceNode - Resolved : u -> t_id
[19:25:12] DotNode - getDataType() : id -> org.hibernate.type.LongType@4a7a7541
[19:25:12] FromReferenceNode - Resolved : u.id -> t_id
[19:25:12] HqlSqlBaseWalker - update : finishing up [level=1, statement=update]
[19:25:12] HqlSqlBaseWalker - update >> end [level=1, statement=update]
[19:25:12] QueryTranslatorImpl - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.monk.sbbook.entity.User}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 't_username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=com.monk.sbbook.entity.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 't_id' {alias=u, className=com.monk.sbbook.entity.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'username' {originalText=username}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@4f369c87}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 't_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=com.monk.sbbook.entity.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 't_id' {alias=u, className=com.monk.sbbook.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.LongType@4a7a7541}

[19:25:12] ErrorCounter - throwQueryException() : no errors
[19:25:12] ErrorCounter - throwQueryException() : no errors
[19:25:12] SessionFactoryImpl - HHH000031: Closing
[19:25:12] CascadeStyles - External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
[19:25:12] AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[19:25:12] BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[19:25:12] HikariDataSource - HikariPool-1 - Shutdown initiated...
[19:25:12] HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[19:25:12] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@4b7ec0ea: (connection evicted)
[19:25:12] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@3cfd2ac2: (connection evicted)
[19:25:12] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@1db2d292: (connection evicted)
[19:25:12] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@6b67e43: (connection evicted)
[19:25:12] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@19e52d9f: (connection evicted)
[19:25:12] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@1f2efcd8: (connection evicted)
[19:25:12] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@3521e456: (connection evicted)
[19:25:12] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@1505e311: (connection evicted)
[19:25:12] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@5cc1e9b5: (connection evicted)
[19:25:12] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@79c6b48d: (connection evicted)
[19:25:12] HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[19:25:12] HikariDataSource - HikariPool-1 - Shutdown completed.
[19:25:26] logging - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[19:25:26] Version - HV000001: Hibernate Validator 6.0.9.Final
[19:25:26] TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[19:25:26] TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[19:25:26] TraversableResolvers - Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
[19:25:26] ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[19:25:26] ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[19:25:26] ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[19:25:26] ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[19:25:26] SbBookApplication - Starting SbBookApplication on wjfdeiMac.local with PID 2479 (/Users/wengjf/Server/SpringMVC/sb-book/target/classes started by wengjf in /Users/wengjf/Server/SpringMVC/sb-book)
[19:25:26] SbBookApplication - Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
[19:25:26] SbBookApplication - No active profile set, falling back to default profiles: default
[19:25:26] ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
[19:25:26] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[19:25:26] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[19:25:26] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[19:25:26] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[19:25:26] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[19:25:27] HikariConfig - Driver class com.mysql.jdbc.Driver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@44a678ad
[19:25:27] HikariConfig - HikariPool-1 - configuration:
[19:25:27] HikariConfig - allowPoolSuspension.............false
[19:25:27] HikariConfig - autoCommit......................true
[19:25:27] HikariConfig - catalog.........................none
[19:25:27] HikariConfig - connectionInitSql...............none
[19:25:27] HikariConfig - connectionTestQuery.............none
[19:25:27] HikariConfig - connectionTimeout...............30000
[19:25:27] HikariConfig - dataSource......................none
[19:25:27] HikariConfig - dataSourceClassName.............none
[19:25:27] HikariConfig - dataSourceJNDI..................none
[19:25:27] HikariConfig - dataSourceProperties............{password=<masked>}
[19:25:27] HikariConfig - driverClassName................."com.mysql.jdbc.Driver"
[19:25:27] HikariConfig - healthCheckProperties...........{}
[19:25:27] HikariConfig - healthCheckRegistry.............none
[19:25:27] HikariConfig - idleTimeout.....................600000
[19:25:27] HikariConfig - initializationFailFast..........true
[19:25:27] HikariConfig - initializationFailTimeout.......1
[19:25:27] HikariConfig - isolateInternalQueries..........false
[19:25:27] HikariConfig - jdbc4ConnectionTest.............false
[19:25:27] HikariConfig - jdbcUrl.........................jdbc:mysql://localhost:3306/sbBook
[19:25:27] HikariConfig - leakDetectionThreshold..........0
[19:25:27] HikariConfig - maxLifetime.....................1800000
[19:25:27] HikariConfig - maximumPoolSize.................10
[19:25:27] HikariConfig - metricRegistry..................none
[19:25:27] HikariConfig - metricsTrackerFactory...........none
[19:25:27] HikariConfig - minimumIdle.....................10
[19:25:27] HikariConfig - password........................<masked>
[19:25:27] HikariConfig - poolName........................"HikariPool-1"
[19:25:27] HikariConfig - readOnly........................false
[19:25:27] HikariConfig - registerMbeans..................false
[19:25:27] HikariConfig - scheduledExecutor...............none
[19:25:27] HikariConfig - scheduledExecutorService........internal
[19:25:27] HikariConfig - schema..........................none
[19:25:27] HikariConfig - threadFactory...................internal
[19:25:27] HikariConfig - transactionIsolation............default
[19:25:27] HikariConfig - username........................"root"
[19:25:27] HikariConfig - validationTimeout...............5000
[19:25:27] HikariDataSource - HikariPool-1 - Starting...
[19:25:28] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@7d0a3b2c
[19:25:28] HikariDataSource - HikariPool-1 - Start completed.
[19:25:28] LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@44a678ad
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/wengjf/Server/SpringMVC/sb-book/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.monk.sbbook.entity.LoginTicket
		com.monk.sbbook.entity.User]
	Mapping files names []
	Properties []
[19:25:28] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[19:25:28] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[19:25:28] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[19:25:28] IntegratorServiceImpl - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[19:25:28] Version - HHH000412: Hibernate Core {5.2.16.Final}
[19:25:28] Environment - HHH000206: hibernate.properties not found
[19:25:28] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[19:25:28] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[19:25:28] Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[19:25:28] HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
[19:25:28] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@7b0485fc
[19:25:28] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@5006849b
[19:25:28] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@4b02efab
[19:25:28] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@67eebb22
[19:25:28] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@721c383c
[19:25:28] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@721c383c
[19:25:28] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@721c383c
[19:25:28] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4fe5ab35
[19:25:28] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1b59208f
[19:25:28] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3100ff66
[19:25:28] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5b4162ba
[19:25:28] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5b4162ba
[19:25:28] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5b4162ba
[19:25:28] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7a01a42a
[19:25:28] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7a01a42a
[19:25:28] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7a01a42a
[19:25:28] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@1c9143b4
[19:25:28] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@46c6a50a
[19:25:28] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@46c6a50a
[19:25:28] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@46c6a50a
[19:25:28] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@26d745eb
[19:25:28] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@26d745eb
[19:25:28] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@26d745eb
[19:25:28] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1daf15bd
[19:25:28] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1daf15bd
[19:25:28] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1daf15bd
[19:25:28] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@84186b8
[19:25:28] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@84186b8
[19:25:28] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@84186b8
[19:25:28] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@68e07b24
[19:25:28] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@68e07b24
[19:25:28] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68e07b24
[19:25:28] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1d2ef305
[19:25:28] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1d2ef305
[19:25:28] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@660473d
[19:25:28] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@660473d
[19:25:28] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@356ac94
[19:25:28] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@356ac94
[19:25:28] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@388fe374
[19:25:28] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@35c92906
[19:25:28] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7fb0c508
[19:25:28] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@55c25285
[19:25:28] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@55c25285
[19:25:28] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@39b6b740
[19:25:28] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@39b6b740
[19:25:28] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@47478705
[19:25:28] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@47478705
[19:25:28] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@293db1b3
[19:25:28] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@293db1b3
[19:25:28] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@345979f4
[19:25:28] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@345979f4
[19:25:28] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@53ab8b76
[19:25:28] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@53ab8b76
[19:25:28] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37dbff66
[19:25:28] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37dbff66
[19:25:28] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7d6d3ed8
[19:25:28] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7d6d3ed8
[19:25:28] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@188b4fd5
[19:25:28] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@554ffd7e
[19:25:28] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@554ffd7e
[19:25:28] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@44f016ae
[19:25:28] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@44f016ae
[19:25:28] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1efe0ccb
[19:25:28] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1efe0ccb
[19:25:28] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7044531f
[19:25:28] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7044531f
[19:25:28] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7044531f
[19:25:28] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@157cb2c0
[19:25:28] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@798bf970
[19:25:28] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@798bf970
[19:25:28] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@798bf970
[19:25:28] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@2e3cc5e9
[19:25:28] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@24bde8e6
[19:25:28] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1af50e2e
[19:25:28] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1af50e2e
[19:25:28] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@48e614ea
[19:25:28] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48e614ea
[19:25:28] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@29ec8a9a
[19:25:28] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@29ec8a9a
[19:25:28] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3abf2608
[19:25:28] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3abf2608
[19:25:28] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7279ca1b
[19:25:28] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7279ca1b
[19:25:28] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3e021612
[19:25:28] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5541629e
[19:25:28] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5541629e
[19:25:28] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5541629e
[19:25:28] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c1707a5
[19:25:28] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c1707a5
[19:25:28] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c1707a5
[19:25:28] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@96c58c3
[19:25:28] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1706059c
[19:25:28] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@48ee6110
[19:25:28] HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[19:25:28] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@228e9627
[19:25:28] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@228e9627
[19:25:28] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@228e9627
[19:25:28] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6639afe
[19:25:28] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6639afe
[19:25:28] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6639afe
[19:25:28] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@57950d6c
[19:25:28] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@77df70b2
[19:25:28] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1f5c3f08
[19:25:28] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f5c3f08
[19:25:28] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@557dbf80
[19:25:28] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@58bea781
[19:25:28] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@58bea781
[19:25:28] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@20a01bd9
[19:25:28] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@20a01bd9
[19:25:28] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7a14a72e
[19:25:28] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@297df7b4
[19:25:28] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6ec7c1e8
[19:25:28] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@24b09225
[19:25:28] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@24b09225
[19:25:28] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@69a846cd
[19:25:28] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@49a9d067
[19:25:28] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6779c59e
[19:25:28] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@68f3b691
[19:25:28] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@43460b6c
[19:25:28] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@446bc18b
[19:25:28] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6d97a9ad
[19:25:28] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1825cdb0
[19:25:28] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.22
      major : 5
      minor : 7
[19:25:28] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e )
      major : 5
      minor : 1
[19:25:28] JdbcEnvironmentInitiator - JDBC version : 4.0
[19:25:28] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[19:25:28] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[19:25:28] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[19:25:28] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[19:25:28] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[19:25:28] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[19:25:28] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[19:25:28] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[19:25:28] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[19:25:28] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[19:25:28] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[19:25:28] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[19:25:28] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[19:25:28] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[19:25:28] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[19:25:28] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[19:25:28] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[19:25:28] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[19:25:28] AnnotationBinder - Binding entity from annotated class: com.monk.sbbook.entity.LoginTicket
[19:25:28] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[19:25:28] EntityBinder - Import with entity name LoginTicket
[19:25:28] EntityBinder - Bind entity com.monk.sbbook.entity.LoginTicket on table login_ticket
[19:25:28] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_userid, insertable=true, updatable=true, unique=false}
[19:25:28] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[19:25:28] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:userId]
[19:25:28] SimpleValueBinder - building SimpleValue for userId
[19:25:28] PropertyBinder - Building property userId
[19:25:28] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_expired, insertable=true, updatable=true, unique=false}
[19:25:28] PropertyBinder - MetadataSourceProcessor property expired with lazy=false
[19:25:28] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:expired]
[19:25:28] SimpleValueBinder - building SimpleValue for expired
[19:25:28] PropertyBinder - Building property expired
[19:25:28] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_status, insertable=true, updatable=true, unique=false}
[19:25:28] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[19:25:28] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:status]
[19:25:28] SimpleValueBinder - building SimpleValue for status
[19:25:28] PropertyBinder - Building property status
[19:25:28] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_ticket, insertable=true, updatable=true, unique=false}
[19:25:28] PropertyBinder - MetadataSourceProcessor property ticket with lazy=false
[19:25:28] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:ticket]
[19:25:28] SimpleValueBinder - building SimpleValue for ticket
[19:25:28] PropertyBinder - Building property ticket
[19:25:28] AnnotationBinder - Binding entity from annotated class: com.monk.sbbook.entity.User
[19:25:28] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[19:25:28] EntityBinder - Import with entity name User
[19:25:28] EntityBinder - Bind entity com.monk.sbbook.entity.User on table user
[19:25:28] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_id, insertable=true, updatable=true, unique=false}
[19:25:28] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[19:25:28] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:id]
[19:25:28] SimpleValueBinder - building SimpleValue for id
[19:25:28] PropertyBinder - Building property id
[19:25:28] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_email, insertable=true, updatable=true, unique=false}
[19:25:28] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[19:25:28] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:email]
[19:25:28] SimpleValueBinder - building SimpleValue for email
[19:25:28] PropertyBinder - Building property email
[19:25:28] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_head_url, insertable=true, updatable=true, unique=false}
[19:25:28] PropertyBinder - MetadataSourceProcessor property headUrl with lazy=false
[19:25:28] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:headUrl]
[19:25:28] SimpleValueBinder - building SimpleValue for headUrl
[19:25:28] PropertyBinder - Building property headUrl
[19:25:28] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_mobile, insertable=true, updatable=true, unique=false}
[19:25:28] PropertyBinder - MetadataSourceProcessor property mobile with lazy=false
[19:25:28] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:mobile]
[19:25:28] SimpleValueBinder - building SimpleValue for mobile
[19:25:28] PropertyBinder - Building property mobile
[19:25:28] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_password, insertable=true, updatable=true, unique=false}
[19:25:28] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[19:25:28] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:password]
[19:25:28] SimpleValueBinder - building SimpleValue for password
[19:25:28] PropertyBinder - Building property password
[19:25:28] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_role, insertable=true, updatable=true, unique=false}
[19:25:28] PropertyBinder - MetadataSourceProcessor property role with lazy=false
[19:25:28] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:role]
[19:25:28] SimpleValueBinder - building SimpleValue for role
[19:25:28] PropertyBinder - Building property role
[19:25:28] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_salt, insertable=true, updatable=true, unique=false}
[19:25:28] PropertyBinder - MetadataSourceProcessor property salt with lazy=false
[19:25:28] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:salt]
[19:25:28] SimpleValueBinder - building SimpleValue for salt
[19:25:28] PropertyBinder - Building property salt
[19:25:28] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_username, insertable=true, updatable=true, unique=true}
[19:25:28] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[19:25:28] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:username]
[19:25:28] SimpleValueBinder - building SimpleValue for username
[19:25:28] PropertyBinder - Building property username
[19:25:28] SimpleValueBinder - Starting fillSimpleValue for userId
[19:25:28] SimpleValueBinder - Starting fillSimpleValue for expired
[19:25:28] SimpleValueBinder - Starting fillSimpleValue for status
[19:25:28] SimpleValueBinder - Starting fillSimpleValue for ticket
[19:25:28] SimpleValueBinder - Starting fillSimpleValue for id
[19:25:28] SimpleValueBinder - Starting fillSimpleValue for email
[19:25:28] SimpleValueBinder - Starting fillSimpleValue for headUrl
[19:25:28] SimpleValueBinder - Starting fillSimpleValue for mobile
[19:25:28] SimpleValueBinder - Starting fillSimpleValue for password
[19:25:28] SimpleValueBinder - Starting fillSimpleValue for role
[19:25:28] SimpleValueBinder - Starting fillSimpleValue for salt
[19:25:28] SimpleValueBinder - Starting fillSimpleValue for username
[19:25:28] PrimaryKey - Forcing column [t_userid] to be non-null as it is part of the primary key for table [login_ticket]
[19:25:28] PrimaryKey - Forcing column [t_id] to be non-null as it is part of the primary key for table [user]
[19:25:28] SessionFactoryImpl - Building session factory
[19:25:28] Settings - SessionFactory name : null
[19:25:28] Settings - Automatic flush during beforeCompletion(): enabled
[19:25:28] Settings - Automatic session close at end of transaction: disabled
[19:25:28] Settings - Statistics: disabled
[19:25:28] Settings - Deleted entity synthetic identifier rollback: disabled
[19:25:28] Settings - Default entity-mode: pojo
[19:25:28] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[19:25:28] Settings - Allow initialization of lazy state outside session : disabled
[19:25:28] Settings - Using BatchFetchStyle : LEGACY
[19:25:28] Settings - Default batch fetch size: -1
[19:25:28] Settings - Maximum outer join fetch depth: 2
[19:25:28] Settings - Default null ordering: NONE
[19:25:28] Settings - Order SQL updates by primary key: disabled
[19:25:28] Settings - Order SQL inserts for batching: disabled
[19:25:28] Settings - multi-tenancy strategy : NONE
[19:25:28] Settings - JTA Track by Thread: enabled
[19:25:28] Settings - Query language substitutions: {}
[19:25:28] Settings - JPA query language strict compliance: disabled
[19:25:28] Settings - Named query checking : enabled
[19:25:28] Settings - Second-level cache: enabled
[19:25:28] Settings - Second-level query cache: disabled
[19:25:28] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3c375a8a
[19:25:28] Settings - Second-level cache region prefix: null
[19:25:28] Settings - Optimize second-level cache for minimal puts: disabled
[19:25:28] Settings - Structured second-level cache entries: disabled
[19:25:28] Settings - Second-level cache direct-reference entries: disabled
[19:25:28] Settings - Automatic eviction of collection cache: disabled
[19:25:28] Settings - JDBC batch size: 15
[19:25:28] Settings - JDBC batch updates for versioned data: enabled
[19:25:28] Settings - Scrollable result sets: enabled
[19:25:28] Settings - Wrap result sets: disabled
[19:25:28] Settings - JDBC3 getGeneratedKeys(): enabled
[19:25:28] Settings - JDBC result set fetch size: null
[19:25:28] Settings - Connection release mode: ON_CLOSE
[19:25:28] Settings - Generate SQL with comments: disabled
[19:25:28] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[19:25:28] SessionFactoryImpl - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, com.sun.management.jmxremote.authenticate=false, java.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/tools.jar:/Users/wengjf/Server/SpringMVC/sb-book/target/classes:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.0.1.RELEASE/spring-boot-starter-web-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.0.1.RELEASE/spring-boot-starter-json-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.5/jackson-databind-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.5/jackson-core-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.9.5/jackson-datatype-jdk8-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.9.5/jackson-datatype-jsr310-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.9.5/jackson-module-parameter-names-2.9.5.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.0.1.RELEASE/spring-boot-starter-tomcat-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/8.5.29/tomcat-embed-websocket-8.5.29.jar:/Users/wengjf/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.9.Final/hibernate-validator-6.0.9.Final.jar:/Users/wengjf/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/Users/wengjf/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/wengjf/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/wengjf/.m2/repository/org/springframework/spring-web/5.0.5.RELEASE/spring-web-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-beans/5.0.5.RELEASE/spring-beans-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-webmvc/5.0.5.RELEASE/spring-webmvc-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-aop/5.0.5.RELEASE/spring-aop-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-expression/5.0.5.RELEASE/spring-expression-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/Users/wengjf/.m2/repository/org/springframework/spring-core/5.0.5.RELEASE/spring-core-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-jcl/5.0.5.RELEASE/spring-jcl-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter/2.0.1.RELEASE/spring-boot-starter-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot/2.0.1.RELEASE/spring-boot-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.0.1.RELEASE/spring-boot-autoconfigure-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:/Users/wengjf/.m2/repository/org/yaml/snakeyaml/1.19/snakeyaml-1.19.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-log4j/1.3.8.RELEASE/spring-boot-starter-log4j-1.3.8.RELEASE.jar:/Users/wengjf/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar:/Users/wengjf/.m2/repository/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar:/Users/wengjf/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/Users/wengjf/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-devtools/2.0.1.RELEASE/spring-boot-devtools-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.29/tomcat-embed-jasper-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.29/tomcat-embed-core-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.29/tomcat-annotations-api-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.29/tomcat-embed-el-8.5.29.jar:/Users/wengjf/.m2/repository/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:/Users/wengjf/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/Users/wengjf/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/Users/wengjf/.m2/repository/mysql/mysql-connector-java/5.1.46/mysql-connector-java-5.1.46.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.0.1.RELEASE/spring-boot-starter-data-jpa-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.0.1.RELEASE/spring-boot-starter-aop-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/aspectj/aspectjweaver/1.8.13/aspectjweaver-1.8.13.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.0.1.RELEASE/spring-boot-starter-jdbc-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/com/zaxxer/HikariCP/2.7.8/HikariCP-2.7.8.jar:/Users/wengjf/.m2/repository/org/springframework/spring-jdbc/5.0.5.RELEASE/spring-jdbc-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/hibernate/hibernate-core/5.2.16.Final/hibernate-core-5.2.16.Final.jar:/Users/wengjf/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/wengjf/.m2/repository/org/javassist/javassist/3.22.0-GA/javassist-3.22.0-GA.jar:/Users/wengjf/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/wengjf/.m2/repository/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/Users/wengjf/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/wengjf/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/wengjf/.m2/repository/javax/transaction/javax.transaction-api/1.2/javax.transaction-api-1.2.jar:/Users/wengjf/.m2/repository/org/springframework/data/spring-data-jpa/2.0.6.RELEASE/spring-data-jpa-2.0.6.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/data/spring-data-commons/2.0.6.RELEASE/spring-data-commons-2.0.6.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-orm/5.0.5.RELEASE/spring-orm-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-aspects/5.0.5.RELEASE/spring-aspects-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-mail/2.0.1.RELEASE/spring-boot-starter-mail-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-context/5.0.5.RELEASE/spring-context-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-context-support/5.0.5.RELEASE/spring-context-support-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/com/sun/mail/javax.mail/1.6.1/javax.mail-1.6.1.jar:/Users/wengjf/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-quartz/2.0.1.RELEASE/spring-boot-starter-quartz-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-tx/5.0.5.RELEASE/spring-tx-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/quartz-scheduler/quartz/2.3.0/quartz-2.3.0.jar:/Users/wengjf/.m2/repository/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Macau, os.name=Mac OS X, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib, com.sun.management.jmxremote.ssl=false, spring.application.admin.enabled=true, sun.java.command=com.monk.sbbook.SbBookApplication, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@2d04d0e9, com.sun.management.jmxremote=, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=/Users/wengjf, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre, spring.output.ansi.enabled=always, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=1.8.0_171-b11, user.name=wengjf, path.separator=:, os.version=10.13.2, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/, com.zaxxer.hikari.pool_number=1, catalina.home=/private/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/tomcat.7517354513471682314.8080, com.sun.management.jmxremote.port=64836, java.version=1.8.0_171, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/Users/wengjf/Server/SpringMVC/sb-book, os.arch=x86_64, PID=2479, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, catalina.base=/private/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/tomcat.7517354513471682314.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@280ff915, java.library.path=/Users/wengjf/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.171-b11, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, hibernate.connection.datasource=HikariDataSource (HikariPool-1), sun.io.unicode.encoding=UnicodeBig, java.ext.dirs=/Users/wengjf/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, java.class.version=52.0, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16}
[19:25:28] TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[19:25:28] TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[19:25:28] TraversableResolvers - Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
[19:25:28] ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[19:25:28] ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[19:25:28] ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[19:25:28] ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[19:25:28] ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
[19:25:28] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[19:25:28] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[19:25:28] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[19:25:28] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[19:25:28] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[19:25:28] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:25:28] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:25:28] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:25:28] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:25:28] JaccIntegrator - Skipping JACC integration as it was not enabled
[19:25:28] CascadeStyles - External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[19:25:28] SessionFactoryImpl - Instantiated session factory
[19:25:28] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:25:28] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:25:28] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:25:28] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:25:28] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:25:28] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:25:28] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:25:28] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:25:28] AbstractEntityPersister - Static SQL for entity: com.monk.sbbook.entity.LoginTicket
[19:25:28] AbstractEntityPersister -  Version select: select t_userid from login_ticket where t_userid =?
[19:25:28] AbstractEntityPersister -  Snapshot select: select loginticke_.t_userid, loginticke_.t_expired as t_expire2_0_, loginticke_.t_status as t_status3_0_, loginticke_.t_ticket as t_ticket4_0_ from login_ticket loginticke_ where loginticke_.t_userid=?
[19:25:28] AbstractEntityPersister -  Insert 0: insert into login_ticket (t_expired, t_status, t_ticket, t_userid) values (?, ?, ?, ?)
[19:25:28] AbstractEntityPersister -  Update 0: update login_ticket set t_expired=?, t_status=?, t_ticket=? where t_userid=?
[19:25:28] AbstractEntityPersister -  Delete 0: delete from login_ticket where t_userid=?
[19:25:28] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@408ec1b0]
[19:25:28] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:28] MetamodelGraphWalker - Visiting attribute path : status
[19:25:28] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:28] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:28] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:28] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:28] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [NONE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:25:28] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bb8d757]
[19:25:28] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:28] MetamodelGraphWalker - Visiting attribute path : status
[19:25:28] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:28] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:28] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:28] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:28] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [READ]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:25:28] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@da5a466]
[19:25:28] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:28] MetamodelGraphWalker - Visiting attribute path : status
[19:25:28] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:28] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:28] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:28] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:28] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:25:28] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c7726a0]
[19:25:28] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:28] MetamodelGraphWalker - Visiting attribute path : status
[19:25:28] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:28] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:28] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:28] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:28] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE_NOWAIT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:25:28] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f4ae6cf]
[19:25:28] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:28] MetamodelGraphWalker - Visiting attribute path : status
[19:25:28] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:28] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:28] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:28] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:28] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE_SKIPLOCKED]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:25:28] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@593b2cdd]
[19:25:28] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:28] MetamodelGraphWalker - Visiting attribute path : status
[19:25:28] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:28] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:28] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:28] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:28] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [FORCE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:25:28] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@493554b8]
[19:25:28] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:28] MetamodelGraphWalker - Visiting attribute path : status
[19:25:28] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:28] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:28] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:28] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:28] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_READ]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? lock in share mode
[19:25:28] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@744bb33]
[19:25:28] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:28] MetamodelGraphWalker - Visiting attribute path : status
[19:25:28] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:28] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:28] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:28] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:28] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_WRITE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:25:28] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@789c77ad]
[19:25:28] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:28] MetamodelGraphWalker - Visiting attribute path : status
[19:25:28] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:28] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:28] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:28] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:28] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_FORCE_INCREMENT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:25:28] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14e2b5c6]
[19:25:28] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:28] MetamodelGraphWalker - Visiting attribute path : status
[19:25:28] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:28] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:28] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:28] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:28] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [OPTIMISTIC]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:25:28] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fd07f99]
[19:25:28] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:28] MetamodelGraphWalker - Visiting attribute path : status
[19:25:28] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:28] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:28] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:28] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:28] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [OPTIMISTIC_FORCE_INCREMENT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:25:28] Loader - Static select for action ACTION_MERGE on entity com.monk.sbbook.entity.LoginTicket: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:25:28] Loader - Static select for action ACTION_REFRESH on entity com.monk.sbbook.entity.LoginTicket: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:25:28] AbstractEntityPersister - Static SQL for entity: com.monk.sbbook.entity.User
[19:25:28] AbstractEntityPersister -  Version select: select t_id from user where t_id =?
[19:25:28] AbstractEntityPersister -  Snapshot select: select user_.t_id, user_.t_email as t_email2_1_, user_.t_head_url as t_head_u3_1_, user_.t_mobile as t_mobile4_1_, user_.t_password as t_passwo5_1_, user_.t_role as t_role6_1_, user_.t_salt as t_salt7_1_, user_.t_username as t_userna8_1_ from user user_ where user_.t_id=?
[19:25:28] AbstractEntityPersister -  Insert 0: insert into user (t_email, t_head_url, t_mobile, t_password, t_role, t_salt, t_username, t_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[19:25:28] AbstractEntityPersister -  Update 0: update user set t_email=?, t_head_url=?, t_mobile=?, t_password=?, t_role=?, t_salt=?, t_username=? where t_id=?
[19:25:28] AbstractEntityPersister -  Delete 0: delete from user where t_id=?
[19:25:28] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7613bf57]
[19:25:28] MetamodelGraphWalker - Visiting attribute path : email
[19:25:28] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:28] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:28] MetamodelGraphWalker - Visiting attribute path : password
[19:25:28] MetamodelGraphWalker - Visiting attribute path : role
[19:25:28] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:28] MetamodelGraphWalker - Visiting attribute path : username
[19:25:28] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:28] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:28] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:28] EntityLoader - Static select for entity com.monk.sbbook.entity.User [NONE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:25:28] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dbbf13d]
[19:25:28] MetamodelGraphWalker - Visiting attribute path : email
[19:25:28] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:28] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:28] MetamodelGraphWalker - Visiting attribute path : password
[19:25:28] MetamodelGraphWalker - Visiting attribute path : role
[19:25:28] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:28] MetamodelGraphWalker - Visiting attribute path : username
[19:25:28] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:28] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:28] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:28] EntityLoader - Static select for entity com.monk.sbbook.entity.User [READ]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:25:28] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35bbe22d]
[19:25:28] MetamodelGraphWalker - Visiting attribute path : email
[19:25:28] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:28] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:28] MetamodelGraphWalker - Visiting attribute path : password
[19:25:28] MetamodelGraphWalker - Visiting attribute path : role
[19:25:28] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:28] MetamodelGraphWalker - Visiting attribute path : username
[19:25:28] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:28] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:28] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:28] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:25:28] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@604a15ce]
[19:25:28] MetamodelGraphWalker - Visiting attribute path : email
[19:25:28] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:28] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:28] MetamodelGraphWalker - Visiting attribute path : password
[19:25:28] MetamodelGraphWalker - Visiting attribute path : role
[19:25:28] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:28] MetamodelGraphWalker - Visiting attribute path : username
[19:25:28] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:28] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:28] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:28] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE_NOWAIT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:25:28] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c98f4d6]
[19:25:28] MetamodelGraphWalker - Visiting attribute path : email
[19:25:28] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:28] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:28] MetamodelGraphWalker - Visiting attribute path : password
[19:25:28] MetamodelGraphWalker - Visiting attribute path : role
[19:25:28] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:28] MetamodelGraphWalker - Visiting attribute path : username
[19:25:28] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:28] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:28] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:28] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE_SKIPLOCKED]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:25:28] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f7dc82b]
[19:25:28] MetamodelGraphWalker - Visiting attribute path : email
[19:25:28] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:28] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:28] MetamodelGraphWalker - Visiting attribute path : password
[19:25:28] MetamodelGraphWalker - Visiting attribute path : role
[19:25:28] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:28] MetamodelGraphWalker - Visiting attribute path : username
[19:25:28] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:28] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:28] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:28] EntityLoader - Static select for entity com.monk.sbbook.entity.User [FORCE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:25:28] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79947067]
[19:25:28] MetamodelGraphWalker - Visiting attribute path : email
[19:25:28] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:28] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:28] MetamodelGraphWalker - Visiting attribute path : password
[19:25:28] MetamodelGraphWalker - Visiting attribute path : role
[19:25:28] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:28] MetamodelGraphWalker - Visiting attribute path : username
[19:25:28] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:28] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:28] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:28] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_READ]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? lock in share mode
[19:25:28] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21076cd6]
[19:25:28] MetamodelGraphWalker - Visiting attribute path : email
[19:25:28] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:28] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:28] MetamodelGraphWalker - Visiting attribute path : password
[19:25:28] MetamodelGraphWalker - Visiting attribute path : role
[19:25:28] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:28] MetamodelGraphWalker - Visiting attribute path : username
[19:25:28] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:28] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:28] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:28] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_WRITE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:25:28] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ad94080]
[19:25:28] MetamodelGraphWalker - Visiting attribute path : email
[19:25:28] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:28] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:28] MetamodelGraphWalker - Visiting attribute path : password
[19:25:28] MetamodelGraphWalker - Visiting attribute path : role
[19:25:28] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:28] MetamodelGraphWalker - Visiting attribute path : username
[19:25:28] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:28] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:28] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:28] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:25:28] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66dd6e2b]
[19:25:28] MetamodelGraphWalker - Visiting attribute path : email
[19:25:28] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:28] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:28] MetamodelGraphWalker - Visiting attribute path : password
[19:25:28] MetamodelGraphWalker - Visiting attribute path : role
[19:25:28] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:28] MetamodelGraphWalker - Visiting attribute path : username
[19:25:28] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:28] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:28] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:28] EntityLoader - Static select for entity com.monk.sbbook.entity.User [OPTIMISTIC]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:25:28] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5699b920]
[19:25:28] MetamodelGraphWalker - Visiting attribute path : email
[19:25:28] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:28] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:28] MetamodelGraphWalker - Visiting attribute path : password
[19:25:28] MetamodelGraphWalker - Visiting attribute path : role
[19:25:28] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:28] MetamodelGraphWalker - Visiting attribute path : username
[19:25:28] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:28] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:28] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:28] EntityLoader - Static select for entity com.monk.sbbook.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:25:28] Loader - Static select for action ACTION_MERGE on entity com.monk.sbbook.entity.User: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:25:28] Loader - Static select for action ACTION_REFRESH on entity com.monk.sbbook.entity.User: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:25:28] Table - No alter strings for table : hibernate_sequence
[19:25:28] Table - No alter strings for table : login_ticket
[19:25:28] Table - No alter strings for table : user
[19:25:28] NamedQueryRepository - Checking 0 named HQL queries
[19:25:28] NamedQueryRepository - Checking 0 named SQL queries
[19:25:28] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@796d7ade
[19:25:28] SessionFactoryRegistry - Registering SessionFactory: 48a86d16-2ecc-46bf-8072-161cf5116a0a (<unnamed>)
[19:25:28] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[19:25:28] StatisticsInitiator - Statistics initialized [enabled=false]
[19:25:28] QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2dfd1403
[19:25:28] QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
[19:25:28] QueryTranslatorImpl - parse() - HQL: update com.monk.sbbook.entity.LoginTicket u set u.status=?1 where u.ticket=?2
[19:25:28] ErrorCounter - throwQueryException() : no errors
[19:25:28] QueryTranslatorImpl - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  \-[IDENT] Node: 'monk'
    |     |  |  |  \-[IDENT] Node: 'sbbook'
    |     |  |  \-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'LoginTicket'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'status'
    |     \-[PARAM] Node: '?'
    |        \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'ticket'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '2'

[19:25:29] HqlSqlBaseWalker - update << begin [level=1, statement=update]
[19:25:29] FromElement - FromClause{level=1} : com.monk.sbbook.entity.LoginTicket (u) -> loginticke0_
[19:25:29] FromReferenceNode - Resolved : u -> t_userid
[19:25:29] DotNode - getDataType() : status -> org.hibernate.type.IntegerType@26d745eb
[19:25:29] FromReferenceNode - Resolved : u.status -> t_status
[19:25:29] FromReferenceNode - Resolved : u -> t_userid
[19:25:29] DotNode - getDataType() : ticket -> org.hibernate.type.StringType@356ac94
[19:25:29] FromReferenceNode - Resolved : u.ticket -> t_ticket
[19:25:29] HqlSqlBaseWalker - update : finishing up [level=1, statement=update]
[19:25:29] HqlSqlBaseWalker - update >> end [level=1, statement=update]
[19:25:29] QueryTranslatorImpl - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (login_ticket)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[loginticke0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'login_ticket' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=login_ticket,tableAlias=loginticke0_,origin=null,columns={,className=com.monk.sbbook.entity.LoginTicket}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 't_status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=u.status,tableAlias=loginticke0_,className=com.monk.sbbook.entity.LoginTicket,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 't_userid' {alias=u, className=com.monk.sbbook.entity.LoginTicket, tableAlias=loginticke0_}
    |     |  \-[IDENT] IdentNode: 'status' {originalText=status}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@26d745eb}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 't_ticket' {propertyName=ticket,dereferenceType=PRIMITIVE,getPropertyPath=ticket,path=u.ticket,tableAlias=loginticke0_,className=com.monk.sbbook.entity.LoginTicket,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 't_userid' {alias=u, className=com.monk.sbbook.entity.LoginTicket, tableAlias=loginticke0_}
          |  \-[IDENT] IdentNode: 'ticket' {originalText=ticket}
          \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@356ac94}

[19:25:29] ErrorCounter - throwQueryException() : no errors
[19:25:29] ErrorCounter - throwQueryException() : no errors
[19:25:29] QueryTranslatorImpl - parse() - HQL: update com.monk.sbbook.entity.User u set u.username= ?1 where u.id= ?2
[19:25:29] ErrorCounter - throwQueryException() : no errors
[19:25:29] QueryTranslatorImpl - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  \-[IDENT] Node: 'monk'
    |     |  |  |  \-[IDENT] Node: 'sbbook'
    |     |  |  \-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'username'
    |     \-[PARAM] Node: '?'
    |        \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '2'

[19:25:29] HqlSqlBaseWalker - update << begin [level=1, statement=update]
[19:25:29] FromElement - FromClause{level=1} : com.monk.sbbook.entity.User (u) -> user0_
[19:25:29] FromReferenceNode - Resolved : u -> t_id
[19:25:29] DotNode - getDataType() : username -> org.hibernate.type.StringType@356ac94
[19:25:29] FromReferenceNode - Resolved : u.username -> t_username
[19:25:29] FromReferenceNode - Resolved : u -> t_id
[19:25:29] DotNode - getDataType() : id -> org.hibernate.type.LongType@1daf15bd
[19:25:29] FromReferenceNode - Resolved : u.id -> t_id
[19:25:29] HqlSqlBaseWalker - update : finishing up [level=1, statement=update]
[19:25:29] HqlSqlBaseWalker - update >> end [level=1, statement=update]
[19:25:29] QueryTranslatorImpl - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.monk.sbbook.entity.User}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 't_username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=com.monk.sbbook.entity.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 't_id' {alias=u, className=com.monk.sbbook.entity.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'username' {originalText=username}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@356ac94}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 't_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=com.monk.sbbook.entity.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 't_id' {alias=u, className=com.monk.sbbook.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.LongType@1daf15bd}

[19:25:29] ErrorCounter - throwQueryException() : no errors
[19:25:29] ErrorCounter - throwQueryException() : no errors
[19:25:29] SessionFactoryImpl - HHH000031: Closing
[19:25:29] CascadeStyles - External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
[19:25:29] AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[19:25:29] BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[19:25:29] HikariDataSource - HikariPool-1 - Shutdown initiated...
[19:25:29] HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[19:25:29] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@7d0a3b2c: (connection evicted)
[19:25:29] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@7b0485fc: (connection evicted)
[19:25:29] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@5006849b: (connection evicted)
[19:25:29] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@4b02efab: (connection evicted)
[19:25:29] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@67eebb22: (connection evicted)
[19:25:29] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@1c9143b4: (connection evicted)
[19:25:29] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@388fe374: (connection evicted)
[19:25:29] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@188b4fd5: (connection evicted)
[19:25:29] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@2e3cc5e9: (connection evicted)
[19:25:29] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@48ee6110: (connection evicted)
[19:25:29] HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[19:25:29] HikariDataSource - HikariPool-1 - Shutdown completed.
[19:25:37] logging - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[19:25:37] Version - HV000001: Hibernate Validator 6.0.9.Final
[19:25:37] TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[19:25:37] TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[19:25:37] TraversableResolvers - Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
[19:25:37] ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[19:25:37] ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[19:25:37] ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[19:25:37] ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[19:25:37] SbBookApplication - Starting SbBookApplication on wjfdeiMac.local with PID 2481 (/Users/wengjf/Server/SpringMVC/sb-book/target/classes started by wengjf in /Users/wengjf/Server/SpringMVC/sb-book)
[19:25:37] SbBookApplication - Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
[19:25:37] SbBookApplication - No active profile set, falling back to default profiles: default
[19:25:37] ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
[19:25:37] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[19:25:37] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[19:25:37] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[19:25:37] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[19:25:37] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[19:25:39] HikariConfig - Driver class com.mysql.jdbc.Driver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2fa732ca
[19:25:39] HikariConfig - HikariPool-1 - configuration:
[19:25:39] HikariConfig - allowPoolSuspension.............false
[19:25:39] HikariConfig - autoCommit......................true
[19:25:39] HikariConfig - catalog.........................none
[19:25:39] HikariConfig - connectionInitSql...............none
[19:25:39] HikariConfig - connectionTestQuery.............none
[19:25:39] HikariConfig - connectionTimeout...............30000
[19:25:39] HikariConfig - dataSource......................none
[19:25:39] HikariConfig - dataSourceClassName.............none
[19:25:39] HikariConfig - dataSourceJNDI..................none
[19:25:39] HikariConfig - dataSourceProperties............{password=<masked>}
[19:25:39] HikariConfig - driverClassName................."com.mysql.jdbc.Driver"
[19:25:39] HikariConfig - healthCheckProperties...........{}
[19:25:39] HikariConfig - healthCheckRegistry.............none
[19:25:39] HikariConfig - idleTimeout.....................600000
[19:25:39] HikariConfig - initializationFailFast..........true
[19:25:39] HikariConfig - initializationFailTimeout.......1
[19:25:39] HikariConfig - isolateInternalQueries..........false
[19:25:39] HikariConfig - jdbc4ConnectionTest.............false
[19:25:39] HikariConfig - jdbcUrl.........................jdbc:mysql://localhost:3306/sbBook
[19:25:39] HikariConfig - leakDetectionThreshold..........0
[19:25:39] HikariConfig - maxLifetime.....................1800000
[19:25:39] HikariConfig - maximumPoolSize.................10
[19:25:39] HikariConfig - metricRegistry..................none
[19:25:39] HikariConfig - metricsTrackerFactory...........none
[19:25:39] HikariConfig - minimumIdle.....................10
[19:25:39] HikariConfig - password........................<masked>
[19:25:39] HikariConfig - poolName........................"HikariPool-1"
[19:25:39] HikariConfig - readOnly........................false
[19:25:39] HikariConfig - registerMbeans..................false
[19:25:39] HikariConfig - scheduledExecutor...............none
[19:25:39] HikariConfig - scheduledExecutorService........internal
[19:25:39] HikariConfig - schema..........................none
[19:25:39] HikariConfig - threadFactory...................internal
[19:25:39] HikariConfig - transactionIsolation............default
[19:25:39] HikariConfig - username........................"root"
[19:25:39] HikariConfig - validationTimeout...............5000
[19:25:39] HikariDataSource - HikariPool-1 - Starting...
[19:25:39] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@59742159
[19:25:39] HikariDataSource - HikariPool-1 - Start completed.
[19:25:39] LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2fa732ca
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/wengjf/Server/SpringMVC/sb-book/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.monk.sbbook.entity.LoginTicket
		com.monk.sbbook.entity.User]
	Mapping files names []
	Properties []
[19:25:39] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[19:25:39] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[19:25:39] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[19:25:39] IntegratorServiceImpl - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[19:25:39] Version - HHH000412: Hibernate Core {5.2.16.Final}
[19:25:39] Environment - HHH000206: hibernate.properties not found
[19:25:39] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[19:25:39] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[19:25:39] Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[19:25:39] HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
[19:25:39] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@1201bbec
[19:25:39] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@79df1d03
[19:25:39] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@62db973e
[19:25:39] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@59f8fc64
[19:25:39] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@70b5edce
[19:25:39] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@70b5edce
[19:25:39] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@70b5edce
[19:25:39] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@19f3dc32
[19:25:39] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3df2c717
[19:25:39] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3abf0bc
[19:25:39] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1c10e96
[19:25:39] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@26d596a1
[19:25:39] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@26d596a1
[19:25:39] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@26d596a1
[19:25:39] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@18930f2d
[19:25:39] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@18930f2d
[19:25:39] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@18930f2d
[19:25:39] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@18e0c298
[19:25:39] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@18e0c298
[19:25:39] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18e0c298
[19:25:39] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@6fec3f82
[19:25:39] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@67363894
[19:25:39] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@67363894
[19:25:39] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@67363894
[19:25:39] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5ede257e
[19:25:39] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5ede257e
[19:25:39] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5ede257e
[19:25:39] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4e6297e4
[19:25:39] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4e6297e4
[19:25:39] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4e6297e4
[19:25:39] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7d5438d1
[19:25:39] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7d5438d1
[19:25:39] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7d5438d1
[19:25:39] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1bf8a76c
[19:25:39] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1bf8a76c
[19:25:39] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@8a335c2
[19:25:39] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@8a335c2
[19:25:39] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5b3e45ac
[19:25:39] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5b3e45ac
[19:25:39] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@452d5330
[19:25:39] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1a77fbcd
[19:25:39] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ca41f01
[19:25:39] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@42b851bc
[19:25:39] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@42b851bc
[19:25:39] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@a7b1474
[19:25:39] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@a7b1474
[19:25:39] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@21fde5ee
[19:25:39] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@21fde5ee
[19:25:40] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4e44aa12
[19:25:40] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4e44aa12
[19:25:40] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3c9ed5c
[19:25:40] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3c9ed5c
[19:25:40] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3a9cd1b6
[19:25:40] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3a9cd1b6
[19:25:40] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@39106585
[19:25:40] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@71957d0
[19:25:40] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@71957d0
[19:25:40] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f7b41ba
[19:25:40] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f7b41ba
[19:25:40] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@29bd345b
[19:25:40] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@29bd345b
[19:25:40] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7c1987a8
[19:25:40] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7c1987a8
[19:25:40] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1679d02e
[19:25:40] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1679d02e
[19:25:40] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@6d2e615d
[19:25:40] HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[19:25:40] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@355f562a
[19:25:40] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@355f562a
[19:25:40] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@355f562a
[19:25:40] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@115dc458
[19:25:40] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@562fec85
[19:25:40] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@562fec85
[19:25:40] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@562fec85
[19:25:40] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@db19cb3
[19:25:40] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@9ca8d4d
[19:25:40] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@9ca8d4d
[19:25:40] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3f348105
[19:25:40] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3f348105
[19:25:40] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@71243cc
[19:25:40] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@71243cc
[19:25:40] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5e35dcb
[19:25:40] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5e35dcb
[19:25:40] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4bac1961
[19:25:40] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4bac1961
[19:25:40] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7d7c6639
[19:25:40] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@17b7748c
[19:25:40] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@17b7748c
[19:25:40] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@17b7748c
[19:25:40] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6799abb3
[19:25:40] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6799abb3
[19:25:40] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6799abb3
[19:25:40] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@7fe6e8e8
[19:25:40] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@41f5bf93
[19:25:40] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2d8f4a83
[19:25:40] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2d8f4a83
[19:25:40] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2d8f4a83
[19:25:40] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@549901a8
[19:25:40] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@549901a8
[19:25:40] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@549901a8
[19:25:40] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@4664458a
[19:25:40] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@b5589b0
[19:25:40] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6726c1e1
[19:25:40] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6726c1e1
[19:25:40] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@221f88b
[19:25:40] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5663a633
[19:25:40] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5663a633
[19:25:40] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@765b53c7
[19:25:40] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@765b53c7
[19:25:40] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@30f35afd
[19:25:40] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@46eb05db
[19:25:40] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@456fec1d
[19:25:40] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@c3212de
[19:25:40] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@c3212de
[19:25:40] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7797003c
[19:25:40] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6baf58f2
[19:25:40] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@49728f7d
[19:25:40] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2ae4f5cd
[19:25:40] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@653d864d
[19:25:40] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74442ad0
[19:25:40] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@29104a42
[19:25:40] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@24579830
[19:25:40] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.22
      major : 5
      minor : 7
[19:25:40] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e )
      major : 5
      minor : 1
[19:25:40] JdbcEnvironmentInitiator - JDBC version : 4.0
[19:25:40] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[19:25:40] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[19:25:40] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[19:25:40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[19:25:40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[19:25:40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[19:25:40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[19:25:40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[19:25:40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[19:25:40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[19:25:40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[19:25:40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[19:25:40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[19:25:40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[19:25:40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[19:25:40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[19:25:40] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[19:25:40] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[19:25:40] AnnotationBinder - Binding entity from annotated class: com.monk.sbbook.entity.LoginTicket
[19:25:40] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[19:25:40] EntityBinder - Import with entity name LoginTicket
[19:25:40] EntityBinder - Bind entity com.monk.sbbook.entity.LoginTicket on table login_ticket
[19:25:40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_userid, insertable=true, updatable=true, unique=false}
[19:25:40] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[19:25:40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:userId]
[19:25:40] SimpleValueBinder - building SimpleValue for userId
[19:25:40] PropertyBinder - Building property userId
[19:25:40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_expired, insertable=true, updatable=true, unique=false}
[19:25:40] PropertyBinder - MetadataSourceProcessor property expired with lazy=false
[19:25:40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:expired]
[19:25:40] SimpleValueBinder - building SimpleValue for expired
[19:25:40] PropertyBinder - Building property expired
[19:25:40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_status, insertable=true, updatable=true, unique=false}
[19:25:40] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[19:25:40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:status]
[19:25:40] SimpleValueBinder - building SimpleValue for status
[19:25:40] PropertyBinder - Building property status
[19:25:40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_ticket, insertable=true, updatable=true, unique=false}
[19:25:40] PropertyBinder - MetadataSourceProcessor property ticket with lazy=false
[19:25:40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:ticket]
[19:25:40] SimpleValueBinder - building SimpleValue for ticket
[19:25:40] PropertyBinder - Building property ticket
[19:25:40] AnnotationBinder - Binding entity from annotated class: com.monk.sbbook.entity.User
[19:25:40] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[19:25:40] EntityBinder - Import with entity name User
[19:25:40] EntityBinder - Bind entity com.monk.sbbook.entity.User on table user
[19:25:40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_id, insertable=true, updatable=true, unique=false}
[19:25:40] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[19:25:40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:id]
[19:25:40] SimpleValueBinder - building SimpleValue for id
[19:25:40] PropertyBinder - Building property id
[19:25:40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_email, insertable=true, updatable=true, unique=false}
[19:25:40] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[19:25:40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:email]
[19:25:40] SimpleValueBinder - building SimpleValue for email
[19:25:40] PropertyBinder - Building property email
[19:25:40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_head_url, insertable=true, updatable=true, unique=false}
[19:25:40] PropertyBinder - MetadataSourceProcessor property headUrl with lazy=false
[19:25:40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:headUrl]
[19:25:40] SimpleValueBinder - building SimpleValue for headUrl
[19:25:40] PropertyBinder - Building property headUrl
[19:25:40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_mobile, insertable=true, updatable=true, unique=false}
[19:25:40] PropertyBinder - MetadataSourceProcessor property mobile with lazy=false
[19:25:40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:mobile]
[19:25:40] SimpleValueBinder - building SimpleValue for mobile
[19:25:40] PropertyBinder - Building property mobile
[19:25:40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_password, insertable=true, updatable=true, unique=false}
[19:25:40] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[19:25:40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:password]
[19:25:40] SimpleValueBinder - building SimpleValue for password
[19:25:40] PropertyBinder - Building property password
[19:25:40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_role, insertable=true, updatable=true, unique=false}
[19:25:40] PropertyBinder - MetadataSourceProcessor property role with lazy=false
[19:25:40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:role]
[19:25:40] SimpleValueBinder - building SimpleValue for role
[19:25:40] PropertyBinder - Building property role
[19:25:40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_salt, insertable=true, updatable=true, unique=false}
[19:25:40] PropertyBinder - MetadataSourceProcessor property salt with lazy=false
[19:25:40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:salt]
[19:25:40] SimpleValueBinder - building SimpleValue for salt
[19:25:40] PropertyBinder - Building property salt
[19:25:40] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_username, insertable=true, updatable=true, unique=true}
[19:25:40] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[19:25:40] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:username]
[19:25:40] SimpleValueBinder - building SimpleValue for username
[19:25:40] PropertyBinder - Building property username
[19:25:40] SimpleValueBinder - Starting fillSimpleValue for userId
[19:25:40] SimpleValueBinder - Starting fillSimpleValue for expired
[19:25:40] SimpleValueBinder - Starting fillSimpleValue for status
[19:25:40] SimpleValueBinder - Starting fillSimpleValue for ticket
[19:25:40] SimpleValueBinder - Starting fillSimpleValue for id
[19:25:40] SimpleValueBinder - Starting fillSimpleValue for email
[19:25:40] SimpleValueBinder - Starting fillSimpleValue for headUrl
[19:25:40] SimpleValueBinder - Starting fillSimpleValue for mobile
[19:25:40] SimpleValueBinder - Starting fillSimpleValue for password
[19:25:40] SimpleValueBinder - Starting fillSimpleValue for role
[19:25:40] SimpleValueBinder - Starting fillSimpleValue for salt
[19:25:40] SimpleValueBinder - Starting fillSimpleValue for username
[19:25:40] PrimaryKey - Forcing column [t_userid] to be non-null as it is part of the primary key for table [login_ticket]
[19:25:40] PrimaryKey - Forcing column [t_id] to be non-null as it is part of the primary key for table [user]
[19:25:40] SessionFactoryImpl - Building session factory
[19:25:40] Settings - SessionFactory name : null
[19:25:40] Settings - Automatic flush during beforeCompletion(): enabled
[19:25:40] Settings - Automatic session close at end of transaction: disabled
[19:25:40] Settings - Statistics: disabled
[19:25:40] Settings - Deleted entity synthetic identifier rollback: disabled
[19:25:40] Settings - Default entity-mode: pojo
[19:25:40] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[19:25:40] Settings - Allow initialization of lazy state outside session : disabled
[19:25:40] Settings - Using BatchFetchStyle : LEGACY
[19:25:40] Settings - Default batch fetch size: -1
[19:25:40] Settings - Maximum outer join fetch depth: 2
[19:25:40] Settings - Default null ordering: NONE
[19:25:40] Settings - Order SQL updates by primary key: disabled
[19:25:40] Settings - Order SQL inserts for batching: disabled
[19:25:40] Settings - multi-tenancy strategy : NONE
[19:25:40] Settings - JTA Track by Thread: enabled
[19:25:40] Settings - Query language substitutions: {}
[19:25:40] Settings - JPA query language strict compliance: disabled
[19:25:40] Settings - Named query checking : enabled
[19:25:40] Settings - Second-level cache: enabled
[19:25:40] Settings - Second-level query cache: disabled
[19:25:40] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@29c64c44
[19:25:40] Settings - Second-level cache region prefix: null
[19:25:40] Settings - Optimize second-level cache for minimal puts: disabled
[19:25:40] Settings - Structured second-level cache entries: disabled
[19:25:40] Settings - Second-level cache direct-reference entries: disabled
[19:25:40] Settings - Automatic eviction of collection cache: disabled
[19:25:40] Settings - JDBC batch size: 15
[19:25:40] Settings - JDBC batch updates for versioned data: enabled
[19:25:40] Settings - Scrollable result sets: enabled
[19:25:40] Settings - Wrap result sets: disabled
[19:25:40] Settings - JDBC3 getGeneratedKeys(): enabled
[19:25:40] Settings - JDBC result set fetch size: null
[19:25:40] Settings - Connection release mode: ON_CLOSE
[19:25:40] Settings - Generate SQL with comments: disabled
[19:25:40] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[19:25:40] SessionFactoryImpl - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, com.sun.management.jmxremote.authenticate=false, java.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/tools.jar:/Users/wengjf/Server/SpringMVC/sb-book/target/classes:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.0.1.RELEASE/spring-boot-starter-web-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.0.1.RELEASE/spring-boot-starter-json-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.5/jackson-databind-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.5/jackson-core-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.9.5/jackson-datatype-jdk8-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.9.5/jackson-datatype-jsr310-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.9.5/jackson-module-parameter-names-2.9.5.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.0.1.RELEASE/spring-boot-starter-tomcat-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/8.5.29/tomcat-embed-websocket-8.5.29.jar:/Users/wengjf/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.9.Final/hibernate-validator-6.0.9.Final.jar:/Users/wengjf/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/Users/wengjf/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/wengjf/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/wengjf/.m2/repository/org/springframework/spring-web/5.0.5.RELEASE/spring-web-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-beans/5.0.5.RELEASE/spring-beans-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-webmvc/5.0.5.RELEASE/spring-webmvc-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-aop/5.0.5.RELEASE/spring-aop-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-expression/5.0.5.RELEASE/spring-expression-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/Users/wengjf/.m2/repository/org/springframework/spring-core/5.0.5.RELEASE/spring-core-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-jcl/5.0.5.RELEASE/spring-jcl-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter/2.0.1.RELEASE/spring-boot-starter-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot/2.0.1.RELEASE/spring-boot-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.0.1.RELEASE/spring-boot-autoconfigure-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:/Users/wengjf/.m2/repository/org/yaml/snakeyaml/1.19/snakeyaml-1.19.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-log4j/1.3.8.RELEASE/spring-boot-starter-log4j-1.3.8.RELEASE.jar:/Users/wengjf/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar:/Users/wengjf/.m2/repository/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar:/Users/wengjf/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/Users/wengjf/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-devtools/2.0.1.RELEASE/spring-boot-devtools-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.29/tomcat-embed-jasper-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.29/tomcat-embed-core-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.29/tomcat-annotations-api-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.29/tomcat-embed-el-8.5.29.jar:/Users/wengjf/.m2/repository/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:/Users/wengjf/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/Users/wengjf/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/Users/wengjf/.m2/repository/mysql/mysql-connector-java/5.1.46/mysql-connector-java-5.1.46.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.0.1.RELEASE/spring-boot-starter-data-jpa-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.0.1.RELEASE/spring-boot-starter-aop-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/aspectj/aspectjweaver/1.8.13/aspectjweaver-1.8.13.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.0.1.RELEASE/spring-boot-starter-jdbc-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/com/zaxxer/HikariCP/2.7.8/HikariCP-2.7.8.jar:/Users/wengjf/.m2/repository/org/springframework/spring-jdbc/5.0.5.RELEASE/spring-jdbc-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/hibernate/hibernate-core/5.2.16.Final/hibernate-core-5.2.16.Final.jar:/Users/wengjf/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/wengjf/.m2/repository/org/javassist/javassist/3.22.0-GA/javassist-3.22.0-GA.jar:/Users/wengjf/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/wengjf/.m2/repository/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/Users/wengjf/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/wengjf/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/wengjf/.m2/repository/javax/transaction/javax.transaction-api/1.2/javax.transaction-api-1.2.jar:/Users/wengjf/.m2/repository/org/springframework/data/spring-data-jpa/2.0.6.RELEASE/spring-data-jpa-2.0.6.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/data/spring-data-commons/2.0.6.RELEASE/spring-data-commons-2.0.6.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-orm/5.0.5.RELEASE/spring-orm-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-aspects/5.0.5.RELEASE/spring-aspects-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-mail/2.0.1.RELEASE/spring-boot-starter-mail-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-context/5.0.5.RELEASE/spring-context-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-context-support/5.0.5.RELEASE/spring-context-support-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/com/sun/mail/javax.mail/1.6.1/javax.mail-1.6.1.jar:/Users/wengjf/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-quartz/2.0.1.RELEASE/spring-boot-starter-quartz-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-tx/5.0.5.RELEASE/spring-tx-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/quartz-scheduler/quartz/2.3.0/quartz-2.3.0.jar:/Users/wengjf/.m2/repository/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Macau, os.name=Mac OS X, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib, com.sun.management.jmxremote.ssl=false, spring.application.admin.enabled=true, sun.java.command=com.monk.sbbook.SbBookApplication, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1cf719df, com.sun.management.jmxremote=, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=/Users/wengjf, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre, spring.output.ansi.enabled=always, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=1.8.0_171-b11, user.name=wengjf, path.separator=:, os.version=10.13.2, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/, com.zaxxer.hikari.pool_number=1, catalina.home=/private/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/tomcat.4094565224881980675.8080, com.sun.management.jmxremote.port=64856, java.version=1.8.0_171, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/Users/wengjf/Server/SpringMVC/sb-book, os.arch=x86_64, PID=2481, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, catalina.base=/private/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/tomcat.4094565224881980675.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3bc05f4, java.library.path=/Users/wengjf/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.171-b11, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, hibernate.connection.datasource=HikariDataSource (HikariPool-1), sun.io.unicode.encoding=UnicodeBig, java.ext.dirs=/Users/wengjf/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, java.class.version=52.0, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16}
[19:25:40] TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[19:25:40] TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[19:25:40] TraversableResolvers - Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
[19:25:40] ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[19:25:40] ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[19:25:40] ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[19:25:40] ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[19:25:40] ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
[19:25:40] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[19:25:40] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[19:25:40] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[19:25:40] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[19:25:40] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[19:25:40] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:25:40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:25:40] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:25:40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:25:40] JaccIntegrator - Skipping JACC integration as it was not enabled
[19:25:40] CascadeStyles - External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[19:25:40] SessionFactoryImpl - Instantiated session factory
[19:25:40] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:25:40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:25:40] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:25:40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:25:40] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:25:40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:25:40] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:25:40] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:25:40] AbstractEntityPersister - Static SQL for entity: com.monk.sbbook.entity.LoginTicket
[19:25:40] AbstractEntityPersister -  Version select: select t_userid from login_ticket where t_userid =?
[19:25:40] AbstractEntityPersister -  Snapshot select: select loginticke_.t_userid, loginticke_.t_expired as t_expire2_0_, loginticke_.t_status as t_status3_0_, loginticke_.t_ticket as t_ticket4_0_ from login_ticket loginticke_ where loginticke_.t_userid=?
[19:25:40] AbstractEntityPersister -  Insert 0: insert into login_ticket (t_expired, t_status, t_ticket, t_userid) values (?, ?, ?, ?)
[19:25:40] AbstractEntityPersister -  Update 0: update login_ticket set t_expired=?, t_status=?, t_ticket=? where t_userid=?
[19:25:40] AbstractEntityPersister -  Delete 0: delete from login_ticket where t_userid=?
[19:25:40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38c58bd5]
[19:25:40] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:40] MetamodelGraphWalker - Visiting attribute path : status
[19:25:40] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:40] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:40] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [NONE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:25:40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fada3cb]
[19:25:40] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:40] MetamodelGraphWalker - Visiting attribute path : status
[19:25:40] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:40] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:40] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [READ]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:25:40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c7818ea]
[19:25:40] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:40] MetamodelGraphWalker - Visiting attribute path : status
[19:25:40] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:40] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:40] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:25:40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59ac62ea]
[19:25:40] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:40] MetamodelGraphWalker - Visiting attribute path : status
[19:25:40] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:40] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:40] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE_NOWAIT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:25:40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14069f5a]
[19:25:40] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:40] MetamodelGraphWalker - Visiting attribute path : status
[19:25:40] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:40] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:40] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE_SKIPLOCKED]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:25:40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c855932]
[19:25:40] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:40] MetamodelGraphWalker - Visiting attribute path : status
[19:25:40] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:40] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:40] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [FORCE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:25:40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f202d1d]
[19:25:40] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:40] MetamodelGraphWalker - Visiting attribute path : status
[19:25:40] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:40] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:40] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_READ]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? lock in share mode
[19:25:40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@395f2948]
[19:25:40] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:40] MetamodelGraphWalker - Visiting attribute path : status
[19:25:40] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:40] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:40] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_WRITE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:25:40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7cf1bdb9]
[19:25:40] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:40] MetamodelGraphWalker - Visiting attribute path : status
[19:25:40] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:40] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:40] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_FORCE_INCREMENT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:25:40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e69bf33]
[19:25:40] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:40] MetamodelGraphWalker - Visiting attribute path : status
[19:25:40] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:40] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:40] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [OPTIMISTIC]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:25:40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4090fbf]
[19:25:40] MetamodelGraphWalker - Visiting attribute path : expired
[19:25:40] MetamodelGraphWalker - Visiting attribute path : status
[19:25:40] MetamodelGraphWalker - Visiting attribute path : ticket
[19:25:40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:40] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:25:40] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [OPTIMISTIC_FORCE_INCREMENT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:25:40] Loader - Static select for action ACTION_MERGE on entity com.monk.sbbook.entity.LoginTicket: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:25:40] Loader - Static select for action ACTION_REFRESH on entity com.monk.sbbook.entity.LoginTicket: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:25:40] AbstractEntityPersister - Static SQL for entity: com.monk.sbbook.entity.User
[19:25:40] AbstractEntityPersister -  Version select: select t_id from user where t_id =?
[19:25:40] AbstractEntityPersister -  Snapshot select: select user_.t_id, user_.t_email as t_email2_1_, user_.t_head_url as t_head_u3_1_, user_.t_mobile as t_mobile4_1_, user_.t_password as t_passwo5_1_, user_.t_role as t_role6_1_, user_.t_salt as t_salt7_1_, user_.t_username as t_userna8_1_ from user user_ where user_.t_id=?
[19:25:40] AbstractEntityPersister -  Insert 0: insert into user (t_email, t_head_url, t_mobile, t_password, t_role, t_salt, t_username, t_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[19:25:40] AbstractEntityPersister -  Update 0: update user set t_email=?, t_head_url=?, t_mobile=?, t_password=?, t_role=?, t_salt=?, t_username=? where t_id=?
[19:25:40] AbstractEntityPersister -  Delete 0: delete from user where t_id=?
[19:25:40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@160117a8]
[19:25:40] MetamodelGraphWalker - Visiting attribute path : email
[19:25:40] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:40] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:40] MetamodelGraphWalker - Visiting attribute path : password
[19:25:40] MetamodelGraphWalker - Visiting attribute path : role
[19:25:40] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:40] MetamodelGraphWalker - Visiting attribute path : username
[19:25:40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:40] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:40] EntityLoader - Static select for entity com.monk.sbbook.entity.User [NONE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:25:40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78a71f76]
[19:25:40] MetamodelGraphWalker - Visiting attribute path : email
[19:25:40] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:40] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:40] MetamodelGraphWalker - Visiting attribute path : password
[19:25:40] MetamodelGraphWalker - Visiting attribute path : role
[19:25:40] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:40] MetamodelGraphWalker - Visiting attribute path : username
[19:25:40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:40] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:40] EntityLoader - Static select for entity com.monk.sbbook.entity.User [READ]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:25:40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27b5315f]
[19:25:40] MetamodelGraphWalker - Visiting attribute path : email
[19:25:40] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:40] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:40] MetamodelGraphWalker - Visiting attribute path : password
[19:25:40] MetamodelGraphWalker - Visiting attribute path : role
[19:25:40] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:40] MetamodelGraphWalker - Visiting attribute path : username
[19:25:40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:40] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:40] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:25:40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14bde444]
[19:25:40] MetamodelGraphWalker - Visiting attribute path : email
[19:25:40] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:40] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:40] MetamodelGraphWalker - Visiting attribute path : password
[19:25:40] MetamodelGraphWalker - Visiting attribute path : role
[19:25:40] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:40] MetamodelGraphWalker - Visiting attribute path : username
[19:25:40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:40] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:40] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE_NOWAIT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:25:40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d7034f2]
[19:25:40] MetamodelGraphWalker - Visiting attribute path : email
[19:25:40] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:40] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:40] MetamodelGraphWalker - Visiting attribute path : password
[19:25:40] MetamodelGraphWalker - Visiting attribute path : role
[19:25:40] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:40] MetamodelGraphWalker - Visiting attribute path : username
[19:25:40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:40] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:40] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE_SKIPLOCKED]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:25:40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27dd0e40]
[19:25:40] MetamodelGraphWalker - Visiting attribute path : email
[19:25:40] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:40] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:40] MetamodelGraphWalker - Visiting attribute path : password
[19:25:40] MetamodelGraphWalker - Visiting attribute path : role
[19:25:40] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:40] MetamodelGraphWalker - Visiting attribute path : username
[19:25:40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:40] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:40] EntityLoader - Static select for entity com.monk.sbbook.entity.User [FORCE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:25:40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57c7e8b4]
[19:25:40] MetamodelGraphWalker - Visiting attribute path : email
[19:25:40] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:40] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:40] MetamodelGraphWalker - Visiting attribute path : password
[19:25:40] MetamodelGraphWalker - Visiting attribute path : role
[19:25:40] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:40] MetamodelGraphWalker - Visiting attribute path : username
[19:25:40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:40] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:40] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_READ]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? lock in share mode
[19:25:40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dd603e0]
[19:25:40] MetamodelGraphWalker - Visiting attribute path : email
[19:25:40] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:40] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:40] MetamodelGraphWalker - Visiting attribute path : password
[19:25:40] MetamodelGraphWalker - Visiting attribute path : role
[19:25:40] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:40] MetamodelGraphWalker - Visiting attribute path : username
[19:25:40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:40] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:40] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_WRITE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:25:40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ded00fa]
[19:25:40] MetamodelGraphWalker - Visiting attribute path : email
[19:25:40] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:40] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:40] MetamodelGraphWalker - Visiting attribute path : password
[19:25:40] MetamodelGraphWalker - Visiting attribute path : role
[19:25:40] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:40] MetamodelGraphWalker - Visiting attribute path : username
[19:25:40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:40] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:40] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:25:40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72f7fed]
[19:25:40] MetamodelGraphWalker - Visiting attribute path : email
[19:25:40] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:40] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:40] MetamodelGraphWalker - Visiting attribute path : password
[19:25:40] MetamodelGraphWalker - Visiting attribute path : role
[19:25:40] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:40] MetamodelGraphWalker - Visiting attribute path : username
[19:25:40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:40] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:40] EntityLoader - Static select for entity com.monk.sbbook.entity.User [OPTIMISTIC]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:25:40] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39094a62]
[19:25:40] MetamodelGraphWalker - Visiting attribute path : email
[19:25:40] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:25:40] MetamodelGraphWalker - Visiting attribute path : mobile
[19:25:40] MetamodelGraphWalker - Visiting attribute path : password
[19:25:40] MetamodelGraphWalker - Visiting attribute path : role
[19:25:40] MetamodelGraphWalker - Visiting attribute path : salt
[19:25:40] MetamodelGraphWalker - Visiting attribute path : username
[19:25:40] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:25:40] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:25:40] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:25:40] EntityLoader - Static select for entity com.monk.sbbook.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:25:40] Loader - Static select for action ACTION_MERGE on entity com.monk.sbbook.entity.User: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:25:40] Loader - Static select for action ACTION_REFRESH on entity com.monk.sbbook.entity.User: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:25:40] Table - No alter strings for table : hibernate_sequence
[19:25:40] Table - No alter strings for table : login_ticket
[19:25:40] Table - No alter strings for table : user
[19:25:40] NamedQueryRepository - Checking 0 named HQL queries
[19:25:40] NamedQueryRepository - Checking 0 named SQL queries
[19:25:40] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@664f06af
[19:25:40] SessionFactoryRegistry - Registering SessionFactory: e78d5578-9d59-4b9f-8110-dc2b77cbc674 (<unnamed>)
[19:25:40] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[19:25:40] StatisticsInitiator - Statistics initialized [enabled=false]
[19:25:40] QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5622fccb
[19:25:40] QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
[19:25:40] QueryTranslatorImpl - parse() - HQL: update com.monk.sbbook.entity.LoginTicket u set u.status=?1 where u.ticket=?2
[19:25:40] ErrorCounter - throwQueryException() : no errors
[19:25:40] QueryTranslatorImpl - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  \-[IDENT] Node: 'monk'
    |     |  |  |  \-[IDENT] Node: 'sbbook'
    |     |  |  \-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'LoginTicket'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'status'
    |     \-[PARAM] Node: '?'
    |        \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'ticket'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '2'

[19:25:40] HqlSqlBaseWalker - update << begin [level=1, statement=update]
[19:25:40] FromElement - FromClause{level=1} : com.monk.sbbook.entity.LoginTicket (u) -> loginticke0_
[19:25:40] FromReferenceNode - Resolved : u -> t_userid
[19:25:40] DotNode - getDataType() : status -> org.hibernate.type.IntegerType@67363894
[19:25:40] FromReferenceNode - Resolved : u.status -> t_status
[19:25:40] FromReferenceNode - Resolved : u -> t_userid
[19:25:40] DotNode - getDataType() : ticket -> org.hibernate.type.StringType@5b3e45ac
[19:25:40] FromReferenceNode - Resolved : u.ticket -> t_ticket
[19:25:40] HqlSqlBaseWalker - update : finishing up [level=1, statement=update]
[19:25:40] HqlSqlBaseWalker - update >> end [level=1, statement=update]
[19:25:40] QueryTranslatorImpl - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (login_ticket)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[loginticke0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'login_ticket' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=login_ticket,tableAlias=loginticke0_,origin=null,columns={,className=com.monk.sbbook.entity.LoginTicket}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 't_status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=u.status,tableAlias=loginticke0_,className=com.monk.sbbook.entity.LoginTicket,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 't_userid' {alias=u, className=com.monk.sbbook.entity.LoginTicket, tableAlias=loginticke0_}
    |     |  \-[IDENT] IdentNode: 'status' {originalText=status}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@67363894}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 't_ticket' {propertyName=ticket,dereferenceType=PRIMITIVE,getPropertyPath=ticket,path=u.ticket,tableAlias=loginticke0_,className=com.monk.sbbook.entity.LoginTicket,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 't_userid' {alias=u, className=com.monk.sbbook.entity.LoginTicket, tableAlias=loginticke0_}
          |  \-[IDENT] IdentNode: 'ticket' {originalText=ticket}
          \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@5b3e45ac}

[19:25:40] ErrorCounter - throwQueryException() : no errors
[19:25:40] ErrorCounter - throwQueryException() : no errors
[19:25:40] QueryTranslatorImpl - parse() - HQL: update com.monk.sbbook.entity.User u set u.username= ?1 where u.id= ?2
[19:25:40] ErrorCounter - throwQueryException() : no errors
[19:25:40] QueryTranslatorImpl - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  \-[IDENT] Node: 'monk'
    |     |  |  |  \-[IDENT] Node: 'sbbook'
    |     |  |  \-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'username'
    |     \-[PARAM] Node: '?'
    |        \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '2'

[19:25:40] HqlSqlBaseWalker - update << begin [level=1, statement=update]
[19:25:40] FromElement - FromClause{level=1} : com.monk.sbbook.entity.User (u) -> user0_
[19:25:40] FromReferenceNode - Resolved : u -> t_id
[19:25:40] DotNode - getDataType() : username -> org.hibernate.type.StringType@5b3e45ac
[19:25:40] FromReferenceNode - Resolved : u.username -> t_username
[19:25:40] FromReferenceNode - Resolved : u -> t_id
[19:25:40] DotNode - getDataType() : id -> org.hibernate.type.LongType@5ede257e
[19:25:40] FromReferenceNode - Resolved : u.id -> t_id
[19:25:40] HqlSqlBaseWalker - update : finishing up [level=1, statement=update]
[19:25:40] HqlSqlBaseWalker - update >> end [level=1, statement=update]
[19:25:40] QueryTranslatorImpl - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.monk.sbbook.entity.User}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 't_username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=com.monk.sbbook.entity.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 't_id' {alias=u, className=com.monk.sbbook.entity.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'username' {originalText=username}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@5b3e45ac}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 't_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=com.monk.sbbook.entity.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 't_id' {alias=u, className=com.monk.sbbook.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.LongType@5ede257e}

[19:25:40] ErrorCounter - throwQueryException() : no errors
[19:25:40] ErrorCounter - throwQueryException() : no errors
[19:25:40] SessionFactoryImpl - HHH000031: Closing
[19:25:40] CascadeStyles - External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
[19:25:40] AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[19:25:40] BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[19:25:40] HikariDataSource - HikariPool-1 - Shutdown initiated...
[19:25:40] HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[19:25:40] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@59742159: (connection evicted)
[19:25:40] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@1201bbec: (connection evicted)
[19:25:40] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@79df1d03: (connection evicted)
[19:25:40] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@62db973e: (connection evicted)
[19:25:40] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@59f8fc64: (connection evicted)
[19:25:40] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@19f3dc32: (connection evicted)
[19:25:40] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@6fec3f82: (connection evicted)
[19:25:40] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@452d5330: (connection evicted)
[19:25:40] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@39106585: (connection evicted)
[19:25:40] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@6d2e615d: (connection evicted)
[19:25:40] HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[19:25:40] HikariDataSource - HikariPool-1 - Shutdown completed.
[19:33:55] logging - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[19:33:55] Version - HV000001: Hibernate Validator 6.0.9.Final
[19:33:55] TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[19:33:55] TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[19:33:55] TraversableResolvers - Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
[19:33:55] ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[19:33:55] ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[19:33:55] ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[19:33:55] ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[19:33:55] ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
[19:33:55] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[19:33:55] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[19:33:55] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[19:33:55] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[19:33:55] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[19:33:55] SbBookApplication - Starting SbBookApplication on wjfdeiMac.local with PID 2583 (/Users/wengjf/Server/SpringMVC/sb-book/target/classes started by wengjf in /Users/wengjf/Server/SpringMVC/sb-book)
[19:33:55] SbBookApplication - Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
[19:33:55] SbBookApplication - No active profile set, falling back to default profiles: default
[19:33:57] QuartzInitializerListener - Quartz Initializer Servlet loaded, initializing Scheduler...
[19:33:57] StdSchedulerFactory - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'qzDS'
[19:33:57] QuartzInitializerListener - Quartz Scheduler failed to initialize: org.quartz.SchedulerException: Could not initialize DataSource: qzDS [See nested exception: org.quartz.SchedulerException: ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' could not be instantiated. [See nested exception: java.lang.reflect.InvocationTargetException]]
[19:33:57] HikariConfig - Driver class com.mysql.jdbc.Driver found in Thread context class loader org.springframework.boot.devtools.restart.classloader.RestartClassLoader@57ced444
[19:33:57] HikariConfig - HikariPool-1 - configuration:
[19:33:57] HikariConfig - allowPoolSuspension.............false
[19:33:57] HikariConfig - autoCommit......................true
[19:33:57] HikariConfig - catalog.........................none
[19:33:57] HikariConfig - connectionInitSql...............none
[19:33:57] HikariConfig - connectionTestQuery.............none
[19:33:57] HikariConfig - connectionTimeout...............30000
[19:33:57] HikariConfig - dataSource......................none
[19:33:57] HikariConfig - dataSourceClassName.............none
[19:33:57] HikariConfig - dataSourceJNDI..................none
[19:33:57] HikariConfig - dataSourceProperties............{password=<masked>}
[19:33:57] HikariConfig - driverClassName................."com.mysql.jdbc.Driver"
[19:33:57] HikariConfig - healthCheckProperties...........{}
[19:33:57] HikariConfig - healthCheckRegistry.............none
[19:33:57] HikariConfig - idleTimeout.....................600000
[19:33:57] HikariConfig - initializationFailFast..........true
[19:33:57] HikariConfig - initializationFailTimeout.......1
[19:33:57] HikariConfig - isolateInternalQueries..........false
[19:33:57] HikariConfig - jdbc4ConnectionTest.............false
[19:33:57] HikariConfig - jdbcUrl.........................jdbc:mysql://localhost:3306/sbBook
[19:33:57] HikariConfig - leakDetectionThreshold..........0
[19:33:57] HikariConfig - maxLifetime.....................1800000
[19:33:57] HikariConfig - maximumPoolSize.................10
[19:33:57] HikariConfig - metricRegistry..................none
[19:33:57] HikariConfig - metricsTrackerFactory...........none
[19:33:57] HikariConfig - minimumIdle.....................10
[19:33:57] HikariConfig - password........................<masked>
[19:33:57] HikariConfig - poolName........................"HikariPool-1"
[19:33:57] HikariConfig - readOnly........................false
[19:33:57] HikariConfig - registerMbeans..................false
[19:33:57] HikariConfig - scheduledExecutor...............none
[19:33:57] HikariConfig - scheduledExecutorService........internal
[19:33:57] HikariConfig - schema..........................none
[19:33:57] HikariConfig - threadFactory...................internal
[19:33:57] HikariConfig - transactionIsolation............default
[19:33:57] HikariConfig - username........................"root"
[19:33:57] HikariConfig - validationTimeout...............5000
[19:33:57] HikariDataSource - HikariPool-1 - Starting...
[19:33:58] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@5a8b58e3
[19:33:58] HikariDataSource - HikariPool-1 - Start completed.
[19:33:58] LogHelper - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@57ced444
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/wengjf/Server/SpringMVC/sb-book/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.monk.sbbook.entity.LoginTicket
		com.monk.sbbook.entity.User]
	Mapping files names []
	Properties []
[19:33:58] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[19:33:58] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[19:33:58] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[19:33:58] IntegratorServiceImpl - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[19:33:58] HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
[19:33:58] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@2ec33135
[19:33:58] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@6d9d3f1e
[19:33:58] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@769911f9
[19:33:58] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@4005227a
[19:33:58] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@8d99600
[19:33:58] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@3b4fbb66
[19:33:58] Version - HHH000412: Hibernate Core {5.2.16.Final}
[19:33:58] Environment - HHH000206: hibernate.properties not found
[19:33:58] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@404cdfed
[19:33:58] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@583cec31
[19:33:58] HikariPool - HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@7cc4e5f
[19:33:58] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[19:33:58] HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[19:33:58] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[19:33:58] Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[19:33:58] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7ae4c4a2
[19:33:58] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7ae4c4a2
[19:33:58] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7ae4c4a2
[19:33:58] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7d80f21e
[19:33:58] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@475adb0d
[19:33:58] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@5c976497
[19:33:58] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@56006bf7
[19:33:58] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@56006bf7
[19:33:58] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@56006bf7
[19:33:58] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3b97b47a
[19:33:58] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3b97b47a
[19:33:58] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3b97b47a
[19:33:58] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2e68555d
[19:33:58] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2e68555d
[19:33:58] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2e68555d
[19:33:58] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@251d54ec
[19:33:58] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@251d54ec
[19:33:58] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@251d54ec
[19:33:58] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3e174ddb
[19:33:58] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@3e174ddb
[19:33:58] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3e174ddb
[19:33:58] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2f21e412
[19:33:58] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2f21e412
[19:33:58] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2f21e412
[19:33:58] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c938fd5
[19:33:58] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c938fd5
[19:33:58] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c938fd5
[19:33:58] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4060003c
[19:33:58] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4060003c
[19:33:58] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3d2ca042
[19:33:58] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3d2ca042
[19:33:58] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@55fb45b4
[19:33:58] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@55fb45b4
[19:33:58] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@70ddd620
[19:33:58] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@325e170b
[19:33:58] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@2caeaa87
[19:33:58] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2caeaa87
[19:33:58] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@28beeecb
[19:33:58] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@28beeecb
[19:33:58] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@21e2097e
[19:33:58] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@21e2097e
[19:33:58] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@7cb232f
[19:33:58] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@7cb232f
[19:33:58] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@40090c4b
[19:33:58] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@40090c4b
[19:33:58] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2c430f3b
[19:33:58] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2c430f3b
[19:33:58] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e71700e
[19:33:58] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5e71700e
[19:33:58] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@264a1cd5
[19:33:58] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@264a1cd5
[19:33:58] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@567ed2e9
[19:33:58] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@567ed2e9
[19:33:58] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@87c90b8
[19:33:58] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@87c90b8
[19:33:58] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@7b9cd2f3
[19:33:58] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7b9cd2f3
[19:33:58] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@83b33be
[19:33:58] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@83b33be
[19:33:58] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@83b33be
[19:33:58] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1f86e7d1
[19:33:58] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5c23fa15
[19:33:58] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5c23fa15
[19:33:58] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5c23fa15
[19:33:58] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@64bbaa7a
[19:33:58] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@72d864e1
[19:33:58] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@72d864e1
[19:33:58] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2ea6310a
[19:33:58] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2ea6310a
[19:33:58] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@14c2d010
[19:33:58] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@14c2d010
[19:33:58] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1da4fca0
[19:33:58] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1da4fca0
[19:33:58] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6ea6abde
[19:33:58] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6ea6abde
[19:33:58] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3770fa66
[19:33:58] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1b0a840b
[19:33:58] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1b0a840b
[19:33:58] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1b0a840b
[19:33:58] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5c06e841
[19:33:58] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5c06e841
[19:33:58] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5c06e841
[19:33:58] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@23232535
[19:33:58] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@40f23571
[19:33:58] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@49ff4730
[19:33:58] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@49ff4730
[19:33:58] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@49ff4730
[19:33:58] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@790d6222
[19:33:58] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@790d6222
[19:33:58] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@790d6222
[19:33:58] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@57bb524
[19:33:58] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5a247072
[19:33:58] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5005564e
[19:33:58] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5005564e
[19:33:58] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@27d9ecd1
[19:33:58] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7524c343
[19:33:58] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7524c343
[19:33:58] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@3429f793
[19:33:58] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@3429f793
[19:33:58] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@187beb58
[19:33:58] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5e66f44
[19:33:58] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@57251bd0
[19:33:58] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@49978e4d
[19:33:58] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49978e4d
[19:33:58] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5759a1c8
[19:33:58] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@22c9a888
[19:33:58] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3f2bd584
[19:33:58] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3966429c
[19:33:58] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@23abf399
[19:33:58] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c49828c
[19:33:58] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2d2fe974
[19:33:58] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@26563cef
[19:33:58] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.22
      major : 5
      minor : 7
[19:33:58] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.46 ( Revision: 9cc87a48e75c2d2e87c1a293b2862ce651cb256e )
      major : 5
      minor : 1
[19:33:58] JdbcEnvironmentInitiator - JDBC version : 4.0
[19:33:58] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[19:33:58] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[19:33:58] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[19:33:58] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[19:33:58] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[19:33:58] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[19:33:58] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[19:33:58] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[19:33:58] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[19:33:58] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[19:33:58] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[19:33:58] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[19:33:58] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[19:33:58] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[19:33:58] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[19:33:58] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[19:33:58] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[19:33:58] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[19:33:58] AnnotationBinder - Binding entity from annotated class: com.monk.sbbook.entity.LoginTicket
[19:33:58] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[19:33:58] EntityBinder - Import with entity name LoginTicket
[19:33:58] EntityBinder - Bind entity com.monk.sbbook.entity.LoginTicket on table login_ticket
[19:33:58] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_userid, insertable=true, updatable=true, unique=false}
[19:33:58] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[19:33:58] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:userId]
[19:33:58] SimpleValueBinder - building SimpleValue for userId
[19:33:58] PropertyBinder - Building property userId
[19:33:58] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_expired, insertable=true, updatable=true, unique=false}
[19:33:58] PropertyBinder - MetadataSourceProcessor property expired with lazy=false
[19:33:58] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:expired]
[19:33:58] SimpleValueBinder - building SimpleValue for expired
[19:33:58] PropertyBinder - Building property expired
[19:33:58] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_status, insertable=true, updatable=true, unique=false}
[19:33:58] PropertyBinder - MetadataSourceProcessor property status with lazy=false
[19:33:58] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:status]
[19:33:58] SimpleValueBinder - building SimpleValue for status
[19:33:58] PropertyBinder - Building property status
[19:33:58] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(login_ticket), mappingColumn=t_ticket, insertable=true, updatable=true, unique=false}
[19:33:58] PropertyBinder - MetadataSourceProcessor property ticket with lazy=false
[19:33:58] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.LoginTicket:ticket]
[19:33:58] SimpleValueBinder - building SimpleValue for ticket
[19:33:58] PropertyBinder - Building property ticket
[19:33:58] AnnotationBinder - Binding entity from annotated class: com.monk.sbbook.entity.User
[19:33:58] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[19:33:58] EntityBinder - Import with entity name User
[19:33:58] EntityBinder - Bind entity com.monk.sbbook.entity.User on table user
[19:33:58] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_id, insertable=true, updatable=true, unique=false}
[19:33:58] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[19:33:58] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:id]
[19:33:58] SimpleValueBinder - building SimpleValue for id
[19:33:58] PropertyBinder - Building property id
[19:33:58] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_email, insertable=true, updatable=true, unique=false}
[19:33:58] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[19:33:58] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:email]
[19:33:58] SimpleValueBinder - building SimpleValue for email
[19:33:58] PropertyBinder - Building property email
[19:33:58] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_head_url, insertable=true, updatable=true, unique=false}
[19:33:58] PropertyBinder - MetadataSourceProcessor property headUrl with lazy=false
[19:33:58] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:headUrl]
[19:33:58] SimpleValueBinder - building SimpleValue for headUrl
[19:33:58] PropertyBinder - Building property headUrl
[19:33:58] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_mobile, insertable=true, updatable=true, unique=false}
[19:33:58] PropertyBinder - MetadataSourceProcessor property mobile with lazy=false
[19:33:58] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:mobile]
[19:33:58] SimpleValueBinder - building SimpleValue for mobile
[19:33:58] PropertyBinder - Building property mobile
[19:33:58] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_password, insertable=true, updatable=true, unique=false}
[19:33:58] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[19:33:58] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:password]
[19:33:58] SimpleValueBinder - building SimpleValue for password
[19:33:58] PropertyBinder - Building property password
[19:33:58] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_role, insertable=true, updatable=true, unique=false}
[19:33:58] PropertyBinder - MetadataSourceProcessor property role with lazy=false
[19:33:58] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:role]
[19:33:58] SimpleValueBinder - building SimpleValue for role
[19:33:58] PropertyBinder - Building property role
[19:33:58] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_salt, insertable=true, updatable=true, unique=false}
[19:33:58] PropertyBinder - MetadataSourceProcessor property salt with lazy=false
[19:33:58] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:salt]
[19:33:58] SimpleValueBinder - building SimpleValue for salt
[19:33:58] PropertyBinder - Building property salt
[19:33:58] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=t_username, insertable=true, updatable=true, unique=true}
[19:33:58] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[19:33:58] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.monk.sbbook.entity.User:username]
[19:33:58] SimpleValueBinder - building SimpleValue for username
[19:33:58] PropertyBinder - Building property username
[19:33:58] SimpleValueBinder - Starting fillSimpleValue for userId
[19:33:58] SimpleValueBinder - Starting fillSimpleValue for expired
[19:33:58] SimpleValueBinder - Starting fillSimpleValue for status
[19:33:58] SimpleValueBinder - Starting fillSimpleValue for ticket
[19:33:58] SimpleValueBinder - Starting fillSimpleValue for id
[19:33:58] SimpleValueBinder - Starting fillSimpleValue for email
[19:33:58] SimpleValueBinder - Starting fillSimpleValue for headUrl
[19:33:58] SimpleValueBinder - Starting fillSimpleValue for mobile
[19:33:58] SimpleValueBinder - Starting fillSimpleValue for password
[19:33:58] SimpleValueBinder - Starting fillSimpleValue for role
[19:33:58] SimpleValueBinder - Starting fillSimpleValue for salt
[19:33:58] SimpleValueBinder - Starting fillSimpleValue for username
[19:33:58] PrimaryKey - Forcing column [t_userid] to be non-null as it is part of the primary key for table [login_ticket]
[19:33:58] PrimaryKey - Forcing column [t_id] to be non-null as it is part of the primary key for table [user]
[19:33:58] SessionFactoryImpl - Building session factory
[19:33:58] Settings - SessionFactory name : null
[19:33:58] Settings - Automatic flush during beforeCompletion(): enabled
[19:33:58] Settings - Automatic session close at end of transaction: disabled
[19:33:58] Settings - Statistics: disabled
[19:33:58] Settings - Deleted entity synthetic identifier rollback: disabled
[19:33:58] Settings - Default entity-mode: pojo
[19:33:58] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[19:33:58] Settings - Allow initialization of lazy state outside session : disabled
[19:33:58] Settings - Using BatchFetchStyle : LEGACY
[19:33:58] Settings - Default batch fetch size: -1
[19:33:58] Settings - Maximum outer join fetch depth: 2
[19:33:58] Settings - Default null ordering: NONE
[19:33:58] Settings - Order SQL updates by primary key: disabled
[19:33:58] Settings - Order SQL inserts for batching: disabled
[19:33:58] Settings - multi-tenancy strategy : NONE
[19:33:58] Settings - JTA Track by Thread: enabled
[19:33:58] Settings - Query language substitutions: {}
[19:33:58] Settings - JPA query language strict compliance: disabled
[19:33:58] Settings - Named query checking : enabled
[19:33:58] Settings - Second-level cache: enabled
[19:33:58] Settings - Second-level query cache: disabled
[19:33:58] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@63ea9065
[19:33:58] Settings - Second-level cache region prefix: null
[19:33:58] Settings - Optimize second-level cache for minimal puts: disabled
[19:33:58] Settings - Structured second-level cache entries: disabled
[19:33:58] Settings - Second-level cache direct-reference entries: disabled
[19:33:58] Settings - Automatic eviction of collection cache: disabled
[19:33:58] Settings - JDBC batch size: 15
[19:33:58] Settings - JDBC batch updates for versioned data: enabled
[19:33:58] Settings - Scrollable result sets: enabled
[19:33:58] Settings - Wrap result sets: disabled
[19:33:58] Settings - JDBC3 getGeneratedKeys(): enabled
[19:33:58] Settings - JDBC result set fetch size: null
[19:33:58] Settings - Connection release mode: ON_CLOSE
[19:33:58] Settings - Generate SQL with comments: disabled
[19:33:58] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[19:33:58] SessionFactoryImpl - Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.id.new_generator_mappings=true, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, com.sun.management.jmxremote.authenticate=false, java.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/lib/tools.jar:/Users/wengjf/Server/SpringMVC/sb-book/target/classes:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.0.1.RELEASE/spring-boot-starter-web-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.0.1.RELEASE/spring-boot-starter-json-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.5/jackson-databind-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.0/jackson-annotations-2.9.0.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.5/jackson-core-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.9.5/jackson-datatype-jdk8-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.9.5/jackson-datatype-jsr310-2.9.5.jar:/Users/wengjf/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.9.5/jackson-module-parameter-names-2.9.5.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.0.1.RELEASE/spring-boot-starter-tomcat-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/8.5.29/tomcat-embed-websocket-8.5.29.jar:/Users/wengjf/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.9.Final/hibernate-validator-6.0.9.Final.jar:/Users/wengjf/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/Users/wengjf/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/Users/wengjf/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/Users/wengjf/.m2/repository/org/springframework/spring-web/5.0.5.RELEASE/spring-web-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-webmvc/5.0.5.RELEASE/spring-webmvc-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-aop/5.0.5.RELEASE/spring-aop-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-expression/5.0.5.RELEASE/spring-expression-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-core/5.0.5.RELEASE/spring-core-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-jcl/5.0.5.RELEASE/spring-jcl-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter/2.0.1.RELEASE/spring-boot-starter-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot/2.0.1.RELEASE/spring-boot-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.0.1.RELEASE/spring-boot-autoconfigure-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:/Users/wengjf/.m2/repository/org/yaml/snakeyaml/1.19/snakeyaml-1.19.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-log4j/1.3.8.RELEASE/spring-boot-starter-log4j-1.3.8.RELEASE.jar:/Users/wengjf/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar:/Users/wengjf/.m2/repository/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar:/Users/wengjf/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar:/Users/wengjf/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-devtools/2.0.1.RELEASE/spring-boot-devtools-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-jasper/8.5.29/tomcat-embed-jasper-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/8.5.29/tomcat-embed-core-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/tomcat-annotations-api/8.5.29/tomcat-annotations-api-8.5.29.jar:/Users/wengjf/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/8.5.29/tomcat-embed-el-8.5.29.jar:/Users/wengjf/.m2/repository/org/eclipse/jdt/ecj/3.12.3/ecj-3.12.3.jar:/Users/wengjf/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/Users/wengjf/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar:/Users/wengjf/.m2/repository/mysql/mysql-connector-java/5.1.46/mysql-connector-java-5.1.46.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.0.1.RELEASE/spring-boot-starter-data-jpa-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.0.1.RELEASE/spring-boot-starter-aop-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/aspectj/aspectjweaver/1.8.13/aspectjweaver-1.8.13.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.0.1.RELEASE/spring-boot-starter-jdbc-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/com/zaxxer/HikariCP/2.7.8/HikariCP-2.7.8.jar:/Users/wengjf/.m2/repository/org/springframework/spring-jdbc/5.0.5.RELEASE/spring-jdbc-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/hibernate/hibernate-core/5.2.16.Final/hibernate-core-5.2.16.Final.jar:/Users/wengjf/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/Users/wengjf/.m2/repository/org/javassist/javassist/3.22.0-GA/javassist-3.22.0-GA.jar:/Users/wengjf/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/wengjf/.m2/repository/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/Users/wengjf/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/Users/wengjf/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/Users/wengjf/.m2/repository/javax/transaction/javax.transaction-api/1.2/javax.transaction-api-1.2.jar:/Users/wengjf/.m2/repository/org/springframework/data/spring-data-jpa/2.0.6.RELEASE/spring-data-jpa-2.0.6.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/data/spring-data-commons/2.0.6.RELEASE/spring-data-commons-2.0.6.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-orm/5.0.5.RELEASE/spring-orm-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-tx/5.0.5.RELEASE/spring-tx-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-aspects/5.0.5.RELEASE/spring-aspects-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/boot/spring-boot-starter-mail/2.0.1.RELEASE/spring-boot-starter-mail-2.0.1.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-context/5.0.5.RELEASE/spring-context-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/com/sun/mail/javax.mail/1.6.1/javax.mail-1.6.1.jar:/Users/wengjf/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/wengjf/.m2/repository/org/quartz-scheduler/quartz/2.3.0/quartz-2.3.0.jar:/Users/wengjf/.m2/repository/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar:/Users/wengjf/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/Users/wengjf/.m2/repository/org/quartz-scheduler/quartz-jobs/2.3.0/quartz-jobs-2.3.0.jar:/Users/wengjf/.m2/repository/org/springframework/spring-context-support/5.0.5.RELEASE/spring-context-support-5.0.5.RELEASE.jar:/Users/wengjf/.m2/repository/org/springframework/spring-beans/5.0.5.RELEASE/spring-beans-5.0.5.RELEASE.jar:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, catalina.useNaming=false, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Macau, os.name=Mac OS X, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CN, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib, com.sun.management.jmxremote.ssl=false, spring.application.admin.enabled=true, sun.java.command=com.monk.sbbook.SbBookApplication, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@426eb3fe, com.sun.management.jmxremote=, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, javax.persistence.sharedCache.mode=UNSPECIFIED, spring.liveBeansView.mbeanDomain=, sun.cpu.endian=little, user.home=/Users/wengjf, user.language=zh, java.specification.vendor=Oracle Corporation, java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre, spring.output.ansi.enabled=always, file.separator=/, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, java.awt.headless=true, sun.boot.class.path=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/classes, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=1.8.0_171-b11, user.name=wengjf, path.separator=:, os.version=10.13.2, java.endorsed.dirs=/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, spring.beaninfo.ignore=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/, com.zaxxer.hikari.pool_number=1, catalina.home=/private/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/tomcat.6547301225195847778.8080, com.sun.management.jmxremote.port=65287, java.version=1.8.0_171, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/Users/wengjf/Server/SpringMVC/sb-book, os.arch=x86_64, PID=2583, java.vm.specification.name=Java Virtual Machine Specification, user.language.format=en, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, catalina.base=/private/var/folders/0w/1jq5c81s5g15hzzhnwm8497w0000gp/T/tomcat.6547301225195847778.8080, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@71f00b69, java.library.path=/Users/wengjf/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.171-b11, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=127.0.0.1, hibernate.connection.datasource=HikariDataSource (HikariPool-1), sun.io.unicode.encoding=UnicodeBig, java.ext.dirs=/Users/wengjf/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java, java.class.version=52.0, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16}
[19:33:58] TraversableResolvers - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[19:33:58] TraversableResolvers - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[19:33:58] TraversableResolvers - Unable to load or instantiate JPA aware resolver org.hibernate.validator.internal.engine.resolver.JPATraversableResolver. All properties will per default be traversable.
[19:33:58] ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
[19:33:58] ResourceLoaderHelper - Trying to load META-INF/validation.xml via TCCL
[19:33:58] ResourceLoaderHelper - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[19:33:58] ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
[19:33:58] ResourceBundleMessageInterpolator - Loaded expression factory via original TCCL
[19:33:58] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[19:33:58] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[19:33:58] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[19:33:58] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[19:33:58] ValidatorFactoryImpl - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[19:33:58] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:33:58] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:33:58] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:33:58] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:33:58] JaccIntegrator - Skipping JACC integration as it was not enabled
[19:33:58] CascadeStyles - External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[19:33:58] SessionFactoryImpl - Instantiated session factory
[19:33:59] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:33:59] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:33:59] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.LoginTicket] is safe
[19:33:59] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.LoginTicket
[19:33:59] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:33:59] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:33:59] ClassLoaderAccessImpl - Not known whether passed class name [com.monk.sbbook.entity.User] is safe
[19:33:59] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.monk.sbbook.entity.User
[19:33:59] AbstractEntityPersister - Static SQL for entity: com.monk.sbbook.entity.LoginTicket
[19:33:59] AbstractEntityPersister -  Version select: select t_userid from login_ticket where t_userid =?
[19:33:59] AbstractEntityPersister -  Snapshot select: select loginticke_.t_userid, loginticke_.t_expired as t_expire2_0_, loginticke_.t_status as t_status3_0_, loginticke_.t_ticket as t_ticket4_0_ from login_ticket loginticke_ where loginticke_.t_userid=?
[19:33:59] AbstractEntityPersister -  Insert 0: insert into login_ticket (t_expired, t_status, t_ticket, t_userid) values (?, ?, ?, ?)
[19:33:59] AbstractEntityPersister -  Update 0: update login_ticket set t_expired=?, t_status=?, t_ticket=? where t_userid=?
[19:33:59] AbstractEntityPersister -  Delete 0: delete from login_ticket where t_userid=?
[19:33:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26649368]
[19:33:59] MetamodelGraphWalker - Visiting attribute path : expired
[19:33:59] MetamodelGraphWalker - Visiting attribute path : status
[19:33:59] MetamodelGraphWalker - Visiting attribute path : ticket
[19:33:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:33:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:33:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:33:59] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [NONE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:33:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e184786]
[19:33:59] MetamodelGraphWalker - Visiting attribute path : expired
[19:33:59] MetamodelGraphWalker - Visiting attribute path : status
[19:33:59] MetamodelGraphWalker - Visiting attribute path : ticket
[19:33:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:33:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:33:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:33:59] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [READ]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:33:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c87f9cd]
[19:33:59] MetamodelGraphWalker - Visiting attribute path : expired
[19:33:59] MetamodelGraphWalker - Visiting attribute path : status
[19:33:59] MetamodelGraphWalker - Visiting attribute path : ticket
[19:33:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:33:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:33:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:33:59] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:33:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b156062]
[19:33:59] MetamodelGraphWalker - Visiting attribute path : expired
[19:33:59] MetamodelGraphWalker - Visiting attribute path : status
[19:33:59] MetamodelGraphWalker - Visiting attribute path : ticket
[19:33:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:33:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:33:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:33:59] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE_NOWAIT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:33:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68f1edc5]
[19:33:59] MetamodelGraphWalker - Visiting attribute path : expired
[19:33:59] MetamodelGraphWalker - Visiting attribute path : status
[19:33:59] MetamodelGraphWalker - Visiting attribute path : ticket
[19:33:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:33:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:33:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:33:59] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [UPGRADE_SKIPLOCKED]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:33:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56af931d]
[19:33:59] MetamodelGraphWalker - Visiting attribute path : expired
[19:33:59] MetamodelGraphWalker - Visiting attribute path : status
[19:33:59] MetamodelGraphWalker - Visiting attribute path : ticket
[19:33:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:33:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:33:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:33:59] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [FORCE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:33:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1389ebe0]
[19:33:59] MetamodelGraphWalker - Visiting attribute path : expired
[19:33:59] MetamodelGraphWalker - Visiting attribute path : status
[19:33:59] MetamodelGraphWalker - Visiting attribute path : ticket
[19:33:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:33:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:33:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:33:59] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_READ]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? lock in share mode
[19:33:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50baac34]
[19:33:59] MetamodelGraphWalker - Visiting attribute path : expired
[19:33:59] MetamodelGraphWalker - Visiting attribute path : status
[19:33:59] MetamodelGraphWalker - Visiting attribute path : ticket
[19:33:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:33:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:33:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:33:59] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_WRITE]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:33:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7543cb30]
[19:33:59] MetamodelGraphWalker - Visiting attribute path : expired
[19:33:59] MetamodelGraphWalker - Visiting attribute path : status
[19:33:59] MetamodelGraphWalker - Visiting attribute path : ticket
[19:33:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:33:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:33:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:33:59] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [PESSIMISTIC_FORCE_INCREMENT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=? for update
[19:33:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35079472]
[19:33:59] MetamodelGraphWalker - Visiting attribute path : expired
[19:33:59] MetamodelGraphWalker - Visiting attribute path : status
[19:33:59] MetamodelGraphWalker - Visiting attribute path : ticket
[19:33:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:33:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:33:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:33:59] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [OPTIMISTIC]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:33:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38417bae]
[19:33:59] MetamodelGraphWalker - Visiting attribute path : expired
[19:33:59] MetamodelGraphWalker - Visiting attribute path : status
[19:33:59] MetamodelGraphWalker - Visiting attribute path : ticket
[19:33:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:33:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:33:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.LoginTicket)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.LoginTicket, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.LoginTicket)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.LoginTicket)
          - SQL table alias mapping - loginticke0_
          - alias suffix - 0_
          - suffixed key columns - {t_userid1_0_0_}

[19:33:59] EntityLoader - Static select for entity com.monk.sbbook.entity.LoginTicket [OPTIMISTIC_FORCE_INCREMENT]: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:33:59] Loader - Static select for action ACTION_MERGE on entity com.monk.sbbook.entity.LoginTicket: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:33:59] Loader - Static select for action ACTION_REFRESH on entity com.monk.sbbook.entity.LoginTicket: select loginticke0_.t_userid as t_userid1_0_0_, loginticke0_.t_expired as t_expire2_0_0_, loginticke0_.t_status as t_status3_0_0_, loginticke0_.t_ticket as t_ticket4_0_0_ from login_ticket loginticke0_ where loginticke0_.t_userid=?
[19:33:59] AbstractEntityPersister - Static SQL for entity: com.monk.sbbook.entity.User
[19:33:59] AbstractEntityPersister -  Version select: select t_id from user where t_id =?
[19:33:59] AbstractEntityPersister -  Snapshot select: select user_.t_id, user_.t_email as t_email2_1_, user_.t_head_url as t_head_u3_1_, user_.t_mobile as t_mobile4_1_, user_.t_password as t_passwo5_1_, user_.t_role as t_role6_1_, user_.t_salt as t_salt7_1_, user_.t_username as t_userna8_1_ from user user_ where user_.t_id=?
[19:33:59] AbstractEntityPersister -  Insert 0: insert into user (t_email, t_head_url, t_mobile, t_password, t_role, t_salt, t_username, t_id) values (?, ?, ?, ?, ?, ?, ?, ?)
[19:33:59] AbstractEntityPersister -  Update 0: update user set t_email=?, t_head_url=?, t_mobile=?, t_password=?, t_role=?, t_salt=?, t_username=? where t_id=?
[19:33:59] AbstractEntityPersister -  Delete 0: delete from user where t_id=?
[19:33:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20958621]
[19:33:59] MetamodelGraphWalker - Visiting attribute path : email
[19:33:59] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:33:59] MetamodelGraphWalker - Visiting attribute path : mobile
[19:33:59] MetamodelGraphWalker - Visiting attribute path : password
[19:33:59] MetamodelGraphWalker - Visiting attribute path : role
[19:33:59] MetamodelGraphWalker - Visiting attribute path : salt
[19:33:59] MetamodelGraphWalker - Visiting attribute path : username
[19:33:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:33:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:33:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:33:59] EntityLoader - Static select for entity com.monk.sbbook.entity.User [NONE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:33:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a457145]
[19:33:59] MetamodelGraphWalker - Visiting attribute path : email
[19:33:59] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:33:59] MetamodelGraphWalker - Visiting attribute path : mobile
[19:33:59] MetamodelGraphWalker - Visiting attribute path : password
[19:33:59] MetamodelGraphWalker - Visiting attribute path : role
[19:33:59] MetamodelGraphWalker - Visiting attribute path : salt
[19:33:59] MetamodelGraphWalker - Visiting attribute path : username
[19:33:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:33:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:33:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:33:59] EntityLoader - Static select for entity com.monk.sbbook.entity.User [READ]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:33:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@290f2503]
[19:33:59] MetamodelGraphWalker - Visiting attribute path : email
[19:33:59] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:33:59] MetamodelGraphWalker - Visiting attribute path : mobile
[19:33:59] MetamodelGraphWalker - Visiting attribute path : password
[19:33:59] MetamodelGraphWalker - Visiting attribute path : role
[19:33:59] MetamodelGraphWalker - Visiting attribute path : salt
[19:33:59] MetamodelGraphWalker - Visiting attribute path : username
[19:33:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:33:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:33:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:33:59] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:33:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b5fe98f]
[19:33:59] MetamodelGraphWalker - Visiting attribute path : email
[19:33:59] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:33:59] MetamodelGraphWalker - Visiting attribute path : mobile
[19:33:59] MetamodelGraphWalker - Visiting attribute path : password
[19:33:59] MetamodelGraphWalker - Visiting attribute path : role
[19:33:59] MetamodelGraphWalker - Visiting attribute path : salt
[19:33:59] MetamodelGraphWalker - Visiting attribute path : username
[19:33:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:33:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:33:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:33:59] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE_NOWAIT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:33:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@464a444e]
[19:33:59] MetamodelGraphWalker - Visiting attribute path : email
[19:33:59] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:33:59] MetamodelGraphWalker - Visiting attribute path : mobile
[19:33:59] MetamodelGraphWalker - Visiting attribute path : password
[19:33:59] MetamodelGraphWalker - Visiting attribute path : role
[19:33:59] MetamodelGraphWalker - Visiting attribute path : salt
[19:33:59] MetamodelGraphWalker - Visiting attribute path : username
[19:33:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:33:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:33:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:33:59] EntityLoader - Static select for entity com.monk.sbbook.entity.User [UPGRADE_SKIPLOCKED]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:33:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f7f6ff1]
[19:33:59] MetamodelGraphWalker - Visiting attribute path : email
[19:33:59] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:33:59] MetamodelGraphWalker - Visiting attribute path : mobile
[19:33:59] MetamodelGraphWalker - Visiting attribute path : password
[19:33:59] MetamodelGraphWalker - Visiting attribute path : role
[19:33:59] MetamodelGraphWalker - Visiting attribute path : salt
[19:33:59] MetamodelGraphWalker - Visiting attribute path : username
[19:33:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:33:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:33:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:33:59] EntityLoader - Static select for entity com.monk.sbbook.entity.User [FORCE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:33:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7af7ab6b]
[19:33:59] MetamodelGraphWalker - Visiting attribute path : email
[19:33:59] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:33:59] MetamodelGraphWalker - Visiting attribute path : mobile
[19:33:59] MetamodelGraphWalker - Visiting attribute path : password
[19:33:59] MetamodelGraphWalker - Visiting attribute path : role
[19:33:59] MetamodelGraphWalker - Visiting attribute path : salt
[19:33:59] MetamodelGraphWalker - Visiting attribute path : username
[19:33:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:33:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:33:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:33:59] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_READ]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? lock in share mode
[19:33:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@274f2998]
[19:33:59] MetamodelGraphWalker - Visiting attribute path : email
[19:33:59] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:33:59] MetamodelGraphWalker - Visiting attribute path : mobile
[19:33:59] MetamodelGraphWalker - Visiting attribute path : password
[19:33:59] MetamodelGraphWalker - Visiting attribute path : role
[19:33:59] MetamodelGraphWalker - Visiting attribute path : salt
[19:33:59] MetamodelGraphWalker - Visiting attribute path : username
[19:33:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:33:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:33:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:33:59] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_WRITE]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:33:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32b6a42e]
[19:33:59] MetamodelGraphWalker - Visiting attribute path : email
[19:33:59] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:33:59] MetamodelGraphWalker - Visiting attribute path : mobile
[19:33:59] MetamodelGraphWalker - Visiting attribute path : password
[19:33:59] MetamodelGraphWalker - Visiting attribute path : role
[19:33:59] MetamodelGraphWalker - Visiting attribute path : salt
[19:33:59] MetamodelGraphWalker - Visiting attribute path : username
[19:33:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:33:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:33:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:33:59] EntityLoader - Static select for entity com.monk.sbbook.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=? for update
[19:33:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31aa8f42]
[19:33:59] MetamodelGraphWalker - Visiting attribute path : email
[19:33:59] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:33:59] MetamodelGraphWalker - Visiting attribute path : mobile
[19:33:59] MetamodelGraphWalker - Visiting attribute path : password
[19:33:59] MetamodelGraphWalker - Visiting attribute path : role
[19:33:59] MetamodelGraphWalker - Visiting attribute path : salt
[19:33:59] MetamodelGraphWalker - Visiting attribute path : username
[19:33:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:33:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:33:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:33:59] EntityLoader - Static select for entity com.monk.sbbook.entity.User [OPTIMISTIC]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:33:59] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c55b765]
[19:33:59] MetamodelGraphWalker - Visiting attribute path : email
[19:33:59] MetamodelGraphWalker - Visiting attribute path : headUrl
[19:33:59] MetamodelGraphWalker - Visiting attribute path : mobile
[19:33:59] MetamodelGraphWalker - Visiting attribute path : password
[19:33:59] MetamodelGraphWalker - Visiting attribute path : role
[19:33:59] MetamodelGraphWalker - Visiting attribute path : salt
[19:33:59] MetamodelGraphWalker - Visiting attribute path : username
[19:33:59] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[19:33:59] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[19:33:59] LoadPlanTreePrinter - LoadPlan(entity=com.monk.sbbook.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.monk.sbbook.entity.User, querySpaceUid=<gen:0>, path=com.monk.sbbook.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.monk.sbbook.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {t_id1_1_0_}

[19:33:59] EntityLoader - Static select for entity com.monk.sbbook.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:33:59] Loader - Static select for action ACTION_MERGE on entity com.monk.sbbook.entity.User: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:33:59] Loader - Static select for action ACTION_REFRESH on entity com.monk.sbbook.entity.User: select user0_.t_id as t_id1_1_0_, user0_.t_email as t_email2_1_0_, user0_.t_head_url as t_head_u3_1_0_, user0_.t_mobile as t_mobile4_1_0_, user0_.t_password as t_passwo5_1_0_, user0_.t_role as t_role6_1_0_, user0_.t_salt as t_salt7_1_0_, user0_.t_username as t_userna8_1_0_ from user user0_ where user0_.t_id=?
[19:33:59] Table - No alter strings for table : hibernate_sequence
[19:33:59] Table - No alter strings for table : login_ticket
[19:33:59] Table - No alter strings for table : user
[19:33:59] NamedQueryRepository - Checking 0 named HQL queries
[19:33:59] NamedQueryRepository - Checking 0 named SQL queries
[19:33:59] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@77810d9c
[19:33:59] SessionFactoryRegistry - Registering SessionFactory: d83283a6-97fd-4595-b1de-a93042b16b00 (<unnamed>)
[19:33:59] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[19:33:59] StatisticsInitiator - Statistics initialized [enabled=false]
[19:33:59] QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5180624c
[19:33:59] QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
[19:33:59] QueryTranslatorImpl - parse() - HQL: update com.monk.sbbook.entity.LoginTicket u set u.status=?1 where u.ticket=?2
[19:33:59] ErrorCounter - throwQueryException() : no errors
[19:33:59] QueryTranslatorImpl - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  \-[IDENT] Node: 'monk'
    |     |  |  |  \-[IDENT] Node: 'sbbook'
    |     |  |  \-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'LoginTicket'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'status'
    |     \-[PARAM] Node: '?'
    |        \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'ticket'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '2'

[19:33:59] HqlSqlBaseWalker - update << begin [level=1, statement=update]
[19:33:59] FromElement - FromClause{level=1} : com.monk.sbbook.entity.LoginTicket (u) -> loginticke0_
[19:33:59] FromReferenceNode - Resolved : u -> t_userid
[19:33:59] DotNode - getDataType() : status -> org.hibernate.type.IntegerType@251d54ec
[19:33:59] FromReferenceNode - Resolved : u.status -> t_status
[19:33:59] FromReferenceNode - Resolved : u -> t_userid
[19:33:59] DotNode - getDataType() : ticket -> org.hibernate.type.StringType@55fb45b4
[19:33:59] FromReferenceNode - Resolved : u.ticket -> t_ticket
[19:33:59] HqlSqlBaseWalker - update : finishing up [level=1, statement=update]
[19:33:59] HqlSqlBaseWalker - update >> end [level=1, statement=update]
[19:33:59] QueryTranslatorImpl - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (login_ticket)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[loginticke0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'login_ticket' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=login_ticket,tableAlias=loginticke0_,origin=null,columns={,className=com.monk.sbbook.entity.LoginTicket}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 't_status' {propertyName=status,dereferenceType=PRIMITIVE,getPropertyPath=status,path=u.status,tableAlias=loginticke0_,className=com.monk.sbbook.entity.LoginTicket,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 't_userid' {alias=u, className=com.monk.sbbook.entity.LoginTicket, tableAlias=loginticke0_}
    |     |  \-[IDENT] IdentNode: 'status' {originalText=status}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.IntegerType@251d54ec}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 't_ticket' {propertyName=ticket,dereferenceType=PRIMITIVE,getPropertyPath=ticket,path=u.ticket,tableAlias=loginticke0_,className=com.monk.sbbook.entity.LoginTicket,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 't_userid' {alias=u, className=com.monk.sbbook.entity.LoginTicket, tableAlias=loginticke0_}
          |  \-[IDENT] IdentNode: 'ticket' {originalText=ticket}
          \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.StringType@55fb45b4}

[19:33:59] ErrorCounter - throwQueryException() : no errors
[19:33:59] ErrorCounter - throwQueryException() : no errors
[19:33:59] QueryTranslatorImpl - parse() - HQL: update com.monk.sbbook.entity.User u set u.username= ?1 where u.id= ?2
[19:33:59] ErrorCounter - throwQueryException() : no errors
[19:33:59] QueryTranslatorImpl - --- HQL AST ---
 \-[UPDATE] Node: 'update'
    +-[FROM] Node: 'FROM'
    |  \-[RANGE] Node: 'RANGE'
    |     +-[DOT] Node: '.'
    |     |  +-[DOT] Node: '.'
    |     |  |  +-[DOT] Node: '.'
    |     |  |  |  +-[DOT] Node: '.'
    |     |  |  |  |  +-[IDENT] Node: 'com'
    |     |  |  |  |  \-[IDENT] Node: 'monk'
    |     |  |  |  \-[IDENT] Node: 'sbbook'
    |     |  |  \-[IDENT] Node: 'entity'
    |     |  \-[IDENT] Node: 'User'
    |     \-[ALIAS] Node: 'u'
    +-[SET] Node: 'set'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'u'
    |     |  \-[IDENT] Node: 'username'
    |     \-[PARAM] Node: '?'
    |        \-[NUM_INT] Node: '1'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[PARAM] Node: '?'
             \-[NUM_INT] Node: '2'

[19:33:59] HqlSqlBaseWalker - update << begin [level=1, statement=update]
[19:33:59] FromElement - FromClause{level=1} : com.monk.sbbook.entity.User (u) -> user0_
[19:33:59] FromReferenceNode - Resolved : u -> t_id
[19:33:59] DotNode - getDataType() : username -> org.hibernate.type.StringType@55fb45b4
[19:33:59] FromReferenceNode - Resolved : u.username -> t_username
[19:33:59] FromReferenceNode - Resolved : u -> t_id
[19:33:59] DotNode - getDataType() : id -> org.hibernate.type.LongType@3e174ddb
[19:33:59] FromReferenceNode - Resolved : u.id -> t_id
[19:33:59] HqlSqlBaseWalker - update : finishing up [level=1, statement=update]
[19:33:59] HqlSqlBaseWalker - update >> end [level=1, statement=update]
[19:33:59] QueryTranslatorImpl - --- SQL AST ---
 \-[UPDATE] UpdateStatement: 'update'  querySpaces (user)
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.monk.sbbook.entity.User}}
    +-[SET] SqlNode: 'set'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 't_username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=com.monk.sbbook.entity.User,classAlias=u}
    |     |  +-[ALIAS_REF] IdentNode: 't_id' {alias=u, className=com.monk.sbbook.entity.User, tableAlias=user0_}
    |     |  \-[IDENT] IdentNode: 'username' {originalText=username}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=1, expectedType=org.hibernate.type.StringType@55fb45b4}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 't_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=com.monk.sbbook.entity.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 't_id' {alias=u, className=com.monk.sbbook.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=2, expectedType=org.hibernate.type.LongType@3e174ddb}

[19:33:59] ErrorCounter - throwQueryException() : no errors
[19:33:59] ErrorCounter - throwQueryException() : no errors
[19:33:59] StdSchedulerFactory - Using ConnectionProvider class 'org.quartz.utils.C3p0PoolingConnectionProvider' for data source 'qzDS'
[19:33:59] SessionFactoryImpl - HHH000031: Closing
[19:33:59] CascadeStyles - External cascade style registration [persist : STYLE_PERSIST] overrode base registration [STYLE_PERSIST_SKIPLAZY]
[19:33:59] AbstractServiceRegistryImpl - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[19:33:59] BootstrapServiceRegistryImpl - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[19:33:59] HikariDataSource - HikariPool-1 - Shutdown initiated...
[19:33:59] HikariPool - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[19:33:59] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@5a8b58e3: (connection evicted)
[19:33:59] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@2ec33135: (connection evicted)
[19:33:59] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@6d9d3f1e: (connection evicted)
[19:33:59] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@769911f9: (connection evicted)
[19:33:59] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@4005227a: (connection evicted)
[19:33:59] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@8d99600: (connection evicted)
[19:33:59] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@3b4fbb66: (connection evicted)
[19:33:59] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@404cdfed: (connection evicted)
[19:33:59] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@583cec31: (connection evicted)
[19:33:59] PoolBase - HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@7cc4e5f: (connection evicted)
[19:33:59] HikariPool - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[19:33:59] HikariDataSource - HikariPool-1 - Shutdown completed.
[19:33:59] QuartzInitializerListener - Quartz Scheduler successful shutdown.
